!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(BINDIR)/$(TESTDIR)/%.o	Makefile	/^$(BINDIR)\/$(TESTDIR)\/%.o:	$(TESTDIR)\/%.cpp$/;"	t
$(BINDIR)/$(TESTDIR)/%.o	misc/Makefile	/^$(BINDIR)\/$(TESTDIR)\/%.o:	$(TESTDIR)\/%.cpp$/;"	t
$(BINDIR)/$(TESTDIR)/%.o	misc/deps/ezbuild/Makefile	/^$(BINDIR)\/$(TESTDIR)\/%.o:	$(TESTDIR)\/%.cpp$/;"	t
$(BINDIR)/%.o	Makefile	/^$(BINDIR)\/%.o:				$(BONUSDIR)\/%.c$/;"	t
$(BINDIR)/%.o	Makefile	/^$(BINDIR)\/%.o:				$(SRCDIR)\/%.c$/;"	t
$(BINDIR)/%.o	Makefile	/^$(BINDIR)\/%.o:				$(SRCDIR)\/%.cpp$/;"	t
$(BINDIR)/%.o	misc/Makefile	/^$(BINDIR)\/%.o:				$(SRCDIR)\/%.c$/;"	t
$(BINDIR)/%.o	misc/Makefile	/^$(BINDIR)\/%.o:				$(SRCDIR)\/%.cpp$/;"	t
$(BINDIR)/%.o	misc/deps/ezbuild/Makefile	/^$(BINDIR)\/%.o:				$(SRCDIR)\/%.c$/;"	t
$(BINDIR)/%.o	misc/deps/ezbuild/Makefile	/^$(BINDIR)\/%.o:				$(SRCDIR)\/%.cpp$/;"	t
$(NAME)	Makefile	/^$(NAME):                                        $(COBJ) $(CXXOBJ)$/;"	t
$(NAME)	misc/Makefile	/^$(NAME):                                        $(COBJ) $(CXXOBJ)$/;"	t
$(NAME)	misc/deps/ezbuild/Makefile	/^$(NAME):                                        $(COBJ) $(CXXOBJ)$/;"	t
020-TestCase	misc/deps/catch2/examples/CMakeLists.txt	/^add_executable( 020-TestCase ${EXAMPLES_DIR}\/020-TestCase-1.cpp ${EXAMPLES_DIR}\/020-TestCase-2/;"	t
1.10.0	misc/deps/catch2/docs/release-notes.md	/^#### 1.10.0$/;"	t
1.10.x	misc/deps/catch2/docs/release-notes.md	/^### 1.10.x$/;"	S
1.11.0	misc/deps/catch2/docs/release-notes.md	/^#### 1.11.0$/;"	t
1.11.x	misc/deps/catch2/docs/release-notes.md	/^### 1.11.x$/;"	S
1.12.0	misc/deps/catch2/docs/release-notes.md	/^#### 1.12.0$/;"	t
1.12.1	misc/deps/catch2/docs/release-notes.md	/^#### 1.12.1$/;"	t
1.12.2	misc/deps/catch2/docs/release-notes.md	/^#### 1.12.2$/;"	t
1.12.x	misc/deps/catch2/docs/release-notes.md	/^### 1.12.x$/;"	S
1.6.0	misc/deps/catch2/docs/release-notes.md	/^#### 1.6.0$/;"	t
1.6.1	misc/deps/catch2/docs/release-notes.md	/^#### 1.6.1$/;"	t
1.6.x	misc/deps/catch2/docs/release-notes.md	/^### 1.6.x$/;"	S
1.7.0	misc/deps/catch2/docs/release-notes.md	/^#### 1.7.0$/;"	t
1.7.1	misc/deps/catch2/docs/release-notes.md	/^#### 1.7.1$/;"	t
1.7.2	misc/deps/catch2/docs/release-notes.md	/^#### 1.7.2$/;"	t
1.7.x	misc/deps/catch2/docs/release-notes.md	/^### 1.7.x$/;"	S
1.8.0	misc/deps/catch2/docs/release-notes.md	/^#### 1.8.0$/;"	t
1.8.1	misc/deps/catch2/docs/release-notes.md	/^#### 1.8.1$/;"	t
1.8.2	misc/deps/catch2/docs/release-notes.md	/^#### 1.8.2$/;"	t
1.8.x	misc/deps/catch2/docs/release-notes.md	/^### 1.8.x$/;"	S
1.9.0	misc/deps/catch2/docs/release-notes.md	/^#### 1.9.0$/;"	t
1.9.1	misc/deps/catch2/docs/release-notes.md	/^#### 1.9.1$/;"	t
1.9.2	misc/deps/catch2/docs/release-notes.md	/^#### 1.9.2$/;"	t
1.9.3	misc/deps/catch2/docs/release-notes.md	/^#### 1.9.3$/;"	t
1.9.4	misc/deps/catch2/docs/release-notes.md	/^#### 1.9.4$/;"	t
1.9.5	misc/deps/catch2/docs/release-notes.md	/^#### 1.9.5$/;"	t
1.9.6	misc/deps/catch2/docs/release-notes.md	/^#### 1.9.6$/;"	t
1.9.x	misc/deps/catch2/docs/release-notes.md	/^### 1.9.x$/;"	S
2.0.1	misc/deps/catch2/docs/release-notes.md	/^## 2.0.1$/;"	s
2.1.0	misc/deps/catch2/docs/release-notes.md	/^## 2.1.0$/;"	s
2.1.1	misc/deps/catch2/docs/release-notes.md	/^## 2.1.1$/;"	s
2.1.2	misc/deps/catch2/docs/release-notes.md	/^## 2.1.2$/;"	s
2.10.0	misc/deps/catch2/docs/release-notes.md	/^## 2.10.0$/;"	s
2.10.1	misc/deps/catch2/docs/release-notes.md	/^## 2.10.1$/;"	s
2.10.2	misc/deps/catch2/docs/release-notes.md	/^## 2.10.2$/;"	s
2.2.0	misc/deps/catch2/docs/release-notes.md	/^## 2.2.0$/;"	s
2.2.1	misc/deps/catch2/docs/release-notes.md	/^## 2.2.1$/;"	s
2.2.2	misc/deps/catch2/docs/release-notes.md	/^## 2.2.2$/;"	s
2.2.3	misc/deps/catch2/docs/release-notes.md	/^## 2.2.3$/;"	s
2.3.0	misc/deps/catch2/docs/release-notes.md	/^## 2.3.0$/;"	s
2.4.0	misc/deps/catch2/docs/release-notes.md	/^## 2.4.0$/;"	s
2.4.1	misc/deps/catch2/docs/release-notes.md	/^## 2.4.1$/;"	s
2.4.2	misc/deps/catch2/docs/release-notes.md	/^## 2.4.2$/;"	s
2.5.0	misc/deps/catch2/docs/release-notes.md	/^## 2.5.0$/;"	s
2.6.0	misc/deps/catch2/docs/release-notes.md	/^## 2.6.0$/;"	s
2.6.1	misc/deps/catch2/docs/release-notes.md	/^## 2.6.1$/;"	s
2.7.0	misc/deps/catch2/docs/release-notes.md	/^## 2.7.0$/;"	s
2.7.1	misc/deps/catch2/docs/release-notes.md	/^## 2.7.1$/;"	s
2.7.2	misc/deps/catch2/docs/release-notes.md	/^## 2.7.2$/;"	s
2.8.0	misc/deps/catch2/docs/release-notes.md	/^## 2.8.0$/;"	s
2.9.0	misc/deps/catch2/docs/release-notes.md	/^## 2.9.0$/;"	s
2.9.1	misc/deps/catch2/docs/release-notes.md	/^## 2.9.1$/;"	s
2.9.2	misc/deps/catch2/docs/release-notes.md	/^## 2.9.2$/;"	s
207-Rpt-TeamCityReporter	misc/deps/catch2/examples/CMakeLists.txt	/^add_executable( 207-Rpt-TeamCityReporter ${EXAMPLES_DIR}\/207-Rpt-TeamCityReporter.cpp $<TARGET_/;"	t
3rd party bugs	misc/deps/catch2/docs/limitations.md	/^## 3rd party bugs$/;"	s
A	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct A {$/;"	s	namespace:__anonb1aeb3b90110::CompilationTests	file:
A	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace A {$/;"	n	file:
ADDITIONAL_FILES	misc/deps/catch2/CMake/Findcodecov.cmake	/^	set(ADDITIONAL_FILES "")$/;"	v	function:add_coverage_target
AND_GIVEN	misc/deps/catch2/include/catch.hpp	/^#define AND_GIVEN(/;"	d
AND_THEN	misc/deps/catch2/include/catch.hpp	/^#define AND_THEN(/;"	d
AND_WHEN	misc/deps/catch2/include/catch.hpp	/^#define AND_WHEN(/;"	d
ANON_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define ANON_TEST_CASE(/;"	d
APPROX_TEST_HELPERS_INCLUDED	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^#define APPROX_TEST_HELPERS_INCLUDED$/;"	d	file:
AR	Makefile	/^AR			?= ar$/;"	m
AR	misc/Makefile	/^AR			?= ar$/;"	m
AR	misc/deps/ezbuild/Makefile	/^AR			?= ar$/;"	m
ARFLAGS	Makefile	/^ARFLAGS		?= -rcs$/;"	m
ARFLAGS	misc/Makefile	/^ARFLAGS		?= -rcs$/;"	m
ARFLAGS	misc/deps/ezbuild/Makefile	/^ARFLAGS		?= -rcs$/;"	m
Aborting after a certain number of failures	misc/deps/catch2/docs/command-line.md	/^## Aborting after a certain number of failures$/;"	s
Adding your own command line options	misc/deps/catch2/docs/own-main.md	/^## Adding your own command line options$/;"	s
Advanced benchmarking	misc/deps/catch2/docs/benchmarks.md	/^### Advanced benchmarking$/;"	S
Already available	misc/deps/catch2/docs/list-of-examples.md	/^## Already available$/;"	s
Always	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        Always,$/;"	e	enum:Catch::ShowDurations::OrNot
Amending the config	misc/deps/catch2/docs/own-main.md	/^## Amending the config$/;"	s
Applications & Tools	misc/deps/catch2/docs/opensource-users.md	/^## Applications & Tools$/;"	s
Approx	misc/deps/catch2/include/internal/catch_approx.cpp	/^    Approx::Approx ( double value )$/;"	f	class:Catch::Detail::Approx
Approx	misc/deps/catch2/include/internal/catch_approx.h	/^        explicit Approx( T const& value ): Approx(static_cast<double>(value))$/;"	f	class:Catch::Detail::Approx
Approx	misc/deps/catch2/include/internal/catch_approx.h	/^    class Approx {$/;"	c	namespace:Catch::Detail
Approx	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^    Vector::ApproxMatcher<T> Approx( std::vector<T> const& comparator ) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Vector::ApproxMatcher<T>
ApproxMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            ApproxMatcher(std::vector<T> const& comparator) : m_comparator( comparator ) {}$/;"	f	struct:Catch::Matchers::Vector::ApproxMatcher
ApproxMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^        struct ApproxMatcher : MatcherBase<std::vector<T>> {$/;"	s	namespace:Catch::Matchers::Vector
ApproxTests	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^namespace { namespace ApproxTests {$/;"	n	namespace:__anon0cb4e5740110	file:
Arch	misc/deps/catch2/include/internal/catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	g	struct:Catch::Detail::__anon55f5ca2b0110::Endianness	file:
Arg	misc/deps/catch2/include/external/clara.hpp	/^    class Arg : public ParserRefImpl<Arg> {$/;"	c	namespace:Catch::clara::detail
Arg	misc/deps/catch2/third_party/clara.hpp	/^    class Arg : public ParserRefImpl<Arg> {$/;"	c	namespace:clara::detail
ArgType	misc/deps/catch2/include/external/clara.hpp	/^        using ArgType = typename std::remove_const<typename std::remove_reference<ArgT>::type>::/;"	t	struct:Catch::clara::detail::UnaryLambdaTraits	typeref:typename:std::remove_const<typename std::remove_reference<ArgT>::type>::type
ArgType	misc/deps/catch2/third_party/clara.hpp	/^        using ArgType = typename std::remove_const<typename std::remove_reference<ArgT>::type>::/;"	t	struct:clara::detail::UnaryLambdaTraits	typeref:typename:std::remove_const<typename std::remove_reference<ArgT>::type>::type
Args	misc/deps/catch2/include/external/clara.hpp	/^        Args( int argc, char const* const* argv )$/;"	f	class:Catch::clara::detail::Args
Args	misc/deps/catch2/include/external/clara.hpp	/^        Args( std::initializer_list<std::string> args )$/;"	f	class:Catch::clara::detail::Args
Args	misc/deps/catch2/include/external/clara.hpp	/^    class Args {$/;"	c	namespace:Catch::clara::detail
Args	misc/deps/catch2/third_party/clara.hpp	/^        Args( int argc, char const* const* argv )$/;"	f	class:clara::detail::Args
Args	misc/deps/catch2/third_party/clara.hpp	/^        Args( std::initializer_list<std::string> args )$/;"	f	class:clara::detail::Args
Args	misc/deps/catch2/third_party/clara.hpp	/^    class Args {$/;"	c	namespace:clara::detail
Argument	misc/deps/catch2/include/external/clara.hpp	/^        Option, Argument$/;"	e	enum:Catch::clara::detail::TokenType
Argument	misc/deps/catch2/third_party/clara.hpp	/^        Option, Argument$/;"	e	enum:clara::detail::TokenType
Assertion Macros	misc/deps/catch2/docs/assertions.md	/^# Assertion Macros$/;"	c
Assertion related macros	misc/deps/catch2/docs/other-macros.md	/^## Assertion related macros$/;"	s
AssertionHandler	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    AssertionHandler::AssertionHandler$/;"	f	class:Catch::AssertionHandler
AssertionHandler	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^    class AssertionHandler {$/;"	c	namespace:Catch
AssertionInfo	misc/deps/catch2/include/internal/catch_assertioninfo.h	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionInfo	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct AssertionInfo$/;"	s	namespace:Catch
AssertionPrinter	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    AssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, bool _printInfoMessage/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	file:
AssertionPrinter	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^class AssertionPrinter {$/;"	c	namespace:Catch::__anon16c8dcf30210	file:
AssertionPrinter	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            AssertionPrinter( std::ostream& _stream, AssertionStats const& _stats, std::size_t _/;"	f	class:Catch::TAPReporter::AssertionPrinter
AssertionPrinter	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        class AssertionPrinter {$/;"	c	struct:Catch::TAPReporter
AssertionPrinter	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            AssertionPrinter( std::ostream& _stream, AssertionStats const& _stats, std::size_t _/;"	f	class:Catch::TAPReporter::AssertionPrinter
AssertionPrinter	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        class AssertionPrinter {$/;"	c	struct:Catch::TAPReporter
AssertionReaction	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^    struct AssertionReaction {$/;"	s	namespace:Catch
AssertionResult	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    AssertionResult::AssertionResult( AssertionInfo const& info, AssertionResultData const& data/;"	f	class:Catch::AssertionResult
AssertionResult	misc/deps/catch2/include/internal/catch_assertionresult.h	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResultData	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    AssertionResultData::AssertionResultData(ResultWas::OfType _resultType, LazyExpression const/;"	f	class:Catch::AssertionResultData
AssertionResultData	misc/deps/catch2/include/internal/catch_assertionresult.h	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^     AssertionStats::AssertionStats( AssertionResult const& _assertionResult,$/;"	f	class:Catch::AssertionStats
AssertionStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct AssertionStats {$/;"	s	namespace:Catch
Assertions	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            using Assertions = std::vector<AssertionStats>;$/;"	t	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:std::vector<AssertionStats>
Attribution	misc/deps/catch2/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s
Authoring benchmarks	misc/deps/catch2/docs/benchmarks.md	/^# Authoring benchmarks$/;"	c
Auto	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        Auto,$/;"	e	enum:Catch::UseColour::YesOrNo
Auto	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^        Auto,$/;"	e	enum:Catch::__anon99a91d3f0110::Duration::Unit	file:
AutoReg	misc/deps/catch2/include/internal/catch_test_registry.cpp	/^    AutoReg::AutoReg( ITestInvoker* invoker, SourceLineInfo const& lineInfo, StringRef const& cl/;"	f	class:Catch::AutoReg
AutoReg	misc/deps/catch2/include/internal/catch_test_registry.h	/^struct AutoReg : NonCopyable {$/;"	s	namespace:Catch
AutoReg	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct AutoReg : NonCopyable {$/;"	s	namespace:Catch
AutoTestReg	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    AutoTestReg() {$/;"	f	struct:__anone7dbb1860110::MiscTests::AutoTestReg	file:
AutoTestReg	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^struct AutoTestReg {$/;"	s	namespace:__anone7dbb1860110::MiscTests	file:
Automake Reporter	misc/deps/catch2/docs/ci-and-misc.md	/^### Automake Reporter$/;"	S
AutomakeReporter	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^        AutomakeReporter( ReporterConfig const& _config )$/;"	f	struct:Catch::AutomakeReporter
AutomakeReporter	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^    struct AutomakeReporter : StreamingReporterBase<AutomakeReporter> {$/;"	s	namespace:Catch
AutomakeReporter	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^        AutomakeReporter( ReporterConfig const& _config )$/;"	f	struct:Catch::AutomakeReporter
AutomakeReporter	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^    struct AutomakeReporter : StreamingReporterBase<AutomakeReporter> {$/;"	s	namespace:Catch
Automatic test registration	misc/deps/catch2/docs/cmake-integration.md	/^## Automatic test registration$/;"	s
Awkward	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^struct Awkward$/;"	s	file:
B	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct B : private A {$/;"	s	namespace:__anonb1aeb3b90110::CompilationTests	file:
B	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace B {$/;"	n	file:
BDD-Style	misc/deps/catch2/docs/tutorial.md	/^## BDD-Style$/;"	s
BDD-style test cases	misc/deps/catch2/docs/test-cases-and-sections.md	/^## BDD-style test cases$/;"	s
BDDTests	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^namespace { namespace BDDTests {$/;"	n	namespace:__anon538088c40110	file:
BDD_TEST_HELPERS_INCLUDED	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^#define BDD_TEST_HELPERS_INCLUDED$/;"	d	file:
BENCHMARK	misc/deps/catch2/include/catch.hpp	/^#define BENCHMARK(/;"	d
BENCHMARK_ADVANCED	misc/deps/catch2/include/catch.hpp	/^#define BENCHMARK_ADVANCED(/;"	d
BENCHMARK_DIR	misc/deps/catch2/CMakeLists.txt	/^set(BENCHMARK_DIR ${CATCH_DIR}\/projects\/Benchmark)$/;"	v
BENCHMARK_HEADERS	misc/deps/catch2/projects/CMakeLists.txt	/^set(BENCHMARK_HEADERS$/;"	v
BENCHMARK_SOURCES	misc/deps/catch2/projects/CMakeLists.txt	/^set(BENCHMARK_SOURCES$/;"	v
BINDIR	Makefile	/^BINDIR      ?= bin$/;"	m
BINDIR	misc/Makefile	/^BINDIR      ?= bin$/;"	m
BINDIR	misc/deps/ezbuild/Makefile	/^BINDIR      ?= bin$/;"	m
BONUSDIR	Makefile	/^BONUSDIR	:= src_bonus$/;"	m
BONUSOBJ	Makefile	/^BONUSOBJ    ?= $(patsubst %.c,%.o,$(subst $(BONUSDIR),$(BINDIR),$(BONUSSRC)))$/;"	m
BONUSSRC	Makefile	/^BONUSSRC		:=.\/misc\/tests\/ft_string\/strcpy.cpp\\$/;"	m
BUFFER	misc/deps/catch2/CMake/FindGcov.cmake	/^	set(BUFFER "")$/;"	v	function:add_gcov_target
Bar	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^struct Bar {$/;"	s	namespace:__anone7dbb1860110::MiscTests	file:
BasicResult	misc/deps/catch2/include/external/clara.hpp	/^        BasicResult( ResultBase::Type type, std::string const &message )$/;"	f	class:Catch::clara::detail::BasicResult
BasicResult	misc/deps/catch2/include/external/clara.hpp	/^        explicit BasicResult( BasicResult<U> const &other )$/;"	f	class:Catch::clara::detail::BasicResult
BasicResult	misc/deps/catch2/include/external/clara.hpp	/^    class BasicResult : public ResultValueBase<T> {$/;"	c	namespace:Catch::clara::detail
BasicResult	misc/deps/catch2/third_party/clara.hpp	/^        BasicResult( ResultBase::Type type, std::string const &message )$/;"	f	class:clara::detail::BasicResult
BasicResult	misc/deps/catch2/third_party/clara.hpp	/^        explicit BasicResult( BasicResult<U> const &other )$/;"	f	class:clara::detail::BasicResult
BasicResult	misc/deps/catch2/third_party/clara.hpp	/^    class BasicResult : public ResultValueBase<T> {$/;"	c	namespace:clara::detail
BeforeExit	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        BeforeExit = 2,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStart	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        BeforeStart = 1,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStartAndExit	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        BeforeStartAndExit = BeforeStart | BeforeExit$/;"	e	enum:Catch::WaitForKeypress::When
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^            Benchmark(std::string &&name)$/;"	f	struct:Catch::Benchmark::Benchmark
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^            Benchmark(std::string &&name, FUN &&func)$/;"	f	struct:Catch::Benchmark::Benchmark
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^        struct Benchmark {$/;"	s	namespace:Catch::Benchmark
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_analyse.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_measure.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_repeat.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/benchmark/detail/catch_timing.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	misc/deps/catch2/include/internal/catch_test_case_info.h	/^            Benchmark = 1 << 6$/;"	e	enum:Catch::TestCaseInfo::SpecialProperties
Benchmark specification	misc/deps/catch2/docs/benchmarks.md	/^## Benchmark specification$/;"	s
BenchmarkFunction	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction()$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction(BenchmarkFunction const& that)$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction(BenchmarkFunction&& that)$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction(model<T>* c) : f(c) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^            struct BenchmarkFunction {$/;"	s	namespace:Catch::Benchmark::Detail
BenchmarkInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct BenchmarkInfo {$/;"	s	namespace:Catch
BenchmarkStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct BenchmarkStats {$/;"	s	namespace:Catch
BenchmarkingMacros	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^add_executable(BenchmarkingMacros ${TESTS_DIR}\/X20-BenchmarkingMacros.cpp)$/;"	t
Big	misc/deps/catch2/include/internal/catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon55f5ca2b0110::Endianness::Arch	file:
Bikeshed	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^namespace Bikeshed {$/;"	n	file:
BinaryExpr	misc/deps/catch2/include/internal/catch_decomposer.h	/^        BinaryExpr( bool comparisonResult, LhsT lhs, StringRef op, RhsT rhs )$/;"	f	class:Catch::BinaryExpr
BinaryExpr	misc/deps/catch2/include/internal/catch_decomposer.h	/^    class BinaryExpr  : public ITransientExpression {$/;"	c	namespace:Catch
Bits	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    enum Bits : uint32_t {$/;"	g	namespace:EnumBitFieldTests	typeref:typename:uint32_t	file:
Blue	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Blue,$/;"	e	enum:Catch::Colour::Code
Blue	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    enum class Colours { Red, Green, Blue };$/;"	e	enum:Bikeshed::Colours	file:
Boolable	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    explicit Boolable( bool value ) : m_value( value ) {}$/;"	f	struct:Boolable	file:
Boolable	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^struct Boolable$/;"	s	file:
BoundFlagLambda	misc/deps/catch2/include/external/clara.hpp	/^        explicit BoundFlagLambda( L const &lambda ) : m_lambda( lambda ) {}$/;"	f	struct:Catch::clara::detail::BoundFlagLambda
BoundFlagLambda	misc/deps/catch2/include/external/clara.hpp	/^    struct BoundFlagLambda : BoundFlagRefBase {$/;"	s	namespace:Catch::clara::detail
BoundFlagLambda	misc/deps/catch2/third_party/clara.hpp	/^        explicit BoundFlagLambda( L const &lambda ) : m_lambda( lambda ) {}$/;"	f	struct:clara::detail::BoundFlagLambda
BoundFlagLambda	misc/deps/catch2/third_party/clara.hpp	/^    struct BoundFlagLambda : BoundFlagRefBase {$/;"	s	namespace:clara::detail
BoundFlagRef	misc/deps/catch2/include/external/clara.hpp	/^        explicit BoundFlagRef( bool &ref ) : m_ref( ref ) {}$/;"	f	struct:Catch::clara::detail::BoundFlagRef
BoundFlagRef	misc/deps/catch2/include/external/clara.hpp	/^    struct BoundFlagRef : BoundFlagRefBase {$/;"	s	namespace:Catch::clara::detail
BoundFlagRef	misc/deps/catch2/third_party/clara.hpp	/^        explicit BoundFlagRef( bool &ref ) : m_ref( ref ) {}$/;"	f	struct:clara::detail::BoundFlagRef
BoundFlagRef	misc/deps/catch2/third_party/clara.hpp	/^    struct BoundFlagRef : BoundFlagRefBase {$/;"	s	namespace:clara::detail
BoundFlagRefBase	misc/deps/catch2/include/external/clara.hpp	/^    struct BoundFlagRefBase : BoundRef {$/;"	s	namespace:Catch::clara::detail
BoundFlagRefBase	misc/deps/catch2/third_party/clara.hpp	/^    struct BoundFlagRefBase : BoundRef {$/;"	s	namespace:clara::detail
BoundLambda	misc/deps/catch2/include/external/clara.hpp	/^        explicit BoundLambda( L const &lambda ) : m_lambda( lambda ) {}$/;"	f	struct:Catch::clara::detail::BoundLambda
BoundLambda	misc/deps/catch2/include/external/clara.hpp	/^    struct BoundLambda : BoundValueRefBase {$/;"	s	namespace:Catch::clara::detail
BoundLambda	misc/deps/catch2/third_party/clara.hpp	/^        explicit BoundLambda( L const &lambda ) : m_lambda( lambda ) {}$/;"	f	struct:clara::detail::BoundLambda
BoundLambda	misc/deps/catch2/third_party/clara.hpp	/^    struct BoundLambda : BoundValueRefBase {$/;"	s	namespace:clara::detail
BoundRef	misc/deps/catch2/include/external/clara.hpp	/^    struct BoundRef : NonCopyable {$/;"	s	namespace:Catch::clara::detail
BoundRef	misc/deps/catch2/third_party/clara.hpp	/^    struct BoundRef : NonCopyable {$/;"	s	namespace:clara::detail
BoundValueRef	misc/deps/catch2/include/external/clara.hpp	/^        explicit BoundValueRef( T &ref ) : m_ref( ref ) {}$/;"	f	struct:Catch::clara::detail::BoundValueRef
BoundValueRef	misc/deps/catch2/include/external/clara.hpp	/^    struct BoundValueRef : BoundValueRefBase {$/;"	s	namespace:Catch::clara::detail
BoundValueRef	misc/deps/catch2/third_party/clara.hpp	/^        explicit BoundValueRef( T &ref ) : m_ref( ref ) {}$/;"	f	struct:clara::detail::BoundValueRef
BoundValueRef	misc/deps/catch2/third_party/clara.hpp	/^    struct BoundValueRef : BoundValueRefBase {$/;"	s	namespace:clara::detail
BoundValueRefBase	misc/deps/catch2/include/external/clara.hpp	/^    struct BoundValueRefBase : BoundRef {$/;"	s	namespace:Catch::clara::detail
BoundValueRefBase	misc/deps/catch2/third_party/clara.hpp	/^    struct BoundValueRefBase : BoundRef {$/;"	s	namespace:clara::detail
Branches	misc/deps/catch2/docs/contributing.md	/^## Branches$/;"	s
Breaking changes	misc/deps/catch2/docs/release-notes.md	/^### Breaking changes$/;"	S
Breaking into the debugger	misc/deps/catch2/docs/command-line.md	/^## Breaking into the debugger$/;"	s
Bright	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Bright = 0x10,$/;"	e	enum:Catch::Colour::Code
BrightGreen	misc/deps/catch2/include/internal/catch_console_colour.h	/^            BrightGreen = Bright | Green,$/;"	e	enum:Catch::Colour::Code
BrightRed	misc/deps/catch2/include/internal/catch_console_colour.h	/^            BrightRed = Bright | Red,$/;"	e	enum:Catch::Colour::Code
BrightWhite	misc/deps/catch2/include/internal/catch_console_colour.h	/^            BrightWhite = Bright | White,$/;"	e	enum:Catch::Colour::Code
BrightYellow	misc/deps/catch2/include/internal/catch_console_colour.h	/^            BrightYellow = Bright | Yellow,$/;"	e	enum:Catch::Colour::Code
BuilderSettings	misc/deps/catch2/.conan/build.py	/^class BuilderSettings(object):$/;"	c
Built in matchers	misc/deps/catch2/docs/matchers.md	/^## Built in matchers$/;"	s
BySectionInfo	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            BySectionInfo( BySectionInfo const& other ) : m_other( other.m_other ) {}$/;"	f	struct:Catch::CumulativeReporterBase::BySectionInfo
BySectionInfo	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            BySectionInfo( SectionInfo const& other ) : m_other( other ) {}$/;"	f	struct:Catch::CumulativeReporterBase::BySectionInfo
BySectionInfo	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        struct BySectionInfo {$/;"	s	struct:Catch::CumulativeReporterBase
C++11 toggles	misc/deps/catch2/docs/configuration.md	/^## C++11 toggles$/;"	s
C++17 toggles	misc/deps/catch2/docs/configuration.md	/^## C++17 toggles$/;"	s
CAPTURE	misc/deps/catch2/include/catch.hpp	/^#define CAPTURE(/;"	d
CATCH2_CMAKE_SIZEOF_VOID_P	misc/deps/catch2/CMakeLists.txt	/^    set(CATCH2_CMAKE_SIZEOF_VOID_P ${CMAKE_SIZEOF_VOID_P})$/;"	v
CATCH_AND_GIVEN	misc/deps/catch2/include/catch.hpp	/^#define CATCH_AND_GIVEN(/;"	d
CATCH_AND_THEN	misc/deps/catch2/include/catch.hpp	/^#define CATCH_AND_THEN(/;"	d
CATCH_AND_WHEN	misc/deps/catch2/include/catch.hpp	/^#define CATCH_AND_WHEN(/;"	d
CATCH_ANON_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_ANON_TEST_CASE(/;"	d
CATCH_ANON_TEST_CASE	misc/deps/catch2/projects/ExtraTests/X01-PrefixedMacros.cpp	/^CATCH_ANON_TEST_CASE() {$/;"	f
CATCH_ARC_ENABLED	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_ENABLED	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_ARC_ENABLED /;"	d
CATCH_ARC_STRONG	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_ARC_STRONG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_ARC_STRONG /;"	d
CATCH_ARC_STRONG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_ARC_STRONG$/;"	d
CATCH_BENCHMARK	misc/deps/catch2/include/catch.hpp	/^#define CATCH_BENCHMARK(/;"	d
CATCH_BENCHMARK_ADVANCED	misc/deps/catch2/include/catch.hpp	/^#define CATCH_BENCHMARK_ADVANCED(/;"	d
CATCH_BREAK_INTO_DEBUGGER	misc/deps/catch2/include/internal/catch_debugger.h	/^    #define CATCH_BREAK_INTO_DEBUGGER(/;"	d
CATCH_BUILD_EXAMPLES	misc/deps/catch2/CMakeLists.txt	/^option(CATCH_BUILD_EXAMPLES "Build documentation examples" OFF)$/;"	D
CATCH_BUILD_EXTRA_TESTS	misc/deps/catch2/CMakeLists.txt	/^option(CATCH_BUILD_EXTRA_TESTS "Build extra tests" OFF)$/;"	D
CATCH_BUILD_TESTING	misc/deps/catch2/CMakeLists.txt	/^option(CATCH_BUILD_TESTING "Build SelfTest project" ON)$/;"	D
CATCH_CAPTURE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CAPTURE(/;"	d
CATCH_CATCH_ALL	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#define CATCH_CATCH_ALL /;"	d
CATCH_CATCH_ALL	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_CATCH_ALL /;"	d
CATCH_CATCH_ANON	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#define CATCH_CATCH_ANON(/;"	d
CATCH_CATCH_ANON	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_CATCH_ANON(/;"	d
CATCH_CHECK	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK(/;"	d
CATCH_CHECKED_ELSE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECKED_ELSE(/;"	d
CATCH_CHECKED_IF	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECKED_IF(/;"	d
CATCH_CHECK_FALSE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK_FALSE(/;"	d
CATCH_CHECK_NOFAIL	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK_NOFAIL(/;"	d
CATCH_CHECK_NOTHROW	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK_NOTHROW(/;"	d
CATCH_CHECK_THAT	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK_THAT(/;"	d
CATCH_CHECK_THROWS	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK_THROWS(/;"	d
CATCH_CHECK_THROWS_AS	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK_THROWS_AS(/;"	d
CATCH_CHECK_THROWS_MATCHES	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK_THROWS_MATCHES(/;"	d
CATCH_CHECK_THROWS_WITH	misc/deps/catch2/include/catch.hpp	/^#define CATCH_CHECK_THROWS_WITH(/;"	d
CATCH_CLARA_CONFIG_CONSOLE_WIDTH	misc/deps/catch2/include/external/clara.hpp	/^#define CATCH_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CLARA_HPP_INCLUDED	misc/deps/catch2/include/external/clara.hpp	/^#define CATCH_CLARA_HPP_INCLUDED$/;"	d
CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	misc/deps/catch2/include/external/clara.hpp	/^#define CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	misc/deps/catch2/include/internal/catch_clara.h	/^#define CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CLARA_TEXTFLOW_HPP_INCLUDED	misc/deps/catch2/include/external/clara.hpp	/^#define CATCH_CLARA_TEXTFLOW_HPP_INCLUDED$/;"	d
CATCH_CMAKE_CONFIG_DESTINATION	misc/deps/catch2/CMakeLists.txt	/^    set(CATCH_CMAKE_CONFIG_DESTINATION "${CMAKE_INSTALL_LIBDIR}\/cmake\/Catch2")$/;"	v
CATCH_CONFIG_ALL_PARTS	misc/deps/catch2/include/catch.hpp	/^#  define CATCH_CONFIG_ALL_PARTS$/;"	d
CATCH_CONFIG_ALL_PARTS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_ALL_PARTS$/;"	d
CATCH_CONFIG_ANDROID_LOGWRITE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_ANDROID_LOGWRITE$/;"	d
CATCH_CONFIG_ANDROID_LOGWRITE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_ANDROID_LOGWRITE$/;"	d
CATCH_CONFIG_COLOUR_ANSI	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^#       define CATCH_CONFIG_COLOUR_ANSI$/;"	d	file:
CATCH_CONFIG_COLOUR_NONE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^    #define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_NONE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_CONFIG_COLOUR_NONE$/;"	d
CATCH_CONFIG_COLOUR_WINDOWS	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^#       define CATCH_CONFIG_COLOUR_WINDOWS$/;"	d	file:
CATCH_CONFIG_CONSOLE_WIDTH	misc/deps/catch2/include/internal/catch_config.hpp	/^#define CATCH_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_CONFIG_COUNTER	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_COUNTER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_CONFIG_COUNTER$/;"	d
CATCH_CONFIG_CPP11_TO_STRING	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_CONFIG_CPP11_TO_STRING$/;"	d
CATCH_CONFIG_CPP11_TO_STRING	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_CONFIG_CPP11_TO_STRING$/;"	d
CATCH_CONFIG_CPP17_BYTE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_CPP17_BYTE$/;"	d
CATCH_CONFIG_CPP17_BYTE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_CPP17_BYTE$/;"	d
CATCH_CONFIG_CPP17_OPTIONAL	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_CPP17_OPTIONAL$/;"	d
CATCH_CONFIG_CPP17_OPTIONAL	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_CPP17_OPTIONAL$/;"	d
CATCH_CONFIG_CPP17_STRING_VIEW	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_CPP17_STRING_VIEW$/;"	d
CATCH_CONFIG_CPP17_STRING_VIEW	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_CPP17_STRING_VIEW$/;"	d
CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_CONFIG_CPP17_VARIANT	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_CPP17_VARIANT$/;"	d
CATCH_CONFIG_CPP17_VARIANT	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_CPP17_VARIANT$/;"	d
CATCH_CONFIG_DEFAULT_REPORTER	misc/deps/catch2/include/internal/catch_config.hpp	/^#define CATCH_CONFIG_DEFAULT_REPORTER /;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_DISABLE_EXCEPTIONS$/;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_DISABLE_EXCEPTIONS$/;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS_CUSTOM_HANDLER	misc/deps/catch2/projects/ExtraTests/X04-DisabledExceptions-CustomHandler.cpp	/^#define CATCH_CONFIG_DISABLE_EXCEPTIONS_CUSTOM_HANDLER$/;"	d	file:
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	misc/deps/catch2/include/catch.hpp	/^#    define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	misc/deps/catch2/include/internal/catch_tostring.cpp	/^#define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d	file:
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	misc/deps/catch2/include/internal/catch_tostring.h	/^#  define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^#define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d	file:
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER	misc/deps/catch2/include/internal/catch_tostring.h	/^#  define CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringOptional.tests.cpp	/^#define CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER$/;"	d	file:
CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	misc/deps/catch2/include/internal/catch_tostring.h	/^#  define CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^#define CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER$/;"	d	file:
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringPair.tests.cpp	/^#define CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER$/;"	d	file:
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	misc/deps/catch2/include/internal/catch_tostring.h	/^#  define CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^#define CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER$/;"	d	file:
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER	misc/deps/catch2/include/internal/catch_tostring.h	/^#  define CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER$/;"	d
CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^#define CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER$/;"	d	file:
CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER$/;"	d
CATCH_CONFIG_EXTERNAL_INTERFACES	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^#define CATCH_CONFIG_EXTERNAL_INTERFACES$/;"	d	file:
CATCH_CONFIG_EXTERNAL_INTERFACES	misc/deps/catch2/include/catch.hpp	/^#  define CATCH_CONFIG_EXTERNAL_INTERFACES$/;"	d
CATCH_CONFIG_EXTERNAL_INTERFACES	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_EXTERNAL_INTERFACES$/;"	d
CATCH_CONFIG_FALLBACK_STRINGIFIER	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^#define CATCH_CONFIG_FALLBACK_STRINGIFIER /;"	d	file:
CATCH_CONFIG_GLOBAL_NEXTAFTER	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_GLOBAL_NEXTAFTER$/;"	d
CATCH_CONFIG_GLOBAL_NEXTAFTER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_GLOBAL_NEXTAFTER$/;"	d
CATCH_CONFIG_MAIN	misc/deps/catch2/.conan/test_package/test_package.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/examples/000-CatchMain.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/examples/010-TestCase.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/examples/020-TestCase-1.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/examples/200-Rpt-CatchMain.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/include/catch_with_main.hpp	/^#define CATCH_CONFIG_MAIN$/;"	d
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/ExtraTests/X01-PrefixedMacros.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/ExtraTests/X02-DisabledMacros.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/ExtraTests/X03-DisabledExceptions-DefaultHandler.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/ExtraTests/X04-DisabledExceptions-CustomHandler.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/ExtraTests/X10-FallbackStringifier.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/ExtraTests/X11-DisableStringification.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/ExtraTests/X90-WindowsHeaderInclusion.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/SelfTest/TestMain.cpp	/^#define CATCH_CONFIG_MAIN$/;"	d	file:
CATCH_CONFIG_MAIN	misc/deps/catch2/projects/XCode/OCTest/OCTest/Main.mm	/^#define CATCH_CONFIG_MAIN$/;"	M
CATCH_CONFIG_MAIN	misc/tests/main.cpp	/^# define CATCH_CONFIG_MAIN /;"	d	file:
CATCH_CONFIG_NEW_CAPTURE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_NEW_CAPTURE$/;"	d
CATCH_CONFIG_NEW_CAPTURE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_NEW_CAPTURE$/;"	d
CATCH_CONFIG_NOSTDOUT	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^#define CATCH_CONFIG_NOSTDOUT$/;"	d	file:
CATCH_CONFIG_NO_CPP17_VARIANT	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^  #        define CATCH_CONFIG_NO_CPP17_VARIANT$/;"	d
CATCH_CONFIG_NO_CPP17_VARIANT	misc/deps/catch2/single_include/catch2/catch.hpp	/^  #        define CATCH_CONFIG_NO_CPP17_VARIANT$/;"	d
CATCH_CONFIG_POLYFILL_ISNAN	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_POLYFILL_ISNAN$/;"	d
CATCH_CONFIG_POLYFILL_ISNAN	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_POLYFILL_ISNAN$/;"	d
CATCH_CONFIG_POSIX_SIGNALS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_CONFIG_POSIX_SIGNALS$/;"	d
CATCH_CONFIG_POSIX_SIGNALS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_CONFIG_POSIX_SIGNALS$/;"	d
CATCH_CONFIG_RUNTIME_STATIC_REQUIRE	misc/deps/catch2/projects/ExtraTests/X01-PrefixedMacros.cpp	/^#define CATCH_CONFIG_RUNTIME_STATIC_REQUIRE$/;"	d	file:
CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#define CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR$/;"	d
CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR$/;"	d
CATCH_CONFIG_USE_ASYNC	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_CONFIG_USE_ASYNC$/;"	d
CATCH_CONFIG_USE_ASYNC	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_CONFIG_USE_ASYNC$/;"	d
CATCH_CONFIG_WCHAR	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_CONFIG_WCHAR$/;"	d
CATCH_CONFIG_WCHAR	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_CONFIG_WCHAR$/;"	d
CATCH_CONFIG_WINDOWS_SEH	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_CONFIG_WINDOWS_SEH$/;"	d
CATCH_CONFIG_WINDOWS_SEH	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_CONFIG_WINDOWS_SEH$/;"	d
CATCH_CPP14_OR_GREATER	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP14_OR_GREATER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_CPP14_OR_GREATER$/;"	d
CATCH_CPP17_OR_GREATER	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_CPP17_OR_GREATER$/;"	d
CATCH_CPP17_OR_GREATER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_CPP17_OR_GREATER$/;"	d
CATCH_DEFER	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_DEFER(/;"	d
CATCH_DEFER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_DEFER(/;"	d
CATCH_DEFINED_NOMINMAX	misc/deps/catch2/include/internal/catch_windows_h_proxy.h	/^#  define CATCH_DEFINED_NOMINMAX$/;"	d
CATCH_DEFINED_WIN32_LEAN_AND_MEAN	misc/deps/catch2/include/internal/catch_windows_h_proxy.h	/^#  define CATCH_DEFINED_WIN32_LEAN_AND_MEAN$/;"	d
CATCH_DIR	misc/deps/catch2/CMakeLists.txt	/^set(CATCH_DIR ${CMAKE_CURRENT_SOURCE_DIR})$/;"	v
CATCH_DYNAMIC_SECTION	misc/deps/catch2/include/catch.hpp	/^#define CATCH_DYNAMIC_SECTION(/;"	d
CATCH_EMPTY	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_EMPTY(/;"	d
CATCH_EMPTY	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_EMPTY(/;"	d
CATCH_ENABLE_COVERAGE	misc/deps/catch2/CMakeLists.txt	/^option(CATCH_ENABLE_COVERAGE "Generate coverage for codecov.io" OFF)$/;"	D
CATCH_ENABLE_WERROR	misc/deps/catch2/CMakeLists.txt	/^option(CATCH_ENABLE_WERROR "Enable all warnings as errors" ON)$/;"	D
CATCH_ENFORCE	misc/deps/catch2/include/internal/catch_enforce.h	/^#define CATCH_ENFORCE(/;"	d
CATCH_ERROR	misc/deps/catch2/include/internal/catch_enforce.h	/^#define CATCH_ERROR(/;"	d
CATCH_FAIL	misc/deps/catch2/include/catch.hpp	/^#define CATCH_FAIL(/;"	d
CATCH_FAIL_CHECK	misc/deps/catch2/include/catch.hpp	/^#define CATCH_FAIL_CHECK(/;"	d
CATCH_GIVEN	misc/deps/catch2/include/catch.hpp	/^#define CATCH_GIVEN(/;"	d
CATCH_IMPL	misc/deps/catch2/include/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_IMPL	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_IMPL$/;"	d
CATCH_INFO	misc/deps/catch2/include/catch.hpp	/^#define CATCH_INFO(/;"	d
CATCH_INSTALL_DOCS	misc/deps/catch2/CMakeLists.txt	/^option(CATCH_INSTALL_DOCS "Install documentation alongside library" ON)$/;"	D
CATCH_INSTALL_HELPERS	misc/deps/catch2/CMakeLists.txt	/^option(CATCH_INSTALL_HELPERS "Install contrib alongside library" ON)$/;"	D
CATCH_INTERNAL_CONFIG_ANDROID_LOGWRITE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_INTERNAL_CONFIG_ANDROID_LOGWRITE$/;"	d
CATCH_INTERNAL_CONFIG_ANDROID_LOGWRITE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_ANDROID_LOGWRITE$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^    #define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_COUNTER	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_COUNTER$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_BYTE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^  #    define CATCH_INTERNAL_CONFIG_CPP17_BYTE$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_BYTE	misc/deps/catch2/single_include/catch2/catch.hpp	/^  #    define CATCH_INTERNAL_CONFIG_CPP17_BYTE$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^  #    define CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL	misc/deps/catch2/single_include/catch2/catch.hpp	/^  #    define CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^  #    define CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW	misc/deps/catch2/single_include/catch2/catch.hpp	/^  #    define CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^  #        define CATCH_INTERNAL_CONFIG_CPP17_VARIANT$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^  #      define CATCH_INTERNAL_CONFIG_CPP17_VARIANT$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	misc/deps/catch2/single_include/catch2/catch.hpp	/^  #        define CATCH_INTERNAL_CONFIG_CPP17_VARIANT$/;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	misc/deps/catch2/single_include/catch2/catch.hpp	/^  #      define CATCH_INTERNAL_CONFIG_CPP17_VARIANT$/;"	d
CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED$/;"	d
CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED$/;"	d
CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#define CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER$/;"	d
CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER$/;"	d
CATCH_INTERNAL_CONFIG_NEW_CAPTURE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_INTERNAL_CONFIG_NEW_CAPTURE$/;"	d
CATCH_INTERNAL_CONFIG_NEW_CAPTURE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_INTERNAL_CONFIG_NEW_CAPTURE$/;"	d
CATCH_INTERNAL_CONFIG_NO_ASYNC	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^    #define CATCH_INTERNAL_CONFIG_NO_ASYNC$/;"	d
CATCH_INTERNAL_CONFIG_NO_ASYNC	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_NO_ASYNC$/;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING$/;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING$/;"	d
CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE$/;"	d
CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE$/;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^    #define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_NO_WCHAR	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#  define CATCH_INTERNAL_CONFIG_NO_WCHAR$/;"	d
CATCH_INTERNAL_CONFIG_NO_WCHAR	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_INTERNAL_CONFIG_NO_WCHAR$/;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^    #define CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^    #define CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN$/;"	d
CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN$/;"	d
CATCH_INTERNAL_CONFIG_POSIX_SIGNALS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^    #define CATCH_INTERNAL_CONFIG_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_POSIX_SIGNALS	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define CATCH_INTERNAL_CONFIG_POSIX_SIGNALS$/;"	d
CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR$/;"	d
CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR$/;"	d
CATCH_INTERNAL_CONFIG_USE_ASYNC	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^# define CATCH_INTERNAL_CONFIG_USE_ASYNC$/;"	d
CATCH_INTERNAL_CONFIG_USE_ASYNC	misc/deps/catch2/single_include/catch2/catch.hpp	/^# define CATCH_INTERNAL_CONFIG_USE_ASYNC$/;"	d
CATCH_INTERNAL_CONFIG_WINDOWS_SEH	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#    define CATCH_INTERNAL_CONFIG_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_CONFIG_WINDOWS_SEH	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CATCH_INTERNAL_CONFIG_WINDOWS_SEH$/;"	d
CATCH_INTERNAL_ERROR	misc/deps/catch2/include/internal/catch_enforce.h	/^#define CATCH_INTERNAL_ERROR(/;"	d
CATCH_INTERNAL_LINEINFO	misc/deps/catch2/include/internal/catch_common.h	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_LINEINFO	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_INTERNAL_LINEINFO /;"	d
CATCH_INTERNAL_STRINGIFY	misc/deps/catch2/include/internal/catch_capture.hpp	/^  #define CATCH_INTERNAL_STRINGIFY(/;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS$/;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS /;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_GLOBALS_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_PARENTHESES_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_TEMPLATE_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_UNSUPPRESS_UNUSED_TEMPLATE_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_TEMPLATE_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_UNSUPPRESS_UNUSED_TEMPLATE_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_TEMPLATE_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_UNUSED_TEMPLATE_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_TEMPLATE_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_UNUSED_TEMPLATE_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_UNUSED_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#       define CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS$/;"	d
CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#       define CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS /;"	d
CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define CATCH_INTERNAL_UNSUPPRESS_ZERO_VARIADIC_WARNINGS$/;"	d
CATCH_MAKE_MSG	misc/deps/catch2/include/internal/catch_enforce.h	/^#define CATCH_MAKE_MSG(/;"	d
CATCH_METHOD_AS_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_METHOD_AS_TEST_CASE(/;"	d
CATCH_PLATFORM_IPHONE	misc/deps/catch2/include/internal/catch_platform.h	/^#  define CATCH_PLATFORM_IPHONE$/;"	d
CATCH_PLATFORM_IPHONE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_PLATFORM_IPHONE$/;"	d
CATCH_PLATFORM_LINUX	misc/deps/catch2/include/internal/catch_platform.h	/^#  define CATCH_PLATFORM_LINUX$/;"	d
CATCH_PLATFORM_LINUX	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_PLATFORM_LINUX$/;"	d
CATCH_PLATFORM_MAC	misc/deps/catch2/include/internal/catch_platform.h	/^#  define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_MAC	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_PLATFORM_MAC$/;"	d
CATCH_PLATFORM_WINDOWS	misc/deps/catch2/include/external/clara.hpp	/^#define CATCH_PLATFORM_WINDOWS$/;"	d
CATCH_PLATFORM_WINDOWS	misc/deps/catch2/include/internal/catch_platform.h	/^#  define CATCH_PLATFORM_WINDOWS$/;"	d
CATCH_PLATFORM_WINDOWS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define CATCH_PLATFORM_WINDOWS$/;"	d
CATCH_RECURSE	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_RECURSE(/;"	d
CATCH_RECURSE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_RECURSE(/;"	d
CATCH_RECURSION_LEVEL0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_RECURSION_LEVEL0(/;"	d
CATCH_RECURSION_LEVEL0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_RECURSION_LEVEL0(/;"	d
CATCH_RECURSION_LEVEL1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_RECURSION_LEVEL1(/;"	d
CATCH_RECURSION_LEVEL1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_RECURSION_LEVEL1(/;"	d
CATCH_RECURSION_LEVEL2	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_RECURSION_LEVEL2(/;"	d
CATCH_RECURSION_LEVEL2	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_RECURSION_LEVEL2(/;"	d
CATCH_RECURSION_LEVEL3	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_RECURSION_LEVEL3(/;"	d
CATCH_RECURSION_LEVEL3	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_RECURSION_LEVEL3(/;"	d
CATCH_RECURSION_LEVEL4	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_RECURSION_LEVEL4(/;"	d
CATCH_RECURSION_LEVEL4	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_RECURSION_LEVEL4(/;"	d
CATCH_RECURSION_LEVEL5	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_RECURSION_LEVEL5(/;"	d
CATCH_RECURSION_LEVEL5	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_RECURSION_LEVEL5(/;"	d
CATCH_RECURSION_LEVEL6	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_RECURSION_LEVEL6(/;"	d
CATCH_RECURSION_LEVEL6	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_RECURSION_LEVEL6(/;"	d
CATCH_REC_END	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_END(/;"	d
CATCH_REC_END	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_END(/;"	d
CATCH_REC_GET_END	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_GET_END(/;"	d
CATCH_REC_GET_END	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_GET_END(/;"	d
CATCH_REC_GET_END1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_GET_END1(/;"	d
CATCH_REC_GET_END1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_GET_END1(/;"	d
CATCH_REC_GET_END2	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_GET_END2(/;"	d
CATCH_REC_GET_END2	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_GET_END2(/;"	d
CATCH_REC_LIST	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_LIST(/;"	d
CATCH_REC_LIST	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_LIST(/;"	d
CATCH_REC_LIST0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_LIST0(/;"	d
CATCH_REC_LIST0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_LIST0(/;"	d
CATCH_REC_LIST0_UD	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_LIST0_UD(/;"	d
CATCH_REC_LIST0_UD	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_LIST0_UD(/;"	d
CATCH_REC_LIST1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_LIST1(/;"	d
CATCH_REC_LIST1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_LIST1(/;"	d
CATCH_REC_LIST1_UD	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_LIST1_UD(/;"	d
CATCH_REC_LIST1_UD	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_LIST1_UD(/;"	d
CATCH_REC_LIST2	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_LIST2(/;"	d
CATCH_REC_LIST2	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_LIST2(/;"	d
CATCH_REC_LIST2_UD	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_LIST2_UD(/;"	d
CATCH_REC_LIST2_UD	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_LIST2_UD(/;"	d
CATCH_REC_LIST_UD	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_LIST_UD(/;"	d
CATCH_REC_LIST_UD	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_LIST_UD(/;"	d
CATCH_REC_NEXT	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_NEXT(/;"	d
CATCH_REC_NEXT	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_NEXT(/;"	d
CATCH_REC_NEXT0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_NEXT0(/;"	d
CATCH_REC_NEXT0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_NEXT0(/;"	d
CATCH_REC_NEXT1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_NEXT1(/;"	d
CATCH_REC_NEXT1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_NEXT1(/;"	d
CATCH_REC_OUT	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define CATCH_REC_OUT$/;"	d
CATCH_REC_OUT	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REC_OUT$/;"	d
CATCH_REGISTER_ENUM	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^CATCH_REGISTER_ENUM( Bikeshed::Colours,$/;"	f
CATCH_REGISTER_ENUM	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^CATCH_REGISTER_ENUM( EnumClass3, EnumClass3::Value1, EnumClass3::Value2, EnumClass3::Value3 )$/;"	f
CATCH_REGISTER_LISTENER	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^CATCH_REGISTER_LISTENER( MyListener )$/;"	f
CATCH_REGISTER_LISTENER	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^#define CATCH_REGISTER_LISTENER(/;"	d
CATCH_REGISTER_REPORTER	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^#define CATCH_REGISTER_REPORTER(/;"	d
CATCH_REGISTER_TAG_ALIAS	misc/deps/catch2/include/internal/catch_tag_alias_autoregistrar.h	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TAG_ALIAS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_REGISTER_TAG_ALIAS(/;"	d
CATCH_REGISTER_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REGISTER_TEST_CASE(/;"	d
CATCH_REQUIRE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REQUIRE(/;"	d
CATCH_REQUIRE_FALSE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REQUIRE_FALSE(/;"	d
CATCH_REQUIRE_NOTHROW	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REQUIRE_NOTHROW(/;"	d
CATCH_REQUIRE_THAT	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REQUIRE_THAT(/;"	d
CATCH_REQUIRE_THROWS	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REQUIRE_THROWS(/;"	d
CATCH_REQUIRE_THROWS_AS	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REQUIRE_THROWS_AS(/;"	d
CATCH_REQUIRE_THROWS_MATCHES	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REQUIRE_THROWS_MATCHES(/;"	d
CATCH_REQUIRE_THROWS_WITH	misc/deps/catch2/include/catch.hpp	/^#define CATCH_REQUIRE_THROWS_WITH(/;"	d
CATCH_RUNTIME_ERROR	misc/deps/catch2/include/internal/catch_enforce.h	/^#define CATCH_RUNTIME_ERROR(/;"	d
CATCH_SCENARIO	misc/deps/catch2/include/catch.hpp	/^#define CATCH_SCENARIO(/;"	d
CATCH_SCENARIO_METHOD	misc/deps/catch2/include/catch.hpp	/^#define CATCH_SCENARIO_METHOD(/;"	d
CATCH_SECTION	misc/deps/catch2/include/catch.hpp	/^#define CATCH_SECTION(/;"	d
CATCH_STATIC_REQUIRE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_STATIC_REQUIRE(/;"	d
CATCH_STATIC_REQUIRE_FALSE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_STATIC_REQUIRE_FALSE(/;"	d
CATCH_STRINGREF_H_INCLUDED	misc/deps/catch2/include/internal/catch_stringref.h	/^#define CATCH_STRINGREF_H_INCLUDED$/;"	d
CATCH_SUCCEED	misc/deps/catch2/include/catch.hpp	/^#define CATCH_SUCCEED(/;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEMPLATE_PRODUCT_TEST_CASE(/;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD(/;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(/;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG(/;"	d
CATCH_TEMPLATE_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEMPLATE_TEST_CASE(/;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEMPLATE_TEST_CASE_METHOD(/;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEMPLATE_TEST_CASE_METHOD_SIG(/;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEMPLATE_TEST_CASE_SIG(/;"	d
CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH	misc/deps/catch2/include/internal/catch_clara.h	/^#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CATCH_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEST_CASE(/;"	d
CATCH_TEST_CASE_METHOD	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TEST_CASE_METHOD(/;"	d
CATCH_THEN	misc/deps/catch2/include/catch.hpp	/^#define CATCH_THEN(/;"	d
CATCH_TRANSLATE_EXCEPTION	misc/deps/catch2/include/catch.hpp	/^#define CATCH_TRANSLATE_EXCEPTION(/;"	d
CATCH_TRANSLATE_EXCEPTION	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^CATCH_TRANSLATE_EXCEPTION( CustomException& ex ) {$/;"	f	namespace:__anon7fc805e90110::ExceptionTests
CATCH_TRANSLATE_EXCEPTION	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^CATCH_TRANSLATE_EXCEPTION( CustomStdException& ex ) {$/;"	f	namespace:__anon7fc805e90110::ExceptionTests
CATCH_TRANSLATE_EXCEPTION	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^CATCH_TRANSLATE_EXCEPTION( double& ex ) {$/;"	f	namespace:__anon7fc805e90110::ExceptionTests
CATCH_TRAP	misc/deps/catch2/include/internal/catch_debugger.h	/^        #define CATCH_TRAP(/;"	d
CATCH_TRAP	misc/deps/catch2/include/internal/catch_debugger.h	/^    #define CATCH_TRAP(/;"	d
CATCH_TRY	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#define CATCH_TRY /;"	d
CATCH_TRY	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_TRY /;"	d
CATCH_UNSAFE_UNRETAINED	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSAFE_UNRETAINED	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED /;"	d
CATCH_UNSAFE_UNRETAINED	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_UNSAFE_UNRETAINED$/;"	d
CATCH_UNSCOPED_INFO	misc/deps/catch2/include/catch.hpp	/^#define CATCH_UNSCOPED_INFO(/;"	d
CATCH_USE_VALGRIND	misc/deps/catch2/CMakeLists.txt	/^option(CATCH_USE_VALGRIND "Perform SelfTests with Valgrind" OFF)$/;"	D
CATCH_VERSION_MAJOR	misc/deps/catch2/include/catch.hpp	/^#define CATCH_VERSION_MAJOR /;"	d
CATCH_VERSION_MAJOR	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_VERSION_MAJOR /;"	d
CATCH_VERSION_MINOR	misc/deps/catch2/include/catch.hpp	/^#define CATCH_VERSION_MINOR /;"	d
CATCH_VERSION_MINOR	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_VERSION_MINOR /;"	d
CATCH_VERSION_PATCH	misc/deps/catch2/include/catch.hpp	/^#define CATCH_VERSION_PATCH /;"	d
CATCH_VERSION_PATCH	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define CATCH_VERSION_PATCH /;"	d
CATCH_WARN	misc/deps/catch2/include/catch.hpp	/^#define CATCH_WARN(/;"	d
CATCH_WHEN	misc/deps/catch2/include/catch.hpp	/^#define CATCH_WHEN(/;"	d
CC	Makefile	/^CC          ?= gcc$/;"	m
CC	misc/Makefile	/^CC          ?= gcc$/;"	m
CC	misc/deps/ezbuild/Makefile	/^CC          ?= gcc$/;"	m
CDF	Makefile	/^CDF         ?= $(patsubst %.o,%.d,$(COBJ))$/;"	m
CDF	misc/Makefile	/^CDF         ?= $(call replace_ext,o,d,$(COBJ))$/;"	m
CDF	misc/deps/ezbuild/Makefile	/^CDF         ?= $(patsubst %.o,%.d,$(COBJ))$/;"	m
CFLAGS	Makefile	/^CFLAGS      := $(CFLAGS)	$(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
CFLAGS	misc/Makefile	/^CFLAGS      ?= $(CFLAGS) $(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
CFLAGS	misc/deps/ezbuild/Makefile	/^CFLAGS      := $(CFLAGS)	$(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
CHECK	misc/deps/catch2/include/catch.hpp	/^#define CHECK(/;"	d
CHECK	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    CHECK( [obj isTrue] == NO );$/;"	C	implementation:TestFixture
CHECKED_ELSE	misc/deps/catch2/include/catch.hpp	/^#define CHECKED_ELSE(/;"	d
CHECKED_IF	misc/deps/catch2/include/catch.hpp	/^#define CHECKED_IF(/;"	d
CHECK_FALSE	misc/deps/catch2/include/catch.hpp	/^#define CHECK_FALSE(/;"	d
CHECK_NOFAIL	misc/deps/catch2/include/catch.hpp	/^#define CHECK_NOFAIL(/;"	d
CHECK_NOTHROW	misc/deps/catch2/include/catch.hpp	/^#define CHECK_NOTHROW(/;"	d
CHECK_THAT	misc/deps/catch2/include/catch.hpp	/^#define CHECK_THAT(/;"	d
CHECK_THAT	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    CHECK_THAT( (NSString*)nil, StartsWith( @"anything" ) );$/;"	C	implementation:TestFixture
CHECK_THROWS	misc/deps/catch2/include/catch.hpp	/^#define CHECK_THROWS(/;"	d
CHECK_THROWS_AS	misc/deps/catch2/include/catch.hpp	/^#define CHECK_THROWS_AS(/;"	d
CHECK_THROWS_MATCHES	misc/deps/catch2/include/catch.hpp	/^#define CHECK_THROWS_MATCHES(/;"	d
CHECK_THROWS_WITH	misc/deps/catch2/include/catch.hpp	/^#define CHECK_THROWS_WITH(/;"	d
CI and other odd pieces	misc/deps/catch2/docs/ci-and-misc.md	/^# CI and other odd pieces$/;"	c
CLARA_CONFIG_CONSOLE_WIDTH	misc/deps/catch2/third_party/clara.hpp	/^#define CLARA_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_CONFIG_MAIN	misc/deps/catch2/include/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CLARA_CONFIG_MAIN$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	misc/deps/catch2/include/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_MAIN_NOT_DEFINED	misc/deps/catch2/single_include/catch2/catch.hpp	/^#    define CLARA_CONFIG_MAIN_NOT_DEFINED$/;"	d
CLARA_CONFIG_OPTIONAL_TYPE	misc/deps/catch2/include/external/clara.hpp	/^#define CLARA_CONFIG_OPTIONAL_TYPE /;"	d
CLARA_CONFIG_OPTIONAL_TYPE	misc/deps/catch2/third_party/clara.hpp	/^#define CLARA_CONFIG_OPTIONAL_TYPE /;"	d
CLARA_HPP_INCLUDED	misc/deps/catch2/third_party/clara.hpp	/^#define CLARA_HPP_INCLUDED$/;"	d
CLARA_PLATFORM_WINDOWS	misc/deps/catch2/third_party/clara.hpp	/^#define CLARA_PLATFORM_WINDOWS$/;"	d
CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	misc/deps/catch2/third_party/clara.hpp	/^#define CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH /;"	d
CLARA_TEXTFLOW_HPP_INCLUDED	misc/deps/catch2/third_party/clara.hpp	/^#define CLARA_TEXTFLOW_HPP_INCLUDED$/;"	d
CLASS_TEST_HELPERS_INCLUDED	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^#define CLASS_TEST_HELPERS_INCLUDED$/;"	d	file:
CLEAN_FILES	misc/deps/catch2/CMake/Findcodecov.cmake	/^	set(CLEAN_FILES "")$/;"	v	function:add_coverage_target
CMAKE_EXE_LINKER_FLAGS	misc/deps/catch2/CMakeLists.txt	/^    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} \/ENTRY:wmainCRTStartup")$/;"	v
CMAKE_REQUIRED_FLAGS	misc/deps/catch2/CMake/Findcodecov.cmake	/^			set(CMAKE_REQUIRED_FLAGS "${FLAG}")$/;"	v
CMAKE_REQUIRED_QUIET	misc/deps/catch2/CMake/FindGcov.cmake	/^set(CMAKE_REQUIRED_QUIET ${codecov_FIND_QUIETLY})$/;"	v
CMAKE_REQUIRED_QUIET	misc/deps/catch2/CMake/Findcodecov.cmake	/^set(CMAKE_REQUIRED_QUIET ${CMAKE_REQUIRED_QUIET_SAVE})$/;"	v
CMAKE_REQUIRED_QUIET	misc/deps/catch2/CMake/Findcodecov.cmake	/^set(CMAKE_REQUIRED_QUIET ${codecov_FIND_QUIETLY})$/;"	v
CMAKE_REQUIRED_QUIET_SAVE	misc/deps/catch2/CMake/FindGcov.cmake	/^set(CMAKE_REQUIRED_QUIET_SAVE ${CMAKE_REQUIRED_QUIET})$/;"	v
CMAKE_REQUIRED_QUIET_SAVE	misc/deps/catch2/CMake/Findcodecov.cmake	/^set(CMAKE_REQUIRED_QUIET_SAVE ${CMAKE_REQUIRED_QUIET})$/;"	v
CMAKE_SIZEOF_VOID_P	misc/deps/catch2/CMakeLists.txt	/^    set(CMAKE_SIZEOF_VOID_P "")$/;"	v
CMAKE_SIZEOF_VOID_P	misc/deps/catch2/CMakeLists.txt	/^    set(CMAKE_SIZEOF_VOID_P ${CATCH2_CMAKE_SIZEOF_VOID_P})$/;"	v
CMake	misc/deps/catch2/docs/ci-and-misc.md	/^## CMake$/;"	s
CMake	misc/deps/catch2/docs/release-notes.md	/^### CMake$/;"	S
CMake integration	misc/deps/catch2/docs/cmake-integration.md	/^# CMake integration$/;"	c
CMake project options	misc/deps/catch2/docs/cmake-integration.md	/^## CMake project options$/;"	s
CMake target	misc/deps/catch2/docs/cmake-integration.md	/^## CMake target$/;"	s
COBJ	Makefile	/^COBJ        ?= $(patsubst %.c,%.o,$(subst $(SRCDIR),$(BINDIR),$(CSRC)))$/;"	m
COBJ	misc/Makefile	/^COBJ        ?= $(call replace_ext,c,o,$(call str_replace,$(CSRC),$(SRCDIR),$(BINDIR)))$/;"	m
COBJ	misc/deps/ezbuild/Makefile	/^COBJ        ?= $(patsubst %.c,%.o,$(subst $(SRCDIR),$(BINDIR),$(CSRC)))$/;"	m
COMPILATION_TEST_HELPERS_INCLUDED	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^#define COMPILATION_TEST_HELPERS_INCLUDED$/;"	d	file:
COMPILER	misc/deps/catch2/CMake/Findcodecov.cmake	/^	set(COMPILER ${CMAKE_${LANG}_COMPILER_ID})$/;"	v
CONDITION_TEST_HELPERS_INCLUDED	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^#define CONDITION_TEST_HELPERS_INCLUDED$/;"	d	file:
COVERAGE_FLAG_CANDIDATES	misc/deps/catch2/CMake/Findcodecov.cmake	/^set(COVERAGE_FLAG_CANDIDATES$/;"	v
CPACK_PACKAGE_CONTACT	misc/deps/catch2/CMakeLists.txt	/^    set(CPACK_PACKAGE_CONTACT "https:\/\/github.com\/catchorg\/Catch2\/")$/;"	v
CPACK_PACKAGE_VERSION	misc/deps/catch2/CMakeLists.txt	/^        set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})$/;"	v
CSRC	Makefile	/^CSRC			:=.\/src\/ft_string\/ft_strnstr.c\\$/;"	m
CSRC	Makefile	/^CSRC        ?=$/;"	m
CSRC	misc/Makefile	/^CSRC			:=.\/src\/ft_string\/ft_strnstr.c\\$/;"	m
CSRC	misc/Makefile	/^CSRC        ?= $(call find_by_ext,$(SRCDIR),c)$/;"	m
CSRC	misc/deps/ezbuild/Makefile	/^CSRC			:=.\/src\/ft_string\/ft_strnstr.c\\$/;"	m
CSRC	misc/deps/ezbuild/Makefile	/^CSRC        ?=$/;"	m
CTestName	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^            set(CTestName "${Name}")$/;"	v	function:ParseAndAddCatchTests_ParseFile
CTestName	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^            set(CTestName "${TestFixture}:${Name}")$/;"	v	function:ParseAndAddCatchTests_ParseFile
CTestName	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^            set(CTestName "${TestTarget}:${CTestName}")$/;"	v	function:ParseAndAddCatchTests_ParseFile
CURRENT_DIR	Makefile	/^CURRENT_DIR ?= $(patsubst %\/,%,$(dir $(MKFILE_PATH)))$/;"	m
CURRENT_DIR	misc/Makefile	/^CURRENT_DIR ?= $(patsubst %\/,%,$(dir $(MKFILE_PATH)))$/;"	m
CURRENT_DIR	misc/deps/ezbuild/Makefile	/^CURRENT_DIR ?= $(patsubst %\/,%,$(dir $(MKFILE_PATH)))$/;"	m
CXX	Makefile	/^CXX         ?= g++$/;"	m
CXX	misc/Makefile	/^CXX         ?= g++$/;"	m
CXX	misc/deps/ezbuild/Makefile	/^CXX         ?= g++$/;"	m
CXXDF	Makefile	/^CXXDF       ?= $(patsubst %.o,%.d,$(CXXOBJ))$/;"	m
CXXDF	misc/Makefile	/^CXXDF       ?= $(call replace_ext,o,d,$(COBJ))$/;"	m
CXXDF	misc/deps/ezbuild/Makefile	/^CXXDF       ?= $(patsubst %.o,%.d,$(CXXOBJ))$/;"	m
CXXENABLED	Makefile	/^CXXENABLED  ?= 0$/;"	m
CXXENABLED	misc/Makefile	/^CXXENABLED  ?= 0$/;"	m
CXXENABLED	misc/deps/ezbuild/Makefile	/^CXXENABLED  ?= 0$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS    := $(CXXFLAGS)	$(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS    ?= -std=c++11 $(CFLAGS)$/;"	m
CXXFLAGS	misc/Makefile	/^CXXFLAGS    ?= $(CXXFLAGS) $(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
CXXFLAGS	misc/Makefile	/^CXXFLAGS    ?= -std=c++11 $(CFLAGS)$/;"	m
CXXFLAGS	misc/deps/ezbuild/Makefile	/^CXXFLAGS    := $(CXXFLAGS)	$(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
CXXFLAGS	misc/deps/ezbuild/Makefile	/^CXXFLAGS    ?= -std=c++11 $(CFLAGS)$/;"	m
CXXOBJ	Makefile	/^CXXOBJ      ?= $(patsubst %.cpp,%.o,$(subst $(SRCDIR),$(BINDIR),$(CXXSRC)))$/;"	m
CXXOBJ	misc/Makefile	/^CXXOBJ      ?= $(call replace_ext,cpp,o,$(call str_replace,$(CXXSRC),$(SRCDIR),$(BINDIR)))$/;"	m
CXXOBJ	misc/deps/ezbuild/Makefile	/^CXXOBJ      ?= $(patsubst %.cpp,%.o,$(subst $(SRCDIR),$(BINDIR),$(CXXSRC)))$/;"	m
CXXSRC	Makefile	/^CXXSRC		:=$/;"	m
CXXSRC	Makefile	/^CXXSRC      ?=$/;"	m
CXXSRC	misc/Makefile	/^CXXSRC		:=$/;"	m
CXXSRC	misc/Makefile	/^CXXSRC      ?= $(call find_by_ext,$(SRCDIR),cpp)$/;"	m
CXXSRC	misc/deps/ezbuild/Makefile	/^CXXSRC		:=$/;"	m
CXXSRC	misc/deps/ezbuild/Makefile	/^CXXSRC      ?=$/;"	m
Capturer	misc/deps/catch2/include/internal/catch_message.cpp	/^    Capturer::Capturer( StringRef macroName, SourceLineInfo const& lineInfo, ResultWas::OfType r/;"	f	class:Catch::Capturer
Capturer	misc/deps/catch2/include/internal/catch_message.h	/^    class Capturer {$/;"	c	namespace:Catch
CaseSensitive	misc/deps/catch2/include/internal/catch_common.h	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CaseSensitive	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	s	namespace:Catch
CasedString	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        CasedString::CasedString( std::string const& str, CaseSensitive::Choice caseSensitivity /;"	f	class:Catch::Matchers::StdString::CasedString
CasedString	misc/deps/catch2/include/internal/catch_matchers_string.h	/^        struct CasedString$/;"	s	namespace:Catch::Matchers::StdString
Catch	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/external/clara.hpp	/^namespace Catch { namespace clara {$/;"	n
Catch	misc/deps/catch2/include/external/clara.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_analyse.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_measure.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_repeat.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/benchmark/detail/catch_timing.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_approx.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_approx.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_assertioninfo.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_assertionresult.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_capture_matchers.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_commandline.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_commandline.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_common.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_common.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_config.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_config.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_console_colour.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_context.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_context.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_debug_console.cpp	/^    namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_debug_console.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_debugger.cpp	/^    namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_debugger.cpp	/^    namespace Catch{$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_debugger.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_decomposer.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_decomposer.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_enforce.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_enforce.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_enum_values_registry.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_errno_guard.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_errno_guard.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_exception_translator_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_exception_translator_registry.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_generators.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_generators.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_impl.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_capture.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_interfaces_capture.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_config.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_enum_values_registry.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_exception.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_generatortracker.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_registry_hub.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_interfaces_registry_hub.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_runner.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_interfaces_runner.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_tag_alias_registry.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_interfaces_testcase.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_interfaces_testcase.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_leak_detector.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_leak_detector.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_list.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_list.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_matchers.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_matchers.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_matchers_exception.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_matchers_exception.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_matchers_string.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_message.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_message.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_meta.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_objc.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_option.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_output_redirect.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_polyfills.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_polyfills.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_reporter_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_reporter_registry.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_result_type.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_result_type.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_run_context.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_run_context.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_section.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_section.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_section_info.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_section_info.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_session.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_session.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_singletons.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_singletons.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_startup_exception_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_startup_exception_registry.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_stream.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_stream.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_string_manip.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_stringref.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_stringref.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_tag_alias.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_tag_alias.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_tag_alias_autoregistrar.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_tag_alias_autoregistrar.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_tag_alias_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_tag_alias_registry.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_test_case_info.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_test_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_test_registry.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_test_spec.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_text.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_timer.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_timer.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_to_string.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_tostring.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_tostring.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_totals.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_totals.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_uncaught_exceptions.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_uncaught_exceptions.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_user_interfaces.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_version.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_version.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/internal/catch_wildcard_pattern.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^namespace Catch$/;"	n
Catch	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_bases.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/reporters/catch_reporter_compact.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/reporters/catch_reporter_console.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/reporters/catch_reporter_listening.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/include/reporters/catch_reporter_xml.h	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/projects/ExtraTests/X04-DisabledExceptions-CustomHandler.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^namespace Catch {$/;"	n	file:
Catch	misc/deps/catch2/single_include/catch2/catch.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^namespace Catch {$/;"	n
Catch	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^namespace Catch {$/;"	n
Catch2	misc/deps/catch2/CMakeLists.txt	/^add_library(Catch2 INTERFACE)$/;"	t
Catch2	misc/deps/catch2/CMakeLists.txt	/^project(Catch2 LANGUAGES CXX VERSION 2.10.2)$/;"	p
Catch2 is released!	misc/deps/catch2/README.md	/^## Catch2 is released!$/;"	s
Catch2ExtraTests	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^project( Catch2ExtraTests LANGUAGES CXX )$/;"	p
Catch::StringMaker specialisation	misc/deps/catch2/docs/tostring.md	/^## Catch::StringMaker specialisation$/;"	s
Catch::is_range specialisation	misc/deps/catch2/docs/tostring.md	/^## Catch::is_range specialisation$/;"	s
CatchConan	misc/deps/catch2/conanfile.py	/^class CatchConan(ConanFile):$/;"	c
CatchCoverageHelper	misc/deps/catch2/misc/CMakeLists.txt	/^project(CatchCoverageHelper)$/;"	p
CatchExamples	misc/deps/catch2/examples/CMakeLists.txt	/^project( CatchExamples CXX )$/;"	p
CatchMain	misc/deps/catch2/examples/CMakeLists.txt	/^add_library( CatchMain         OBJECT ${EXAMPLES_DIR}\/${SOURCES_IDIOMATIC_MAIN} ${HEADER_DIR}\//;"	t
CatchMainTeamCity	misc/deps/catch2/examples/CMakeLists.txt	/^add_library( CatchMainTeamCity OBJECT ${EXAMPLES_DIR}\/200-Rpt-CatchMain.cpp ${HEADER_DIR}\/catc/;"	t
Catch_global_namespace_dummy	misc/deps/catch2/include/internal/catch_common.h	/^struct Catch_global_namespace_dummy {};$/;"	s
Catch_global_namespace_dummy	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct Catch_global_namespace_dummy {};$/;"	s
Change semantics of `[.]` and tag exclusion	misc/deps/catch2/docs/deprecations.md	/^### Change semantics of `[.]` and tag exclusion$/;"	S
CheckAtoi	misc/tests/ft_string/atoi.cpp	/^static void CheckAtoi (const char* Str, int Val)$/;"	f	typeref:typename:void	file:
CheckAtoi	misc/tests/ft_string/atol.cpp	/^static void CheckAtoi (const char* Str, int Val)$/;"	f	typeref:typename:void	file:
CheckAtoi	misc/tests/ft_string/atoll.cpp	/^static void CheckAtoi (const char* Str, int Val)$/;"	f	typeref:typename:void	file:
CheckFileList	misc/deps/catch2/CMake/MiscFunctions.cmake	/^function(CheckFileList LIST_VAR FOLDER)$/;"	f
CheckFileListRec	misc/deps/catch2/CMake/MiscFunctions.cmake	/^function(CheckFileListRec LIST_VAR FOLDER)$/;"	f
ChildNodes	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            using ChildNodes = std::vector<std::shared_ptr<ChildNodeT>>;$/;"	t	struct:Catch::CumulativeReporterBase::Node	typeref:typename:std::vector<std::shared_ptr<ChildNodeT>>
ChildSections	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            using ChildSections = std::vector<std::shared_ptr<SectionNode>>;$/;"	t	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:std::vector<std::shared_ptr<SectionNode>>
Children	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        using Children = std::vector<ITrackerPtr>;$/;"	t	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:std::vector<ITrackerPtr>
Choice	misc/deps/catch2/include/internal/catch_common.h	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choice	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct CaseSensitive { enum Choice {$/;"	g	struct:Catch::CaseSensitive
Choosing a reporter to use	misc/deps/catch2/docs/command-line.md	/^## Choosing a reporter to use$/;"	s
Chronometer	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            Chronometer(Detail::ChronometerConcept& meter, int k)$/;"	f	struct:Catch::Benchmark::Chronometer
Chronometer	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^        struct Chronometer {$/;"	s	namespace:Catch::Benchmark
ChronometerConcept	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            struct ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
ChronometerModel	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            struct ChronometerModel final : public ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
ChunkGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        ChunkGenerator(size_t size, GeneratorWrapper<T> generator) :$/;"	f	class:Catch::Generators::ChunkGenerator
ChunkGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    class ChunkGenerator final : public IGenerator<std::vector<T>> {$/;"	c	namespace:Catch::Generators
Clang/G++ -- `Matches` string matcher always returns false	misc/deps/catch2/docs/limitations.md	/^### Clang\/G++ -- `Matches` string matcher always returns false$/;"	S
Clang/G++ -- skipping leaf sections after an exception	misc/deps/catch2/docs/limitations.md	/^### Clang\/G++ -- skipping leaf sections after an exception$/;"	S
ClassName	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^class ClassName {};$/;"	c	file:
ClassTests	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^namespace{ namespace ClassTests {$/;"	n	namespace:__anon27b7d6900110	file:
ClockDuration	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^        using ClockDuration = typename Clock::duration;$/;"	t	namespace:Catch::Benchmark	typeref:typename:Clock::duration
Cmake/ projects:	misc/deps/catch2/docs/release-notes.md	/^##### Cmake\/ projects:$/;"	T
Code	misc/deps/catch2/include/internal/catch_console_colour.h	/^        enum Code {$/;"	g	struct:Catch::Colour
Code constructs to watch out for	misc/deps/catch2/docs/contributing.md	/^## Code constructs to watch out for$/;"	s
CodeCoverage module (GCOV, LCOV...)	misc/deps/catch2/docs/ci-and-misc.md	/^### CodeCoverage module (GCOV, LCOV...)$/;"	S
Colour	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    Colour::Colour( Code _colourCode ) { use( _colourCode ); }$/;"	f	class:Catch::Colour
Colour	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    Colour::Colour( Colour&& rhs ) noexcept {$/;"	f	class:Catch::Colour
Colour	misc/deps/catch2/include/internal/catch_console_colour.h	/^    struct Colour {$/;"	s	namespace:Catch
Colours	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    enum class Colours { Red, Green, Blue };$/;"	g	namespace:Bikeshed	file:
Column	misc/deps/catch2/include/external/clara.hpp	/^	explicit Column(std::string const& text) { m_strings.push_back(text); }$/;"	f	class:Catch::clara::TextFlow::Column
Column	misc/deps/catch2/include/external/clara.hpp	/^class Column {$/;"	c	namespace:Catch::clara::TextFlow
Column	misc/deps/catch2/third_party/clara.hpp	/^        explicit Column( std::string const& text ) { m_strings.push_back( text ); }$/;"	f	class:clara::TextFlow::Column
Column	misc/deps/catch2/third_party/clara.hpp	/^    class Column {$/;"	c	namespace:clara::TextFlow
ColumnBreak	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^struct ColumnBreak {};$/;"	s	namespace:Catch::__anon99a91d3f0110	file:
ColumnInfo	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^struct ColumnInfo {$/;"	s	namespace:Catch::__anon99a91d3f0110	file:
Columns	misc/deps/catch2/include/external/clara.hpp	/^class Columns {$/;"	c	namespace:Catch::clara::TextFlow
Columns	misc/deps/catch2/third_party/clara.hpp	/^    class Columns {$/;"	c	namespace:clara::TextFlow
Comands	README.md	/^## Comands$/;"	s
Command line	misc/deps/catch2/docs/command-line.md	/^# Command line$/;"	c
Commercial users of Catch	misc/deps/catch2/docs/commercial-users.md	/^# Commercial users of Catch$/;"	c
Commit and push update to GitHub	misc/deps/catch2/docs/release-process.md	/^### Commit and push update to GitHub$/;"	S
CompactReporter	misc/deps/catch2/include/reporters/catch_reporter_compact.h	/^    struct CompactReporter : StreamingReporterBase<CompactReporter> {$/;"	s	namespace:Catch
CompilationTests	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^namespace { namespace CompilationTests {$/;"	n	namespace:__anonb1aeb3b90110	file:
Compile-time configuration	misc/deps/catch2/docs/configuration.md	/^# Compile-time configuration$/;"	c
CompleteInvoker	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteInvoker {$/;"	s	namespace:Catch::Benchmark::Detail
CompleteInvoker	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteInvoker<void> {$/;"	s	namespace:Catch::Benchmark::Detail
CompleteType	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteType { using type = T; };$/;"	s	namespace:Catch::Benchmark::Detail
CompleteType	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteType<void> { struct type {}; };$/;"	s	namespace:Catch::Benchmark::Detail
CompleteType_t	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            using CompleteType_t = typename CompleteType<T>::type;$/;"	t	namespace:Catch::Benchmark::Detail	typeref:typename:CompleteType<T>::type
CompletedCycle	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            CompletedCycle$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
CompletedSuccessfully	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            CompletedSuccessfully,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
ComposableParserImpl	misc/deps/catch2/include/external/clara.hpp	/^    class ComposableParserImpl : public ParserBase {$/;"	c	namespace:Catch::clara::detail
ComposableParserImpl	misc/deps/catch2/third_party/clara.hpp	/^    class ComposableParserImpl : public ParserBase {$/;"	c	namespace:clara::detail
ConditionTests	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^namespace { namespace ConditionTests {$/;"	n	namespace:__anon8b7f96210110	file:
Config	misc/deps/catch2/include/internal/catch_config.cpp	/^    Config::Config( ConfigData const& data )$/;"	f	class:Catch::Config
Config	misc/deps/catch2/include/internal/catch_config.hpp	/^    class Config : public IConfig {$/;"	c	namespace:Catch
ConfigData	misc/deps/catch2/include/internal/catch_config.hpp	/^    struct ConfigData {$/;"	s	namespace:Catch
Console Colour API	misc/deps/catch2/docs/deprecations.md	/^### Console Colour API$/;"	S
Console width	misc/deps/catch2/docs/configuration.md	/^## Console width$/;"	s
ConsoleAssertionPrinter	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    ConsoleAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, bool _printInfo/;"	f	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	file:
ConsoleAssertionPrinter	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^class ConsoleAssertionPrinter {$/;"	c	namespace:Catch::__anon99a91d3f0110	file:
ConsoleReporter	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^ConsoleReporter::ConsoleReporter(ReporterConfig const& config)$/;"	f	class:Catch::ConsoleReporter
ConsoleReporter	misc/deps/catch2/include/reporters/catch_reporter_console.h	/^    struct ConsoleReporter : StreamingReporterBase<ConsoleReporter> {$/;"	s	namespace:Catch
Constructors and destructors	misc/deps/catch2/docs/benchmarks.md	/^### Constructors and destructors$/;"	S
Contains	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^    StdString::ContainsMatcher Contains( std::string const& str, CaseSensitive::Choice caseSensi/;"	f	namespace:Catch::Matchers	typeref:typename:StdString::ContainsMatcher
Contains	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^    Vector::ContainsMatcher<T> Contains( std::vector<T> const& comparator ) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Vector::ContainsMatcher<T>
Contains	misc/deps/catch2/include/internal/catch_objc.hpp	/^                Contains( NSString* substr ) : StringHolder( substr ){}$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::Contains
Contains	misc/deps/catch2/include/internal/catch_objc.hpp	/^            Contains( NSString* substr ){ return Impl::NSStringMatchers::Contains( substr ); }$/;"	f	namespace:Catch::Matchers	typeref:typename:Impl::NSStringMatchers::Contains
Contains	misc/deps/catch2/include/internal/catch_objc.hpp	/^            struct Contains : StringHolder {$/;"	s	namespace:Catch::Matchers::Impl::NSStringMatchers
Contains	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE_THAT( @"This is a string", Contains( @"is a" ) );$/;"	C	implementation:TestFixture
ContainsElementMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            ContainsElementMatcher(T const &comparator) : m_comparator( comparator) {}$/;"	f	struct:Catch::Matchers::Vector::ContainsElementMatcher
ContainsElementMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^        struct ContainsElementMatcher : MatcherBase<std::vector<T>> {$/;"	s	namespace:Catch::Matchers::Vector
ContainsMatcher	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        ContainsMatcher::ContainsMatcher( CasedString const& comparator ) : StringMatcherBase( "/;"	f	class:Catch::Matchers::StdString::ContainsMatcher
ContainsMatcher	misc/deps/catch2/include/internal/catch_matchers_string.h	/^        struct ContainsMatcher : StringMatcherBase {$/;"	s	namespace:Catch::Matchers::StdString
ContainsMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            ContainsMatcher(std::vector<T> const &comparator) : m_comparator( comparator ) {}$/;"	f	struct:Catch::Matchers::Vector::ContainsMatcher
ContainsMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^        struct ContainsMatcher : MatcherBase<std::vector<T>> {$/;"	s	namespace:Catch::Matchers::Vector
Context	misc/deps/catch2/include/internal/catch_context.cpp	/^    class Context : public IMutableContext, NonCopyable {$/;"	c	namespace:Catch	file:
ContinueOnFailure	misc/deps/catch2/include/internal/catch_result_type.h	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	misc/deps/catch2/single_include/catch2/catch.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
Continuous Integration systems	misc/deps/catch2/docs/ci-and-misc.md	/^## Continuous Integration systems$/;"	s
Contrib	misc/deps/catch2/docs/release-notes.md	/^### Contrib$/;"	S
Contributing to Catch	misc/deps/catch2/docs/contributing.md	/^# Contributing to Catch$/;"	c
Contributor Covenant Code of Conduct	misc/deps/catch2/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Cool feature	misc/deps/catch2/docs/contributing.md	/^# Cool feature$/;"	c
Counts	misc/deps/catch2/include/internal/catch_totals.h	/^    struct Counts {$/;"	s	namespace:Catch
CoutStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^            CoutStream() : m_os( Catch::cout().rdbuf() ) {}$/;"	f	class:Catch::Detail::__anond61e3add0110::CoutStream	file:
CoutStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^        class CoutStream : public IStream {$/;"	c	namespace:Catch::Detail::__anond61e3add0110	file:
CoverageHelper	misc/deps/catch2/misc/CMakeLists.txt	/^add_executable(CoverageHelper coverage-helper.cpp)$/;"	t
Credits	README.md	/^## Credits$/;"	s
CumulativeReporterBase	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        CumulativeReporterBase( ReporterConfig const& _config )$/;"	f	struct:Catch::CumulativeReporterBase
CumulativeReporterBase	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^    struct CumulativeReporterBase : IStreamingReporter {$/;"	s	namespace:Catch
Custom matchers	misc/deps/catch2/docs/matchers.md	/^## Custom matchers$/;"	s
CustomException	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^    explicit CustomException( const std::string& msg )$/;"	f	class:__anon7fc805e90110::ExceptionTests::CustomException	file:
CustomException	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^class CustomException {$/;"	c	namespace:__anon7fc805e90110::ExceptionTests	file:
CustomStdException	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^    explicit CustomStdException( const std::string& msg )$/;"	f	class:__anon7fc805e90110::ExceptionTests::CustomStdException	file:
CustomStdException	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^class CustomStdException : public std::exception {$/;"	c	namespace:__anon7fc805e90110::ExceptionTests	file:
Customization	misc/deps/catch2/docs/cmake-integration.md	/^#### Customization$/;"	t
Cyan	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Cyan,$/;"	e	enum:Catch::Colour::Code
CycleState	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        enum CycleState {$/;"	g	class:Catch::TestCaseTracking::TrackerBase
DBConnection	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^class DBConnection$/;"	c	file:
DEBUG	Makefile	/^DEBUG		:= 0$/;"	m
DEBUG	Makefile	/^DEBUG		?= 0$/;"	m
DEBUG	Makefile	/^DEBUG       ?= 1$/;"	m
DEBUG	misc/Makefile	/^DEBUG		:= 0$/;"	m
DEBUG	misc/Makefile	/^DEBUG		?= 0$/;"	m
DEBUG	misc/Makefile	/^DEBUG       ?= 1$/;"	m
DEBUG	misc/deps/ezbuild/Makefile	/^DEBUG		:= 0$/;"	m
DEBUG	misc/deps/ezbuild/Makefile	/^DEBUG		?= 0$/;"	m
DEBUG	misc/deps/ezbuild/Makefile	/^DEBUG       ?= 1$/;"	m
DEBUGFLAGS	Makefile	/^DEBUGFLAGS	?= -g -fsanitize=address -fno-omit-frame-pointer$/;"	m
DEBUGFLAGS	misc/Makefile	/^DEBUGFLAGS	?= -g -fsanitize=address -fno-omit-frame-pointer$/;"	m
DEBUGFLAGS	misc/deps/ezbuild/Makefile	/^DEBUGFLAGS	?= -g -fsanitize=address -fno-omit-frame-pointer$/;"	m
DESCRIPTION	misc/deps/catch2/projects/XCode/OCTest/OCTest/OCTest.1	/^.Sh DESCRIPTION          \\" Section Header - required - don't modify$/;"	s
DYNAMIC_SECTION	misc/deps/catch2/include/catch.hpp	/^#define DYNAMIC_SECTION(/;"	d
Data	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^struct Data { std::string str; size_t len; };$/;"	s	file:
Data Generators	misc/deps/catch2/docs/generators.md	/^# Data Generators$/;"	c
DebugOutStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^            DebugOutStream()$/;"	f	class:Catch::Detail::__anond61e3add0110::DebugOutStream	file:
DebugOutStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^        class DebugOutStream : public IStream {$/;"	c	namespace:Catch::Detail::__anond61e3add0110	file:
Decay	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^            using Decay = typename std::decay<T>::type;$/;"	t	namespace:Catch::Benchmark::Detail	typeref:typename:std::decay<T>::type
Decomposer	misc/deps/catch2/include/internal/catch_decomposer.h	/^    struct Decomposer {$/;"	s	namespace:Catch
Default reporter	misc/deps/catch2/docs/configuration.md	/^## Default reporter$/;"	s
DefaultForReporter	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        DefaultForReporter,$/;"	e	enum:Catch::ShowDurations::OrNot
Defining test fixtures	misc/deps/catch2/docs/test-fixtures.md	/^## Defining test fixtures$/;"	s
Deprecations	misc/deps/catch2/docs/deprecations.md	/^## Deprecations$/;"	s
Deprecations and incoming changes	misc/deps/catch2/docs/deprecations.md	/^# Deprecations and incoming changes$/;"	c
DerivedException	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    struct DerivedException : std::exception {$/;"	s	namespace:__anon96897c110110::MatchersTests	file:
Description	misc/deps/catch2/.github/pull_request_template.md	/^## Description$/;"	s
Detail	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_analyse.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_measure.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_repeat.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Detail	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	misc/deps/catch2/include/internal/catch_approx.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
Detail	misc/deps/catch2/include/internal/catch_approx.h	/^namespace Detail {$/;"	n	namespace:Catch
Detail	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	misc/deps/catch2/include/internal/catch_enum_values_registry.h	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	misc/deps/catch2/include/internal/catch_interfaces_enum_values_registry.h	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^namespace Detail {$/;"	n	namespace:Catch::Matchers::Generic
Detail	misc/deps/catch2/include/internal/catch_objc.hpp	/^    namespace Detail{$/;"	n	namespace:Catch
Detail	misc/deps/catch2/include/internal/catch_stream.cpp	/^    namespace Detail { namespace {$/;"	n	namespace:Catch	file:
Detail	misc/deps/catch2/include/internal/catch_tostring.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
Detail	misc/deps/catch2/include/internal/catch_tostring.h	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	misc/deps/catch2/single_include/catch2/catch.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
DidntThrowException	misc/deps/catch2/include/internal/catch_result_type.h	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	misc/deps/catch2/single_include/catch2/catch.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
Directory structure	misc/deps/catch2/docs/contributing.md	/^## Directory structure$/;"	s
Disable statistical analysis of collected benchmark samples	misc/deps/catch2/docs/command-line.md	/^## Disable statistical analysis of collected benchmark samples$/;"	s
DisableStringification	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^add_executable(DisableStringification ${TESTS_DIR}\/X11-DisableStringification.cpp)$/;"	t
DisabledExceptions-CustomHandler	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^add_executable( DisabledExceptions-CustomHandler ${TESTS_DIR}\/X04-DisabledExceptions-CustomHand/;"	t
DisabledExceptions-DefaultHandler	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^add_executable( DisabledExceptions-DefaultHandler ${TESTS_DIR}\/X03-DisabledExceptions-DefaultHa/;"	t
DisabledMacros	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^add_executable(DisabledMacros ${TESTS_DIR}\/X02-DisabledMacros.cpp)$/;"	t
Disabling exceptions	misc/deps/catch2/docs/configuration.md	/^## Disabling exceptions$/;"	s
Documenting your code	misc/deps/catch2/docs/contributing.md	/^## Documenting your code$/;"	s
Double	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^        Double$/;"	e	enum:Catch::Matchers::Floating::FloatingPointKind	file:
Duration	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^	explicit Duration(double inNanoseconds, Unit units = Unit::Auto)$/;"	f	class:Catch::__anon99a91d3f0110::Duration	file:
Duration	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    explicit Duration(uint64_t inNanoseconds, Unit units = Unit::Auto)$/;"	f	class:Catch::__anon99a91d3f0110::Duration	file:
Duration	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^class Duration {$/;"	c	namespace:Catch::__anon99a91d3f0110	file:
Duration	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    using Duration = Catch::Benchmark::FloatDuration<Catch::Benchmark::default_clock>;$/;"	t	typeref:typename:Catch::Benchmark::FloatDuration<Catch::Benchmark::default_clock>	file:
ENABLE_COVERAGE	misc/deps/catch2/CMake/Findcodecov.cmake	/^option(ENABLE_COVERAGE "Enable coverage build." OFF)$/;"	D
ENABLE_COVERAGE	misc/deps/catch2/projects/CMakeLists.txt	/^    set(ENABLE_COVERAGE ON CACHE BOOL "Enable coverage build." FORCE)$/;"	v
ET	misc/deps/catch2/scripts/benchmarkRunner.py	/^import xml.etree.ElementTree as ET$/;"	I
EXAMPLES_DIR	misc/deps/catch2/examples/CMakeLists.txt	/^set( EXAMPLES_DIR ${CATCH_DIR}\/examples )$/;"	v
EXCEPTION_TEST_HELPERS_INCLUDED	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^#define EXCEPTION_TEST_HELPERS_INCLUDED$/;"	d	file:
EXTERNAL_HEADERS	misc/deps/catch2/projects/CMakeLists.txt	/^set(EXTERNAL_HEADERS$/;"	v
EXTRA_TEST_BINARIES	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^set( EXTRA_TEST_BINARIES$/;"	v
EZBUILD	Makefile	/^EZBUILD		:= misc\/deps\/ezbuild$/;"	m
EZBUILD	Makefile	/^EZBUILD		?= .\/misc\/deps\/ezbuild$/;"	m
EZBUILD	misc/deps/ezbuild/Makefile	/^EZBUILD		:= misc\/deps\/ezbuild$/;"	m
EZBUILD	misc/deps/ezbuild/Makefile	/^EZBUILD		?= .\/misc\/deps\/ezbuild$/;"	m
Eliding assertions expected to throw	misc/deps/catch2/docs/command-line.md	/^## Eliding assertions expected to throw$/;"	s
Enabling stringification	misc/deps/catch2/docs/configuration.md	/^## Enabling stringification$/;"	s
EndTag	misc/deps/catch2/include/external/clara.hpp	/^		struct EndTag {};$/;"	s	class:Catch::clara::TextFlow::Columns::iterator
EndTag	misc/deps/catch2/third_party/clara.hpp	/^            struct EndTag {};$/;"	s	class:clara::TextFlow::Columns::iterator
Endianness	misc/deps/catch2/include/internal/catch_tostring.cpp	/^        struct Endianness {$/;"	s	namespace:Catch::Detail::__anon55f5ca2b0110	file:
EndsWith	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^    StdString::EndsWithMatcher EndsWith( std::string const& str, CaseSensitive::Choice caseSensi/;"	f	namespace:Catch::Matchers	typeref:typename:StdString::EndsWithMatcher
EndsWith	misc/deps/catch2/include/internal/catch_objc.hpp	/^                EndsWith( NSString* substr ) : StringHolder( substr ){}$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::EndsWith
EndsWith	misc/deps/catch2/include/internal/catch_objc.hpp	/^            EndsWith( NSString* substr ){ return Impl::NSStringMatchers::EndsWith( substr ); }$/;"	f	namespace:Catch::Matchers	typeref:typename:Impl::NSStringMatchers::EndsWith
EndsWith	misc/deps/catch2/include/internal/catch_objc.hpp	/^            struct EndsWith : StringHolder {$/;"	s	namespace:Catch::Matchers::Impl::NSStringMatchers
EndsWith	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE_THAT( @"This is a string", EndsWith( @"string" ) );$/;"	C	implementation:TestFixture
EndsWithMatcher	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        EndsWithMatcher::EndsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "/;"	f	class:Catch::Matchers::StdString::EndsWithMatcher
EndsWithMatcher	misc/deps/catch2/include/internal/catch_matchers_string.h	/^        struct EndsWithMatcher : StringMatcherBase {$/;"	s	namespace:Catch::Matchers::StdString
Enforcement	misc/deps/catch2/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s
Enum1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum1 { Enum1Value0, Enum1Value1 };$/;"	g	namespace:__anonc1e781690110	file:
Enum1Value0	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum1 { Enum1Value0, Enum1Value1 };$/;"	e	enum:__anonc1e781690110::Enum1	file:
Enum1Value1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum1 { Enum1Value0, Enum1Value1 };$/;"	e	enum:__anonc1e781690110::Enum1	file:
Enum2	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum2 { Enum2Value0, Enum2Value1 };$/;"	g	namespace:__anonc1e781690110	file:
Enum2Value0	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum2 { Enum2Value0, Enum2Value1 };$/;"	e	enum:__anonc1e781690110::Enum2	file:
Enum2Value1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum2 { Enum2Value0, Enum2Value1 };$/;"	e	enum:__anonc1e781690110::Enum2	file:
EnumBitFieldTests	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace EnumBitFieldTests$/;"	n	file:
EnumClass1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass1 { EnumClass1Value0, EnumClass1Value1 };$/;"	g	namespace:__anonc1e781690210	file:
EnumClass1Value0	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass1 { EnumClass1Value0, EnumClass1Value1 };$/;"	e	enum:__anonc1e781690210::EnumClass1	file:
EnumClass1Value1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass1 { EnumClass1Value0, EnumClass1Value1 };$/;"	e	enum:__anonc1e781690210::EnumClass1	file:
EnumClass2	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass2 { EnumClass2Value0, EnumClass2Value1 };$/;"	g	namespace:__anonc1e781690210	file:
EnumClass2Value0	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass2 { EnumClass2Value0, EnumClass2Value1 };$/;"	e	enum:__anonc1e781690210::EnumClass2	file:
EnumClass2Value1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass2 { EnumClass2Value0, EnumClass2Value1 };$/;"	e	enum:__anonc1e781690210::EnumClass2	file:
EnumClass3	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	g	file:
EnumClass3	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	g	file:
EnumInfo	misc/deps/catch2/include/internal/catch_interfaces_enum_values_registry.h	/^        struct EnumInfo {$/;"	s	namespace:Catch::Detail
EnumInfo	misc/deps/catch2/single_include/catch2/catch.hpp	/^        struct EnumInfo {$/;"	s	namespace:Catch::Detail
EnumValuesRegistry	misc/deps/catch2/include/internal/catch_enum_values_registry.h	/^        class EnumValuesRegistry : public IMutableEnumValuesRegistry {$/;"	c	namespace:Catch::Detail
Enums	misc/deps/catch2/docs/tostring.md	/^## Enums$/;"	s
Environment	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^        struct Environment {$/;"	s	namespace:Catch::Benchmark
EnvironmentEstimate	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^        struct EnvironmentEstimate {$/;"	s	namespace:Catch::Benchmark
Equals	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^    StdString::EqualsMatcher Equals( std::string const& str, CaseSensitive::Choice caseSensitivi/;"	f	namespace:Catch::Matchers	typeref:typename:StdString::EqualsMatcher
Equals	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^    Vector::EqualsMatcher<T> Equals( std::vector<T> const& comparator ) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Vector::EqualsMatcher<T>
Equals	misc/deps/catch2/include/internal/catch_objc.hpp	/^                Equals( NSString* substr ) : StringHolder( substr ){}$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::Equals
Equals	misc/deps/catch2/include/internal/catch_objc.hpp	/^            Equals( NSString* substr ){ return Impl::NSStringMatchers::Equals( substr ); }$/;"	f	namespace:Catch::Matchers	typeref:typename:Impl::NSStringMatchers::Equals
Equals	misc/deps/catch2/include/internal/catch_objc.hpp	/^            struct Equals : StringHolder {$/;"	s	namespace:Catch::Matchers::Impl::NSStringMatchers
Equals	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE_THAT( @"This is a string", Equals( @"This isn't a string" ) );$/;"	C	implementation:TestFixture
EqualsMatcher	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        EqualsMatcher::EqualsMatcher( CasedString const& comparator ) : StringMatcherBase( "equa/;"	f	class:Catch::Matchers::StdString::EqualsMatcher
EqualsMatcher	misc/deps/catch2/include/internal/catch_matchers_string.h	/^        struct EqualsMatcher : StringMatcherBase {$/;"	s	namespace:Catch::Matchers::StdString
EqualsMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            EqualsMatcher(std::vector<T> const &comparator) : m_comparator( comparator ) {}$/;"	f	struct:Catch::Matchers::Vector::EqualsMatcher
EqualsMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^        struct EqualsMatcher : MatcherBase<std::vector<T>> {$/;"	s	namespace:Catch::Matchers::Vector
ErrnoGuard	misc/deps/catch2/include/internal/catch_errno_guard.cpp	/^        ErrnoGuard::ErrnoGuard():m_oldErrno(errno){}$/;"	f	class:Catch::ErrnoGuard
ErrnoGuard	misc/deps/catch2/include/internal/catch_errno_guard.h	/^    class ErrnoGuard {$/;"	c	namespace:Catch
Error	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Error = BrightRed,$/;"	e	enum:Catch::Colour::Code
EscapedName	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
Estimate	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^        struct Estimate {$/;"	s	namespace:Catch::Benchmark
Even Older versions	misc/deps/catch2/docs/release-notes.md	/^## Even Older versions$/;"	s
Event Listeners	misc/deps/catch2/docs/event-listeners.md	/^# Event Listeners$/;"	c
Events that can be hooked	misc/deps/catch2/docs/event-listeners.md	/^## Events that can be hooked$/;"	s
Examples	misc/deps/catch2/docs/test-cases-and-sections.md	/^### Examples$/;"	S
Exception	misc/deps/catch2/include/internal/catch_matchers_exception.cpp	/^namespace Exception {$/;"	n	namespace:Catch::Matchers	file:
Exception	misc/deps/catch2/include/internal/catch_matchers_exception.hpp	/^namespace Exception {$/;"	n	namespace:Catch::Matchers
Exception	misc/deps/catch2/include/internal/catch_result_type.h	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	misc/deps/catch2/single_include/catch2/catch.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception matchers	misc/deps/catch2/docs/matchers.md	/^### Exception matchers$/;"	S
ExceptionMatcher	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^        ExceptionMatcher(int i) : m_expected(i) {}$/;"	f	class:__anon96897c110110::MatchersTests::ExceptionMatcher	file:
ExceptionMatcher	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    class ExceptionMatcher : public Catch::MatcherBase<SpecialException> {$/;"	c	namespace:__anon96897c110110::MatchersTests	file:
ExceptionMessageMatcher	misc/deps/catch2/include/internal/catch_matchers_exception.hpp	/^    ExceptionMessageMatcher(std::string const& message):$/;"	f	class:Catch::Matchers::Exception::ExceptionMessageMatcher
ExceptionMessageMatcher	misc/deps/catch2/include/internal/catch_matchers_exception.hpp	/^class ExceptionMessageMatcher : public MatcherBase<std::exception> {$/;"	c	namespace:Catch::Matchers::Exception
ExceptionTests	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^namespace { namespace ExceptionTests {$/;"	n	namespace:__anon7fc805e90110	file:
ExceptionTranslator	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^            ExceptionTranslator( std::string(*translateFunction)( T& ) )$/;"	f	class:Catch::ExceptionTranslatorRegistrar::ExceptionTranslator
ExceptionTranslator	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^        class ExceptionTranslator : public IExceptionTranslator {$/;"	c	class:Catch::ExceptionTranslatorRegistrar
ExceptionTranslatorRegistrar	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^        ExceptionTranslatorRegistrar( std::string(*translateFunction)( T& ) ) {$/;"	f	class:Catch::ExceptionTranslatorRegistrar
ExceptionTranslatorRegistrar	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^    class ExceptionTranslatorRegistrar {$/;"	c	namespace:Catch
ExceptionTranslatorRegistry	misc/deps/catch2/include/internal/catch_exception_translator_registry.h	/^    class ExceptionTranslatorRegistry : public IExceptionTranslatorRegistry {$/;"	c	namespace:Catch
ExceptionTranslators	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^    using ExceptionTranslators = std::vector<std::unique_ptr<IExceptionTranslator const>>;$/;"	t	namespace:Catch	typeref:typename:std::vector<std::unique_ptr<IExceptionTranslator const>>
Exceptions	misc/deps/catch2/docs/assertions.md	/^## Exceptions$/;"	s
Exceptions	misc/deps/catch2/docs/tostring.md	/^## Exceptions$/;"	s
ExcludedPattern	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    TestSpec::ExcludedPattern::ExcludedPattern( PatternPtr const& underlyingPattern )$/;"	f	class:Catch::TestSpec::ExcludedPattern
ExcludedPattern	misc/deps/catch2/include/internal/catch_test_spec.h	/^        class ExcludedPattern : public Pattern {$/;"	c	class:Catch::TestSpec
ExeName	misc/deps/catch2/include/external/clara.hpp	/^        ExeName() : m_name( std::make_shared<std::string>( "<executable>" ) ) {}$/;"	f	class:Catch::clara::detail::ExeName
ExeName	misc/deps/catch2/include/external/clara.hpp	/^        explicit ExeName( LambdaT const& lambda ) : ExeName() {$/;"	f	class:Catch::clara::detail::ExeName
ExeName	misc/deps/catch2/include/external/clara.hpp	/^        explicit ExeName( std::string &ref ) : ExeName() {$/;"	f	class:Catch::clara::detail::ExeName
ExeName	misc/deps/catch2/include/external/clara.hpp	/^    class ExeName : public ComposableParserImpl<ExeName> {$/;"	c	namespace:Catch::clara::detail
ExeName	misc/deps/catch2/third_party/clara.hpp	/^        ExeName() : m_name( std::make_shared<std::string>( "<executable>" ) ) {}$/;"	f	class:clara::detail::ExeName
ExeName	misc/deps/catch2/third_party/clara.hpp	/^        explicit ExeName( LambdaT const& lambda ) : ExeName() {$/;"	f	class:clara::detail::ExeName
ExeName	misc/deps/catch2/third_party/clara.hpp	/^        explicit ExeName( std::string &ref ) : ExeName() {$/;"	f	class:clara::detail::ExeName
ExeName	misc/deps/catch2/third_party/clara.hpp	/^    class ExeName : public ComposableParserImpl<ExeName> {$/;"	c	namespace:clara::detail
Executing	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            Executing,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
Executing	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            Executing,$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
ExecutingChildren	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            ExecutingChildren,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
Execution procedure	misc/deps/catch2/docs/benchmarks.md	/^## Execution procedure$/;"	s
ExecutionPlan	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^        struct ExecutionPlan {$/;"	s	namespace:Catch::Benchmark
ExplicitFailure	misc/deps/catch2/include/internal/catch_result_type.h	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	misc/deps/catch2/single_include/catch2/catch.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExprLhs	misc/deps/catch2/include/internal/catch_decomposer.h	/^        explicit ExprLhs( LhsT lhs ) : m_lhs( lhs ) {}$/;"	f	class:Catch::ExprLhs
ExprLhs	misc/deps/catch2/include/internal/catch_decomposer.h	/^    class ExprLhs {$/;"	c	namespace:Catch
ExpressionFailed	misc/deps/catch2/include/internal/catch_result_type.h	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	misc/deps/catch2/single_include/catch2/catch.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
Expressions with commas	misc/deps/catch2/docs/assertions.md	/^## Expressions with commas$/;"	s
FAIL	misc/deps/catch2/include/catch.hpp	/^#define FAIL(/;"	d
FAIL_CHECK	misc/deps/catch2/include/catch.hpp	/^#define FAIL_CHECK(/;"	d
FILES	misc/deps/catch2/projects/XCode/OCTest/OCTest/OCTest.1	/^.Sh FILES                \\" File used or created by the topic of the man page$/;"	s
FLAG	misc/deps/catch2/CMake/FindLcov.cmake	/^		set(FLAG "--no-external")$/;"	v
FLAG	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(FLAG "")$/;"	v
FT_BOOL_H	inc/ft_bool.h	/^# define FT_BOOL_H$/;"	d
FT_H	inc/ft.h	/^# define FT_H$/;"	d
FT_HPP	misc/ft.hpp	/^# define FT_HPP$/;"	d
FT_IO_H	inc/ft_io.h	/^# define FT_IO_H$/;"	d
FT_LIST_H	inc/ft_list.h	/^# define FT_LIST_H$/;"	d
FT_MEMORY_H	inc/ft_memory.h	/^# define FT_MEMORY_H$/;"	d
FT_STRING_H	inc/ft_string.h	/^# define FT_STRING_H$/;"	d
Factorial	misc/deps/catch2/.conan/test_package/test_package.cpp	/^int Factorial( int number ) {$/;"	f	typeref:typename:int
Factorial	misc/deps/catch2/examples/010-TestCase.cpp	/^int Factorial( int number ) {$/;"	f	typeref:typename:int
Factorial	misc/deps/catch2/examples/020-TestCase-2.cpp	/^int Factorial( int number ) {$/;"	f	typeref:typename:int
Factorial	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^inline unsigned int Factorial( unsigned int number )  {$/;"	f	namespace:__anone7dbb1860110::MiscTests	typeref:typename:unsigned int
FactoryMap	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        using FactoryMap = std::map<std::string, IReporterFactoryPtr>;$/;"	t	struct:Catch::IReporterRegistry	typeref:typename:std::map<std::string,IReporterFactoryPtr>
Failed	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            Failed$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
FailureBit	misc/deps/catch2/include/internal/catch_result_type.h	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	misc/deps/catch2/single_include/catch2/catch.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
Fallback stringifier	misc/deps/catch2/docs/configuration.md	/^## Fallback stringifier$/;"	s
FallbackStringifier	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^add_executable(FallbackStringifier ${TESTS_DIR}\/X10-FallbackStringifier.cpp)$/;"	t
FalseTest	misc/deps/catch2/include/internal/catch_result_type.h	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	misc/deps/catch2/single_include/catch2/catch.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FatalConditionHandler	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    FatalConditionHandler::FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
FatalConditionHandler	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^    struct FatalConditionHandler {$/;"	s	namespace:Catch
FatalErrorCondition	misc/deps/catch2/include/internal/catch_result_type.h	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	misc/deps/catch2/single_include/catch2/catch.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
Features	misc/deps/catch2/docs/limitations.md	/^## Features$/;"	s
Features/ Changes:	misc/deps/catch2/docs/release-notes.md	/^##### Features\/ Changes:$/;"	T
Fibonacci	misc/deps/catch2/docs/benchmarks.md	/^Fibonacci$/;"	s
Fibonacci	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^    std::uint64_t Fibonacci(std::uint64_t number) {$/;"	f	namespace:__anonc7555fe50110	typeref:typename:std::uint64_t
FileName	misc/deps/catch2/include/internal/catch_console_colour.h	/^            FileName = LightGrey,$/;"	e	enum:Catch::Colour::Code
FileStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^            FileStream( StringRef filename ) {$/;"	f	class:Catch::Detail::__anond61e3add0110::FileStream	file:
FileStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^        class FileStream : public IStream {$/;"	c	namespace:Catch::Detail::__anond61e3add0110	file:
Filenames as tags	misc/deps/catch2/docs/command-line.md	/^## Filenames as tags$/;"	s
Filter	misc/deps/catch2/include/internal/catch_test_spec.h	/^        struct Filter {$/;"	s	class:Catch::TestSpec
FilterGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        FilterGenerator(P&& pred, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::FilterGenerator
FilterGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    class FilterGenerator : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
FilterMatch	misc/deps/catch2/include/internal/catch_test_spec.h	/^        struct FilterMatch {$/;"	s	class:Catch::TestSpec
FixedValuesGenerator	misc/deps/catch2/include/internal/catch_generators.hpp	/^        FixedValuesGenerator( std::initializer_list<T> values ) : m_values( values ) {}$/;"	f	class:Catch::Generators::FixedValuesGenerator
FixedValuesGenerator	misc/deps/catch2/include/internal/catch_generators.hpp	/^    class FixedValuesGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
Fixes	misc/deps/catch2/docs/release-notes.md	/^### Fixes$/;"	S
Fixes	misc/deps/catch2/docs/release-notes.md	/^##### Fixes$/;"	T
Fixes and minor improvements	misc/deps/catch2/docs/release-notes.md	/^##### Fixes and minor improvements$/;"	T
Fixes:	misc/deps/catch2/docs/release-notes.md	/^##### Fixes:$/;"	T
Fixture	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^struct Fixture {$/;"	s	file:
Fixture	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^            Fixture()$/;"	f	struct:__anon538088c40110::BDDTests::__anon538088c40210::Fixture	file:
Fixture	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^        struct Fixture {$/;"	s	namespace:__anon538088c40110::BDDTests::__anon538088c40210	file:
Fixture	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    Fixture() : m_a( 1 ) {}$/;"	f	struct:__anon27b7d6900110::ClassTests::Fixture	file:
Fixture	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^struct Fixture$/;"	s	namespace:__anon27b7d6900110::ClassTests	file:
Fixture_1245	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct Fixture_1245 {};$/;"	s	namespace:__anonb1aeb3b90110::CompilationTests	file:
Flags	misc/deps/catch2/include/internal/catch_result_type.h	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Float	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^        Float,$/;"	e	enum:Catch::Matchers::Floating::FloatingPointKind	file:
FloatDuration	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^        using FloatDuration = std::chrono::duration<double, typename Clock::period>;$/;"	t	namespace:Catch::Benchmark	typeref:typename:std::chrono::duration<double,typename Clock::period>
Floating	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^namespace Floating {$/;"	n	namespace:Catch::Matchers	file:
Floating	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^    namespace Floating {$/;"	n	namespace:Catch::Matchers
Floating point comparisons	misc/deps/catch2/docs/assertions.md	/^### Floating point comparisons$/;"	S
Floating point matchers	misc/deps/catch2/docs/matchers.md	/^### Floating point matchers$/;"	S
Floating point precision	misc/deps/catch2/docs/tostring.md	/^## Floating point precision$/;"	s
FloatingPointKind	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    enum class FloatingPointKind : uint8_t {$/;"	g	namespace:Catch::Matchers::Floating	typeref:typename:uint8_t	file:
Foo	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^struct Foo {$/;"	s	namespace:__anone7dbb1860110::MiscTests	file:
ForAttributes	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	e	enum:Catch::XmlEncode::ForWhat
ForTextNodes	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	e	enum:Catch::XmlEncode::ForWhat
ForWhat	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	g	class:Catch::XmlEncode
GCOV_BIN	misc/deps/catch2/CMake/FindGcov.cmake	/^						set(GCOV_BIN "${LLVM_COV_WRAPPER}" CACHE FILEPATH "")$/;"	v
GCOV_BIN	misc/deps/catch2/CMake/FindGcov.cmake	/^	set(GCOV_BIN "${GCOV_${TCOMPILER}_BIN}")$/;"	v	function:add_gcov_target
GCOV_BIN	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(GCOV_BIN "${GCOV_${TCOMPILER}_BIN}")$/;"	v	function:lcov_capture_initial_tgt
GCOV_BIN	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(GCOV_BIN "${GCOV_${TCOMPILER}_BIN}")$/;"	v	function:lcov_capture_tgt
GCOV_ENV	misc/deps/catch2/CMake/FindGcov.cmake	/^	set(GCOV_ENV "${GCOV_${TCOMPILER}_ENV}")$/;"	v	function:add_gcov_target
GCOV_ENV	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(GCOV_ENV "${GCOV_${TCOMPILER}_ENV}")$/;"	v	function:lcov_capture_initial_tgt
GCOV_ENV	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(GCOV_ENV "${GCOV_${TCOMPILER}_ENV}")$/;"	v	function:lcov_capture_tgt
GENERATE	misc/deps/catch2/include/internal/catch_generators.hpp	/^#define GENERATE(/;"	d
GENERATE_COPY	misc/deps/catch2/include/internal/catch_generators.hpp	/^#define GENERATE_COPY(/;"	d
GENERATE_REF	misc/deps/catch2/include/internal/catch_generators.hpp	/^#define GENERATE_REF(/;"	d
GENHTML_CPPFILT_FLAG	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(GENHTML_CPPFILT_FLAG "--demangle-cpp")$/;"	v
GENHTML_CPPFILT_FLAG	misc/deps/catch2/CMake/FindLcov.cmake	/^set(GENHTML_CPPFILT_FLAG "")$/;"	v
GENINFO_EXTERN_FLAG	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(GENINFO_EXTERN_FLAG "${FLAG}"$/;"	v
GENINFO_FILES	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(GENINFO_FILES "")$/;"	v	function:lcov_capture_initial_tgt
GENINFO_FILES	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(GENINFO_FILES "")$/;"	v	function:lcov_capture_tgt
GIVEN	misc/deps/catch2/include/catch.hpp	/^#define GIVEN(/;"	d
Generator interface	misc/deps/catch2/docs/generators.md	/^## Generator interface$/;"	s
GeneratorBasePtr	misc/deps/catch2/include/internal/catch_interfaces_generatortracker.h	/^        using GeneratorBasePtr = std::unique_ptr<GeneratorUntypedBase>;$/;"	t	namespace:Catch::Generators	typeref:typename:std::unique_ptr<GeneratorUntypedBase>
GeneratorException	misc/deps/catch2/include/internal/catch_generators.hpp	/^    GeneratorException(const char* msg):$/;"	f	class:Catch::GeneratorException
GeneratorException	misc/deps/catch2/include/internal/catch_generators.hpp	/^class GeneratorException : public std::exception {$/;"	c	namespace:Catch
GeneratorTracker	misc/deps/catch2/include/internal/catch_run_context.cpp	/^            GeneratorTracker( TestCaseTracking::NameAndLocation const& nameAndLocation, TrackerC/;"	f	struct:Catch::Generators::GeneratorTracker	file:
GeneratorTracker	misc/deps/catch2/include/internal/catch_run_context.cpp	/^        struct GeneratorTracker : TestCaseTracking::TrackerBase, IGeneratorTracker {$/;"	s	namespace:Catch::Generators	file:
GeneratorUntypedBase	misc/deps/catch2/include/internal/catch_interfaces_generatortracker.h	/^        class GeneratorUntypedBase {$/;"	c	namespace:Catch::Generators
GeneratorWrapper	misc/deps/catch2/include/internal/catch_generators.hpp	/^        GeneratorWrapper(std::unique_ptr<IGenerator<T>> generator):$/;"	f	class:Catch::Generators::GeneratorWrapper
GeneratorWrapper	misc/deps/catch2/include/internal/catch_generators.hpp	/^    class GeneratorWrapper final {$/;"	c	namespace:Catch::Generators
Generators	misc/deps/catch2/include/internal/catch_generators.cpp	/^namespace Generators {$/;"	n	namespace:Catch	file:
Generators	misc/deps/catch2/include/internal/catch_generators.hpp	/^        Generators(Gs... moreGenerators) {$/;"	f	class:Catch::Generators::Generators
Generators	misc/deps/catch2/include/internal/catch_generators.hpp	/^    class Generators : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
Generators	misc/deps/catch2/include/internal/catch_generators.hpp	/^namespace Generators {$/;"	n	namespace:Catch
Generators	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^namespace Generators {$/;"	n	namespace:Catch
Generators	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^namespace Generators {$/;"	n	namespace:Catch
Generators	misc/deps/catch2/include/internal/catch_interfaces_generatortracker.h	/^    namespace Generators {$/;"	n	namespace:Catch
Generators	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    namespace Generators {$/;"	n	namespace:Catch	file:
Generic	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^namespace Generic {$/;"	n	namespace:Catch::Matchers
Generic matchers	misc/deps/catch2/docs/matchers.md	/^### Generic matchers$/;"	S
Getting Catch2	misc/deps/catch2/docs/tutorial.md	/^## Getting Catch2$/;"	s
GitHub Issues	misc/deps/catch2/.github/pull_request_template.md	/^## GitHub Issues$/;"	s
Green	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Green,$/;"	e	enum:Catch::Colour::Code
Green	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    enum class Colours { Red, Green, Blue };$/;"	e	enum:Bikeshed::Colours	file:
Grey	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Grey,$/;"	e	enum:Catch::Colour::Code
GroupInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    GroupInfo::GroupInfo(  std::string const& _name,$/;"	f	class:Catch::GroupInfo
GroupInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct GroupInfo {$/;"	s	namespace:Catch
HEADERS	misc/deps/catch2/projects/CMakeLists.txt	/^set(HEADERS$/;"	v
HEADER_DIR	misc/deps/catch2/CMakeLists.txt	/^set(HEADER_DIR ${CATCH_DIR}\/include)$/;"	v
HEADER_DIR	misc/deps/catch2/examples/CMakeLists.txt	/^set( HEADER_DIR   ${CATCH_DIR}\/single_include )$/;"	v
Headers	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Headers = White$/;"	e	enum:Catch::Colour::Code
Help	misc/deps/catch2/include/external/clara.hpp	/^        Help( bool &showHelpFlag )$/;"	f	struct:Catch::clara::detail::Help
Help	misc/deps/catch2/include/external/clara.hpp	/^    struct Help : Opt {$/;"	s	namespace:Catch::clara::detail
Help	misc/deps/catch2/third_party/clara.hpp	/^        Help( bool &showHelpFlag )$/;"	f	struct:clara::detail::Help
Help	misc/deps/catch2/third_party/clara.hpp	/^    struct Help : Opt {$/;"	s	namespace:clara::detail
HelpColumns	misc/deps/catch2/include/external/clara.hpp	/^    struct HelpColumns {$/;"	s	namespace:Catch::clara::detail
HelpColumns	misc/deps/catch2/third_party/clara.hpp	/^    struct HelpColumns {$/;"	s	namespace:clara::detail
Hidden	misc/deps/catch2/projects/ExtraTests/X11-DisableStringification.cpp	/^struct Hidden {};$/;"	s	file:
HiddenTagFound	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^                set(HiddenTagFound ON)$/;"	v	function:ParseAndAddCatchTests_ParseFile
HiddenTagFound	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^        set(HiddenTagFound OFF)$/;"	v	function:ParseAndAddCatchTests_ParseFile
High	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        High$/;"	e	enum:Catch::Verbosity
How to release	misc/deps/catch2/docs/release-process.md	/^# How to release$/;"	c
How to use it	misc/deps/catch2/README.md	/^## How to use it$/;"	s
IColourImpl	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        struct IColourImpl {$/;"	s	namespace:Catch::__anonabe5bc570110	file:
IConfig	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct IConfig : NonCopyable {$/;"	s	namespace:Catch
IConfigPtr	misc/deps/catch2/include/internal/catch_context.h	/^    using IConfigPtr = std::shared_ptr<IConfig const>;$/;"	t	namespace:Catch	typeref:typename:std::shared_ptr<IConfig const>
IConfigPtr	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    using IConfigPtr = std::shared_ptr<IConfig const>;$/;"	t	namespace:Catch	typeref:typename:std::shared_ptr<IConfig const>
IContext	misc/deps/catch2/include/internal/catch_context.h	/^    struct IContext$/;"	s	namespace:Catch
IDEDidComputeMac32BitWarning	misc/deps/catch2/projects/XCode/OCTest/OCTest.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist	/^	<key>IDEDidComputeMac32BitWarning<\/key>$/;"	k
IExceptionTranslator	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^    struct IExceptionTranslator {$/;"	s	namespace:Catch
IExceptionTranslatorRegistry	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^    struct IExceptionTranslatorRegistry {$/;"	s	namespace:Catch
IGenerator	misc/deps/catch2/include/internal/catch_generators.hpp	/^    struct IGenerator : GeneratorUntypedBase {$/;"	s	namespace:Catch::Generators
IGeneratorTracker	misc/deps/catch2/include/internal/catch_interfaces_generatortracker.h	/^    struct IGeneratorTracker {$/;"	s	namespace:Catch
IMPL_SOURCES	misc/deps/catch2/projects/CMakeLists.txt	/^set(IMPL_SOURCES$/;"	v
IMutableContext	misc/deps/catch2/include/internal/catch_context.h	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
IMutableEnumValuesRegistry	misc/deps/catch2/include/internal/catch_interfaces_enum_values_registry.h	/^    struct IMutableEnumValuesRegistry {$/;"	s	namespace:Catch
IMutableEnumValuesRegistry	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct IMutableEnumValuesRegistry {$/;"	s	namespace:Catch
IMutableRegistryHub	misc/deps/catch2/include/internal/catch_interfaces_registry_hub.h	/^    struct IMutableRegistryHub {$/;"	s	namespace:Catch
INCDIR	Makefile	/^INCDIR      := $(addprefix -I,$(INCDIR))$/;"	m
INCDIR	Makefile	/^INCDIR      ?= inc\/$/;"	m
INCDIR	misc/Makefile	/^INCDIR      ?= $(addprefix -I $(INCDIR))$/;"	m
INCDIR	misc/Makefile	/^INCDIR      ?= inc\/$/;"	m
INCDIR	misc/deps/ezbuild/Makefile	/^INCDIR      := $(addprefix -I,$(INCDIR))$/;"	m
INCDIR	misc/deps/ezbuild/Makefile	/^INCDIR      ?= inc\/$/;"	m
INFO	misc/deps/catch2/include/catch.hpp	/^#define INFO(/;"	d
INTERNAL_CATCH_BENCHMARK	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^#define INTERNAL_CATCH_BENCHMARK(/;"	d
INTERNAL_CATCH_BENCHMARK_ADVANCED	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^#define INTERNAL_CATCH_BENCHMARK_ADVANCED(/;"	d
INTERNAL_CATCH_CAPTURE	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_CAPTURE(/;"	d
INTERNAL_CATCH_CATCH	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_CATCH(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST0(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST0(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST1(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST1(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_X	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_X(/;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_X	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DECLARE_SIG_TEST_X(/;"	d
INTERNAL_CATCH_DEF	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEF(/;"	d
INTERNAL_CATCH_DEF	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEF(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST0(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST0(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST1(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST1(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_X	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_X(/;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_X	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_DEFINE_SIG_TEST_X(/;"	d
INTERNAL_CATCH_DYNAMIC_SECTION	misc/deps/catch2/include/internal/catch_section.h	/^#define INTERNAL_CATCH_DYNAMIC_SECTION(/;"	d
INTERNAL_CATCH_ELSE	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_ELSE(/;"	d
INTERNAL_CATCH_EXPAND1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_EXPAND1(/;"	d
INTERNAL_CATCH_EXPAND1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_EXPAND1(/;"	d
INTERNAL_CATCH_EXPAND2	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_EXPAND2(/;"	d
INTERNAL_CATCH_EXPAND2	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_EXPAND2(/;"	d
INTERNAL_CATCH_EXPAND_VARGS	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_EXPAND_VARGS(/;"	d
INTERNAL_CATCH_EXPAND_VARGS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_EXPAND_VARGS(/;"	d
INTERNAL_CATCH_GET_1_ARG	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^#define INTERNAL_CATCH_GET_1_ARG(/;"	d
INTERNAL_CATCH_GET_2_ARG	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^#define INTERNAL_CATCH_GET_2_ARG(/;"	d
INTERNAL_CATCH_IF	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_IF(/;"	d
INTERNAL_CATCH_INFO	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_INFO(/;"	d
INTERNAL_CATCH_MAKE_NAMESPACE	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_MAKE_NAMESPACE(/;"	d
INTERNAL_CATCH_MAKE_NAMESPACE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_MAKE_NAMESPACE(/;"	d
INTERNAL_CATCH_MAKE_NAMESPACE2	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_MAKE_NAMESPACE2(/;"	d
INTERNAL_CATCH_MAKE_NAMESPACE2	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_MAKE_NAMESPACE2(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LIST(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LIST(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST2	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LIST2(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST2	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LIST2(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES(/;"	d
INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE(/;"	d
INTERNAL_CATCH_MSG	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_MSG(/;"	d
INTERNAL_CATCH_NOINTERNAL_CATCH_DEF	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NOINTERNAL_CATCH_DEF$/;"	d
INTERNAL_CATCH_NOINTERNAL_CATCH_DEF	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NOINTERNAL_CATCH_DEF$/;"	d
INTERNAL_CATCH_NO_THROW	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_NO_THROW(/;"	d
INTERNAL_CATCH_NTTP_0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_0$/;"	d
INTERNAL_CATCH_NTTP_0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_0(/;"	d
INTERNAL_CATCH_NTTP_0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_0$/;"	d
INTERNAL_CATCH_NTTP_0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_0(/;"	d
INTERNAL_CATCH_NTTP_1	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_1(/;"	d
INTERNAL_CATCH_NTTP_1	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_1(/;"	d
INTERNAL_CATCH_NTTP_GEN	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_GEN(/;"	d
INTERNAL_CATCH_NTTP_GEN	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_GEN(/;"	d
INTERNAL_CATCH_NTTP_REGISTER	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER(/;"	d
INTERNAL_CATCH_NTTP_REGISTER	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER(/;"	d
INTERNAL_CATCH_NTTP_REGISTER0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER0(/;"	d
INTERNAL_CATCH_NTTP_REGISTER0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER0(/;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER_METHOD(/;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER_METHOD(/;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD0	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER_METHOD0(/;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD0	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REGISTER_METHOD0(/;"	d
INTERNAL_CATCH_NTTP_REG_GEN	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_REG_GEN(/;"	d
INTERNAL_CATCH_NTTP_REG_GEN	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REG_GEN(/;"	d
INTERNAL_CATCH_NTTP_REG_METHOD_GEN	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_NTTP_REG_METHOD_GEN(/;"	d
INTERNAL_CATCH_NTTP_REG_METHOD_GEN	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_NTTP_REG_METHOD_GEN(/;"	d
INTERNAL_CATCH_REACT	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_REACT(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_REGISTER_TESTCASE(/;"	d
INTERNAL_CATCH_REMOVE_PARENS	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS(/;"	d
INTERNAL_CATCH_REMOVE_PARENS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_10_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_10_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_10_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_10_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_11_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_11_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_11_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_11_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_1_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_1_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_1_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_1_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_2_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_2_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_2_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_2_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_3_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_3_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_3_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_3_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_4_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_4_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_4_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_4_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_5_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_5_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_5_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_5_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_6_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_6_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_6_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_6_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_7_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_7_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_7_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_7_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_8_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_8_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_8_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_8_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_9_ARG	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_9_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_9_ARG	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_9_ARG(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_GEN	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_GEN(/;"	d
INTERNAL_CATCH_REMOVE_PARENS_GEN	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_REMOVE_PARENS_GEN(/;"	d
INTERNAL_CATCH_SECTION	misc/deps/catch2/include/internal/catch_section.h	/^#define INTERNAL_CATCH_SECTION(/;"	d
INTERNAL_CATCH_STRINGIZE	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_STRINGIZE(/;"	d
INTERNAL_CATCH_STRINGIZE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_STRINGIZE(/;"	d
INTERNAL_CATCH_STRINGIZE2	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_STRINGIZE2(/;"	d
INTERNAL_CATCH_STRINGIZE2	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_STRINGIZE2(/;"	d
INTERNAL_CATCH_STRINGIZE3	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_STRINGIZE3(/;"	d
INTERNAL_CATCH_STRINGIZE3	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_STRINGIZE3(/;"	d
INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS(/;"	d
INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	misc/deps/catch2/include/internal/catch_test_registry.h	/^#define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION	misc/deps/catch2/include/internal/catch_test_registry.h	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION	misc/deps/catch2/single_include/catch2/catch.hpp	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION	misc/deps/catch2/include/internal/catch_test_registry.h	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION	misc/deps/catch2/single_include/catch2/catch.hpp	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION	misc/deps/catch2/include/internal/catch_test_registry.h	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION	misc/deps/catch2/single_include/catch2/catch.hpp	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION	misc/deps/catch2/include/internal/catch_test_registry.h	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION	misc/deps/catch2/single_include/catch2/catch.hpp	/^        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEST	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_TEST(/;"	d
INTERNAL_CATCH_TESTCASE	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE(/;"	d
INTERNAL_CATCH_TESTCASE2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE2(/;"	d
INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TESTCASE_NO_REGISTRATION	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TESTCASE_NO_REGISTRATION	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	misc/deps/catch2/include/internal/catch_test_registry.h	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	misc/deps/catch2/single_include/catch2/catch.hpp	/^    #define INTERNAL_CATCH_TEST_CASE_METHOD2(/;"	d
INTERNAL_CATCH_THROWS	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_THROWS(/;"	d
INTERNAL_CATCH_THROWS_AS	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_THROWS_AS(/;"	d
INTERNAL_CATCH_THROWS_MATCHES	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^#define INTERNAL_CATCH_THROWS_MATCHES(/;"	d
INTERNAL_CATCH_THROWS_STR_MATCHES	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_THROWS_STR_MATCHES(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^#define INTERNAL_CATCH_TRANSLATE_EXCEPTION2(/;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION_NO_REG	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^    #define INTERNAL_CATCH_TRANSLATE_EXCEPTION_NO_REG(/;"	d
INTERNAL_CATCH_TRY	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_TRY /;"	d
INTERNAL_CATCH_TRY	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_TRY$/;"	d
INTERNAL_CATCH_TYPE_GEN	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_TYPE_GEN\\/;"	d
INTERNAL_CATCH_TYPE_GEN	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_TYPE_GEN\\/;"	d
INTERNAL_CATCH_UNIQUE_NAME	misc/deps/catch2/include/internal/catch_common.h	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME	misc/deps/catch2/single_include/catch2/catch.hpp	/^#  define INTERNAL_CATCH_UNIQUE_NAME(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	misc/deps/catch2/include/internal/catch_common.h	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	misc/deps/catch2/include/internal/catch_common.h	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_UNIQUE_NAME_LINE2(/;"	d
INTERNAL_CATCH_UNSCOPED_INFO	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define INTERNAL_CATCH_UNSCOPED_INFO(/;"	d
INTERNAL_CATCH_VA_NARGS_IMPL	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define INTERNAL_CATCH_VA_NARGS_IMPL(/;"	d
INTERNAL_CATCH_VA_NARGS_IMPL	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define INTERNAL_CATCH_VA_NARGS_IMPL(/;"	d
INTERNAL_CHECK_THAT	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^#define INTERNAL_CHECK_THAT(/;"	d
INTERNAL_FILES	misc/deps/catch2/projects/CMakeLists.txt	/^set(INTERNAL_FILES ${IMPL_SOURCES} ${INTERNAL_HEADERS})$/;"	v
INTERNAL_HEADERS	misc/deps/catch2/projects/CMakeLists.txt	/^set(INTERNAL_HEADERS$/;"	v
IRegistryHub	misc/deps/catch2/include/internal/catch_interfaces_registry_hub.h	/^    struct IRegistryHub {$/;"	s	namespace:Catch
IReporterFactory	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct IReporterFactory {$/;"	s	namespace:Catch
IReporterFactoryPtr	misc/deps/catch2/include/internal/catch_interfaces_registry_hub.h	/^    using IReporterFactoryPtr = std::shared_ptr<IReporterFactory>;$/;"	t	namespace:Catch	typeref:typename:std::shared_ptr<IReporterFactory>
IReporterFactoryPtr	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    using IReporterFactoryPtr = std::shared_ptr<IReporterFactory>;$/;"	t	namespace:Catch	typeref:typename:std::shared_ptr<IReporterFactory>
IReporterRegistry	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct IReporterRegistry {$/;"	s	namespace:Catch
IResultCapture	misc/deps/catch2/include/internal/catch_interfaces_capture.h	/^    struct IResultCapture {$/;"	s	namespace:Catch
IRunner	misc/deps/catch2/include/internal/catch_interfaces_runner.h	/^    struct IRunner {$/;"	s	namespace:Catch
ISingleton	misc/deps/catch2/include/internal/catch_singletons.hpp	/^    struct ISingleton {$/;"	s	namespace:Catch
IStream	misc/deps/catch2/include/internal/catch_stream.h	/^    struct IStream {$/;"	s	namespace:Catch
IStream	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct IStream {$/;"	s	namespace:Catch
IStreamingReporter	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct IStreamingReporter {$/;"	s	namespace:Catch
IStreamingReporterPtr	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    using IStreamingReporterPtr = std::unique_ptr<IStreamingReporter>;$/;"	t	namespace:Catch	typeref:typename:std::unique_ptr<IStreamingReporter>
ITagAliasRegistry	misc/deps/catch2/include/internal/catch_interfaces_tag_alias_registry.h	/^    struct ITagAliasRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	misc/deps/catch2/include/internal/catch_interfaces_testcase.h	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestCaseRegistry	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
ITestInvoker	misc/deps/catch2/include/internal/catch_interfaces_testcase.h	/^    struct ITestInvoker {$/;"	s	namespace:Catch
ITestInvoker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct ITestInvoker {$/;"	s	namespace:Catch
ITracker	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^    struct ITracker {$/;"	s	namespace:Catch::TestCaseTracking
ITrackerPtr	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^    using ITrackerPtr = std::shared_ptr<ITracker>;$/;"	t	namespace:Catch::TestCaseTracking	typeref:typename:std::shared_ptr<ITracker>
ITransientExpression	misc/deps/catch2/include/internal/catch_decomposer.h	/^        ITransientExpression( bool isBinaryExpression, bool result )$/;"	f	struct:Catch::ITransientExpression
ITransientExpression	misc/deps/catch2/include/internal/catch_decomposer.h	/^    struct ITransientExpression {$/;"	s	namespace:Catch
Identify framework and version according to the libIdentify standard	misc/deps/catch2/docs/command-line.md	/^## Identify framework and version according to the libIdentify standard$/;"	s
Impl	misc/deps/catch2/include/internal/catch_matchers.cpp	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers	file:
Impl	misc/deps/catch2/include/internal/catch_matchers.h	/^    namespace Impl {$/;"	n	namespace:Catch::Matchers
Impl	misc/deps/catch2/include/internal/catch_objc.hpp	/^        namespace Impl {$/;"	n	namespace:Catch::Matchers
Implementation limits	misc/deps/catch2/docs/limitations.md	/^## Implementation limits$/;"	s
Implementing a Listener	misc/deps/catch2/docs/event-listeners.md	/^## Implementing a Listener$/;"	s
Improvements	misc/deps/catch2/docs/release-notes.md	/^### Improvements$/;"	S
Improvements	misc/deps/catch2/docs/release-notes.md	/^##### Improvements$/;"	T
Improvements and minor changes	misc/deps/catch2/docs/release-notes.md	/^##### Improvements and minor changes$/;"	T
In use	misc/deps/catch2/docs/matchers.md	/^## In use$/;"	s
InDeclarationOrder	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        InDeclarationOrder,$/;"	e	enum:Catch::RunTests::InWhatOrder
InLexicographicalOrder	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        InLexicographicalOrder,$/;"	e	enum:Catch::RunTests::InWhatOrder
InRandomOrder	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        InRandomOrder$/;"	e	enum:Catch::RunTests::InWhatOrder
InWhatOrder	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct RunTests { enum InWhatOrder {$/;"	g	struct:Catch::RunTests
Incrementing version number	misc/deps/catch2/docs/release-process.md	/^### Incrementing version number$/;"	S
Info	misc/deps/catch2/include/internal/catch_result_type.h	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	misc/deps/catch2/single_include/catch2/catch.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Inner	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^namespace Inner$/;"	n	namespace:__anon27b7d6900110::ClassTests	file:
Installing Catch2 from git repository	misc/deps/catch2/docs/cmake-integration.md	/^## Installing Catch2 from git repository$/;"	s
Internal changes	misc/deps/catch2/docs/release-notes.md	/^### Internal changes$/;"	S
InternalParseResult	misc/deps/catch2/include/external/clara.hpp	/^    using InternalParseResult = BasicResult<ParseState>;$/;"	t	namespace:Catch::clara::detail	typeref:typename:BasicResult<ParseState>
InternalParseResult	misc/deps/catch2/third_party/clara.hpp	/^    using InternalParseResult = BasicResult<ParseState>;$/;"	t	namespace:clara::detail	typeref:typename:BasicResult<ParseState>
IsHidden	misc/deps/catch2/include/internal/catch_test_case_info.h	/^            IsHidden = 1 << 1,$/;"	e	enum:Catch::TestCaseInfo::SpecialProperties
IsStreamInsertable	misc/deps/catch2/include/internal/catch_tostring.h	/^        class IsStreamInsertable {$/;"	c	namespace:Catch::Detail
IsStreamInsertable	misc/deps/catch2/single_include/catch2/catch.hpp	/^        class IsStreamInsertable {$/;"	c	namespace:Catch::Detail
Iterator	misc/deps/catch2/include/external/clara.hpp	/^        using Iterator = std::vector<std::string>::const_iterator;$/;"	t	class:Catch::clara::detail::TokenStream	typeref:typename:std::vector<std::string>::const_iterator
Iterator	misc/deps/catch2/third_party/clara.hpp	/^        using Iterator = std::vector<std::string>::const_iterator;$/;"	t	class:clara::detail::TokenStream	typeref:typename:std::vector<std::string>::const_iterator
IteratorGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    IteratorGenerator(InputIterator first, InputSentinel last):m_elems(first, last) {$/;"	f	class:Catch::Generators::IteratorGenerator
IteratorGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^class IteratorGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
JUnit Reporter	misc/deps/catch2/docs/ci-and-misc.md	/^### JUnit Reporter$/;"	S
JunitReporter	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    JunitReporter::JunitReporter( ReporterConfig const& _config )$/;"	f	class:Catch::JunitReporter
JunitReporter	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^    class JunitReporter : public CumulativeReporterBase<JunitReporter> {$/;"	c	namespace:Catch
Just test names	misc/deps/catch2/docs/command-line.md	/^## Just test names$/;"	s
Justification	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    enum Justification { Left, Right };$/;"	g	struct:Catch::__anon99a91d3f0110::ColumnInfo	file:
KILLED_ID=	misc/deps/ezbuild/async.sh	/^KILLED_ID=();$/;"	f
Key Features	misc/deps/catch2/docs/why-catch.md	/^## Key Features$/;"	s
Known limitations	misc/deps/catch2/docs/limitations.md	/^# Known limitations$/;"	c
LCOV_CAPTURE_FILES	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(LCOV_CAPTURE_FILES "" CACHE INTERNAL "")$/;"	v
LCOV_CAPTURE_FILES	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(LCOV_CAPTURE_FILES "${LCOV_CAPTURE_FILES}" "${OUTFILE}" CACHE INTERNAL$/;"	v	function:lcov_capture_tgt
LCOV_CAPTURE_INIT_FILES	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(LCOV_CAPTURE_INIT_FILES "" CACHE INTERNAL "")$/;"	v
LCOV_CAPTURE_INIT_FILES	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(LCOV_CAPTURE_INIT_FILES "${LCOV_CAPTURE_INIT_FILES}"$/;"	v	function:lcov_capture_initial_tgt
LCOV_DATA_PATH	misc/deps/catch2/CMake/FindLcov.cmake	/^set(LCOV_DATA_PATH "${CMAKE_BINARY_DIR}\/lcov\/data")$/;"	v
LCOV_DATA_PATH_CAPTURE	misc/deps/catch2/CMake/FindLcov.cmake	/^set(LCOV_DATA_PATH_CAPTURE "${LCOV_DATA_PATH}\/capture")$/;"	v
LCOV_DATA_PATH_INIT	misc/deps/catch2/CMake/FindLcov.cmake	/^set(LCOV_DATA_PATH_INIT "${LCOV_DATA_PATH}\/init")$/;"	v
LCOV_EXTRA_FLAGS	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(LCOV_EXTRA_FLAGS "--initial")$/;"	v	function:lcov_capture_initial_tgt
LCOV_HTML_PATH	misc/deps/catch2/CMake/FindLcov.cmake	/^set(LCOV_HTML_PATH "${CMAKE_BINARY_DIR}\/lcov\/html")$/;"	v
LCOV_REMOVE_PATTERNS	misc/deps/catch2/CMake/FindLcov.cmake	/^set(LCOV_REMOVE_PATTERNS "")$/;"	v
LIBDIR	Makefile	/^LIBDIR      := $(addprefix -L,$(LIBDIR))$/;"	m
LIBDIR	misc/Makefile	/^LIBDIR      ?= $(addprefix -L,$(LIBDIR))$/;"	m
LIBDIR	misc/deps/ezbuild/Makefile	/^LIBDIR      := $(addprefix -L,$(LIBDIR))$/;"	m
LIBNAME	Makefile	/^LIBNAME     := $(addprefix -l,$(LIBNAME))$/;"	m
LIBNAME	Makefile	/^LIBNAME     ?=# foobar$/;"	m
LIBNAME	misc/Makefile	/^LIBNAME     ?= $(addprefix -l $(LIBNAME))$/;"	m
LIBNAME	misc/Makefile	/^LIBNAME     ?=# foobar$/;"	m
LIBNAME	misc/deps/ezbuild/Makefile	/^LIBNAME     := $(addprefix -l,$(LIBNAME))$/;"	m
LIBNAME	misc/deps/ezbuild/Makefile	/^LIBNAME     ?=# foobar$/;"	m
LIBPATH	Makefile	/^LIBPATH     ?=# .\/..\/..\/lib$/;"	m
LIBPATH	misc/Makefile	/^LIBPATH     ?=# .\/..\/..\/lib$/;"	m
LIBPATH	misc/deps/ezbuild/Makefile	/^LIBPATH     ?=# .\/..\/..\/lib$/;"	m
Labels	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^        set(Labels ${TestTarget})$/;"	v	function:ParseAndAddCatchTests_ParseFile
LambdaInvoker	misc/deps/catch2/include/external/clara.hpp	/^    struct LambdaInvoker {$/;"	s	namespace:Catch::clara::detail
LambdaInvoker	misc/deps/catch2/include/external/clara.hpp	/^    struct LambdaInvoker<void> {$/;"	s	namespace:Catch::clara::detail
LambdaInvoker	misc/deps/catch2/third_party/clara.hpp	/^    struct LambdaInvoker {$/;"	s	namespace:clara::detail
LambdaInvoker	misc/deps/catch2/third_party/clara.hpp	/^    struct LambdaInvoker<void> {$/;"	s	namespace:clara::detail
LazyExpression	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    LazyExpression::LazyExpression( LazyExpression const& other ) : m_isNegated( other.m_isNegat/;"	f	class:Catch::LazyExpression
LazyExpression	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    LazyExpression::LazyExpression( bool isNegated )$/;"	f	class:Catch::LazyExpression
LazyExpression	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^    class LazyExpression {$/;"	c	namespace:Catch
LazyStat	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct LazyStat : Option<T> {$/;"	s	namespace:Catch
LeakDetector	misc/deps/catch2/include/internal/catch_leak_detector.cpp	/^    Catch::LeakDetector::LeakDetector() {}$/;"	f	class:Catch::LeakDetector
LeakDetector	misc/deps/catch2/include/internal/catch_leak_detector.cpp	/^    LeakDetector::LeakDetector() {$/;"	f	class:Catch::LeakDetector
LeakDetector	misc/deps/catch2/include/internal/catch_leak_detector.h	/^    struct LeakDetector {$/;"	s	namespace:Catch
Left	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    enum Justification { Left, Right };$/;"	e	enum:Catch::__anon99a91d3f0110::ColumnInfo::Justification	file:
Let Catch take full control of args and config	misc/deps/catch2/docs/own-main.md	/^## Let Catch take full control of args and config$/;"	s
Libraries & Frameworks	misc/deps/catch2/docs/opensource-users.md	/^## Libraries & Frameworks$/;"	s
LightGrey	misc/deps/catch2/include/internal/catch_console_colour.h	/^            LightGrey = Bright | Grey,$/;"	e	enum:Catch::Colour::Code
LineGenerator	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^    LineGenerator() {$/;"	f	class:LineGenerator	file:
LineGenerator	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^class LineGenerator : public Catch::Generators::IGenerator<std::string> {$/;"	c	file:
LineMapper	misc/deps/catch2/scripts/embed.py	/^class LineMapper:$/;"	c
List of examples	misc/deps/catch2/docs/list-of-examples.md	/^# List of examples$/;"	c
ListenerFactory	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^        class ListenerFactory : public IReporterFactory {$/;"	c	class:Catch::ListenerRegistrar
ListenerRegistrar	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^        ListenerRegistrar() {$/;"	f	class:Catch::ListenerRegistrar
ListenerRegistrar	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^    class ListenerRegistrar {$/;"	c	namespace:Catch
Listeners	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        using Listeners = std::vector<IReporterFactoryPtr>;$/;"	t	struct:Catch::IReporterRegistry	typeref:typename:std::vector<IReporterFactoryPtr>
ListeningReporter	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    ListeningReporter::ListeningReporter() {$/;"	f	class:Catch::ListeningReporter
ListeningReporter	misc/deps/catch2/include/reporters/catch_reporter_listening.h	/^    class ListeningReporter : public IStreamingReporter {$/;"	c	namespace:Catch
Listing available tests, tags or reporters	misc/deps/catch2/docs/command-line.md	/^## Listing available tests, tags or reporters$/;"	s
Little	misc/deps/catch2/include/internal/catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon55f5ca2b0110::Endianness::Arch	file:
Load test names to run from a file	misc/deps/catch2/docs/command-line.md	/^## Load test names to run from a file$/;"	s
Logging macros	misc/deps/catch2/docs/logging.md	/^# Logging macros$/;"	c
Logging without local scope	misc/deps/catch2/docs/logging.md	/^## Logging without local scope$/;"	s
LogicError	misc/deps/catch2/include/external/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:Catch::clara::detail::ResultBase::Type
LogicError	misc/deps/catch2/third_party/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:clara::detail::ResultBase::Type
Long answer	misc/deps/catch2/docs/slow-compiles.md	/^## Long answer$/;"	s
Low-level tools	misc/deps/catch2/docs/ci-and-misc.md	/^## Low-level tools$/;"	s
MAP_ANONYMOUS	misc/tests/utils/vmfill.cpp	/^	#define MAP_ANONYMOUS /;"	d	file:
MATCHERS_TEST_HELPERS_INCLUDED	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^#define MATCHERS_TEST_HELPERS_INCLUDED$/;"	d	file:
MESSAGE	misc/deps/catch2/CMake/MiscFunctions.cmake	/^  set(MESSAGE " should be added to the variable ${LIST_VAR}")$/;"	v	function:CheckFileList
MESSAGE	misc/deps/catch2/CMake/MiscFunctions.cmake	/^  set(MESSAGE " should be added to the variable ${LIST_VAR}")$/;"	v	function:CheckFileListRec
MESSAGE	misc/deps/catch2/CMake/MiscFunctions.cmake	/^  set(MESSAGE "${MESSAGE} in ${CMAKE_CURRENT_LIST_FILE}\\n")$/;"	v	function:CheckFileList
MESSAGE	misc/deps/catch2/CMake/MiscFunctions.cmake	/^  set(MESSAGE "${MESSAGE} in ${CMAKE_CURRENT_LIST_FILE}\\n")$/;"	v	function:CheckFileListRec
METHOD_AS_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define METHOD_AS_TEST_CASE(/;"	d
MF	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    typedef void (S::*MF)();$/;"	t	typeref:typename:void (S::*)()	file:
MISC_TEST_HELPERS_INCLUDED	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^#define MISC_TEST_HELPERS_INCLUDED$/;"	d	file:
MKFILE_PATH	Makefile	/^MKFILE_PATH ?= $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MKFILE_PATH	misc/Makefile	/^MKFILE_PATH ?= $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MKFILE_PATH	misc/deps/ezbuild/Makefile	/^MKFILE_PATH ?= $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
Make whitespace visible	misc/deps/catch2/docs/command-line.md	/^## Make whitespace visible$/;"	s
MapFunctionReturnType	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    using MapFunctionReturnType = std::remove_reference_t<std::remove_cv_t<std::invoke_result_t</;"	t	namespace:Catch::Generators	typeref:typename:std::remove_reference_t<std::remove_cv_t<std::invoke_result_t<Func,U>>>
MapFunctionReturnType	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    using MapFunctionReturnType = typename std::remove_reference<typename std::remove_cv<typenam/;"	t	namespace:Catch::Generators
MapGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        MapGenerator(F2&& function, GeneratorWrapper<U>&& generator) :$/;"	f	class:Catch::Generators::MapGenerator
MapGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    class MapGenerator : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
MatchAllOf	misc/deps/catch2/include/internal/catch_matchers.h	/^        struct MatchAllOf : MatcherBase<ArgT> {$/;"	s	namespace:Catch::Matchers::Impl
MatchAnyOf	misc/deps/catch2/include/internal/catch_matchers.h	/^        struct MatchAnyOf : MatcherBase<ArgT> {$/;"	s	namespace:Catch::Matchers::Impl
MatchExpr	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^        MatchExpr( ArgT const& arg, MatcherT const& matcher, StringRef const& matcherString )$/;"	f	class:Catch::MatchExpr
MatchExpr	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^    class MatchExpr : public ITransientExpression {$/;"	c	namespace:Catch
MatchNotOf	misc/deps/catch2/include/internal/catch_matchers.h	/^            MatchNotOf( MatcherBase<ArgT> const& underlyingMatcher ) : m_underlyingMatcher( unde/;"	f	struct:Catch::Matchers::Impl::MatchNotOf
MatchNotOf	misc/deps/catch2/include/internal/catch_matchers.h	/^        struct MatchNotOf : MatcherBase<ArgT> {$/;"	s	namespace:Catch::Matchers::Impl
Matched	misc/deps/catch2/include/external/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	e	enum:Catch::clara::detail::ParseResultType
Matched	misc/deps/catch2/third_party/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	e	enum:clara::detail::ParseResultType
Matcher expressions	misc/deps/catch2/docs/assertions.md	/^## Matcher expressions$/;"	s
MatcherBase	misc/deps/catch2/include/internal/catch_matchers.h	/^        struct MatcherBase : MatcherUntypedBase, MatcherMethod<T> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherMethod	misc/deps/catch2/include/internal/catch_matchers.h	/^        struct MatcherMethod {$/;"	s	namespace:Catch::Matchers::Impl
MatcherMethod	misc/deps/catch2/include/internal/catch_matchers.h	/^        struct MatcherMethod<NSString*> {$/;"	s	namespace:Catch::Matchers::Impl
MatcherUntypedBase	misc/deps/catch2/include/internal/catch_matchers.h	/^        class MatcherUntypedBase {$/;"	c	namespace:Catch::Matchers::Impl
Matchers	misc/deps/catch2/docs/matchers.md	/^# Matchers$/;"	c
Matchers	misc/deps/catch2/include/internal/catch_matchers.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	misc/deps/catch2/include/internal/catch_matchers.h	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	misc/deps/catch2/include/internal/catch_matchers_exception.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	misc/deps/catch2/include/internal/catch_matchers_exception.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	misc/deps/catch2/include/internal/catch_matchers_string.h	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	misc/deps/catch2/include/internal/catch_objc.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
MatchersTests	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^namespace { namespace MatchersTests {$/;"	n	namespace:__anon96897c110110	file:
Matches	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^    StdString::RegexMatcher Matches(std::string const& regex, CaseSensitive::Choice caseSensitiv/;"	f	namespace:Catch::Matchers	typeref:typename:StdString::RegexMatcher
Matches	misc/deps/catch2/include/internal/catch_test_spec.h	/^        using Matches = std::vector<FilterMatch>;$/;"	t	class:Catch::TestSpec	typeref:typename:std::vector<FilterMatch>
MaxExitCode	misc/deps/catch2/include/internal/catch_session.cpp	/^        const int MaxExitCode = 255;$/;"	v	namespace:Catch::__anon2e423b750110	typeref:typename:const int
MayFail	misc/deps/catch2/include/internal/catch_test_case_info.h	/^            MayFail = 1 << 3,$/;"	e	enum:Catch::TestCaseInfo::SpecialProperties
Message	misc/deps/catch2/include/internal/catch_matchers_exception.cpp	/^Exception::ExceptionMessageMatcher Message(std::string const& message) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Exception::ExceptionMessageMatcher
MessageBuilder	misc/deps/catch2/include/internal/catch_message.cpp	/^    Catch::MessageBuilder::MessageBuilder( StringRef const& macroName,$/;"	f	class:Catch::Catch::MessageBuilder
MessageBuilder	misc/deps/catch2/include/internal/catch_message.h	/^    struct MessageBuilder : MessageStream {$/;"	s	namespace:Catch
MessageInfo	misc/deps/catch2/include/internal/catch_message.cpp	/^    MessageInfo::MessageInfo(   StringRef const& _macroName,$/;"	f	class:Catch::MessageInfo
MessageInfo	misc/deps/catch2/include/internal/catch_message.h	/^    struct MessageInfo {$/;"	s	namespace:Catch
MessageStream	misc/deps/catch2/include/internal/catch_message.h	/^    struct MessageStream {$/;"	s	namespace:Catch
Microseconds	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^        Microseconds,$/;"	e	enum:Catch::__anon99a91d3f0110::Duration::Unit	file:
Milliseconds	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^        Milliseconds,$/;"	e	enum:Catch::__anon99a91d3f0110::Duration::Unit	file:
MinGW/CygWin compilation (linking) is extremely slow	misc/deps/catch2/docs/limitations.md	/^### MinGW\/CygWin compilation (linking) is extremely slow$/;"	S
Minutes	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^        Minutes$/;"	e	enum:Catch::__anon99a91d3f0110::Duration::Unit	file:
MiscTests	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^namespace { namespace MiscTests {$/;"	n	namespace:__anone7dbb1860110	file:
Miscellaneous	misc/deps/catch2/docs/release-notes.md	/^### Miscellaneous$/;"	S
Mode	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	g	class:Catch::TestSpecParser
More	misc/deps/catch2/README.md	/^## More$/;"	s
MyException	misc/deps/catch2/examples/207-Rpt-TeamCityReporter.cpp	/^    MyException( char const * text )$/;"	f	struct:MyException	file:
MyException	misc/deps/catch2/examples/207-Rpt-TeamCityReporter.cpp	/^struct MyException: public std::runtime_error$/;"	s	file:
MyExceptionMatcher	misc/deps/catch2/examples/207-Rpt-TeamCityReporter.cpp	/^    MyExceptionMatcher( char const * text )$/;"	f	struct:MyExceptionMatcher	file:
MyExceptionMatcher	misc/deps/catch2/examples/207-Rpt-TeamCityReporter.cpp	/^struct MyExceptionMatcher : Catch::MatcherBase< std::runtime_error >$/;"	s	file:
MyListener	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^struct MyListener : Catch::TestEventListenerBase {$/;"	s	file:
MyNonDefaultConstructibleTypes	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^using MyNonDefaultConstructibleTypes = std::tuple<NonDefaultConstructibleType, float>;$/;"	t	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::tuple<NonDefaultConstructibleType,float>	file:
MyType1	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    MyType1(MyType1 const&) { throw 1; }$/;"	f	struct:MyType1	file:
MyType1	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^struct MyType1 {$/;"	s	file:
MyType2	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    MyType2(MyType2 const&) { throw 2; }$/;"	f	struct:MyType2	file:
MyType2	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^struct MyType2 {$/;"	s	file:
MyTypes	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^using MyTypes = std::tuple<int, char, double>;$/;"	t	namespace:__anon27b7d6900110::ClassTests	typeref:typename:std::tuple<int,char,double>	file:
MyTypes	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^using MyTypes = std::tuple<int, char, float>;$/;"	t	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::tuple<int,char,float>	file:
N	misc/tests/ft_memory/bzero.cpp	/^#define N /;"	d	file:
N	misc/tests/ft_memory/calloc.cpp	/^#define N /;"	d	file:
N	misc/tests/ft_memory/memcpy.cpp	/^#define N /;"	d	file:
N	misc/tests/ft_memory/memset.cpp	/^#define N /;"	d	file:
N	misc/tests/ft_string/strchr.cpp	/^#define N(/;"	d	file:
NAME	Makefile	/^NAME		:= libft.a$/;"	m
NAME	Makefile	/^NAME        ?= a.out$/;"	m
NAME	misc/Makefile	/^NAME		:= libft.a$/;"	m
NAME	misc/Makefile	/^NAME        ?= a.out$/;"	m
NAME	misc/deps/catch2/projects/XCode/OCTest/OCTest/OCTest.1	/^.Sh NAME                 \\" Section Header - required - don't modify$/;"	s
NAME	misc/deps/ezbuild/Makefile	/^NAME		:= libft.so$/;"	m
NAME	misc/deps/ezbuild/Makefile	/^NAME        ?= a.out$/;"	m
NAMES_REPORTERS	misc/deps/catch2/examples/CMakeLists.txt	/^set( NAMES_REPORTERS TeamCity )$/;"	v
NOMINMAX	misc/deps/catch2/include/internal/catch_windows_h_proxy.h	/^#  define NOMINMAX$/;"	d
NOT_SUBPROJECT	misc/deps/catch2/CMakeLists.txt	/^  set(NOT_SUBPROJECT ON)$/;"	v
NSException	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    @throw [[NSException alloc] initWithName: NSGenericException$/;"	C	implementation:TestFixture
NSString	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    CHECK_THAT( (NSString*)nil, Equals( @"This should fail, but not crash" ) );$/;"	C	implementation:TestFixture
NSString	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    CHECK_THAT( (NSString*)nil, StartsWith( @"anything" ) );$/;"	C	implementation:TestFixture
NSStringMatchers	misc/deps/catch2/include/internal/catch_objc.hpp	/^        namespace NSStringMatchers {$/;"	n	namespace:Catch::Matchers::Impl
Naked exceptions and exceptions-related function	misc/deps/catch2/docs/contributing.md	/^### Naked exceptions and exceptions-related function$/;"	S
Name	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^            set(Name "Scenario: ${Name}")$/;"	v	function:ParseAndAddCatchTests_ParseFile
Name	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
NameAndLocation	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    NameAndLocation::NameAndLocation( std::string const& _name, SourceLineInfo const& _location /;"	f	class:Catch::TestCaseTracking::NameAndLocation
NameAndLocation	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^    struct NameAndLocation {$/;"	s	namespace:Catch::TestCaseTracking
NameAndTags	misc/deps/catch2/include/internal/catch_test_registry.cpp	/^    NameAndTags::NameAndTags( StringRef const& name_ , StringRef const& tags_ ) noexcept : name(/;"	f	class:Catch::NameAndTags
NameAndTags	misc/deps/catch2/include/internal/catch_test_registry.h	/^struct NameAndTags {$/;"	s	namespace:Catch
NameAndTags	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct NameAndTags {$/;"	s	namespace:Catch
NamePattern	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    TestSpec::NamePattern::NamePattern( std::string const& name, std::string const& filterString/;"	f	class:Catch::TestSpec::NamePattern
NamePattern	misc/deps/catch2/include/internal/catch_test_spec.h	/^        class NamePattern : public Pattern {$/;"	c	class:Catch::TestSpec
Naming a test run	misc/deps/catch2/docs/command-line.md	/^## Naming a test run$/;"	s
Nanoseconds	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^        Nanoseconds,$/;"	e	enum:Catch::__anon99a91d3f0110::Duration::Unit	file:
Natural Expressions	misc/deps/catch2/docs/assertions.md	/^## Natural Expressions$/;"	s
Necessary steps	misc/deps/catch2/docs/release-process.md	/^## Necessary steps$/;"	s
NeedsAnotherRun	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            NeedsAnotherRun,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
Never	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        Never$/;"	e	enum:Catch::ShowDurations::OrNot
Never	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        Never,$/;"	e	enum:Catch::WaitForKeypress::When
New features	misc/deps/catch2/docs/release-notes.md	/^### New features$/;"	S
New features/ minor changes	misc/deps/catch2/docs/release-notes.md	/^##### New features\/ minor changes$/;"	T
Next steps	misc/deps/catch2/docs/tutorial.md	/^## Next steps$/;"	s
No	misc/deps/catch2/include/internal/catch_common.h	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
No	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        No$/;"	e	enum:Catch::UseColour::YesOrNo
No	misc/deps/catch2/single_include/catch2/catch.hpp	/^        No$/;"	e	enum:Catch::CaseSensitive::Choice
NoAssertions	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        NoAssertions = 0x01,$/;"	e	enum:Catch::WarnAbout::What
NoColourImpl	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        struct NoColourImpl : IColourImpl {$/;"	s	namespace:Catch::__anonabe5bc570110	file:
NoMatch	misc/deps/catch2/include/external/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	e	enum:Catch::clara::detail::ParseResultType
NoMatch	misc/deps/catch2/third_party/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	e	enum:clara::detail::ParseResultType
NoTests	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        NoTests = 0x02$/;"	e	enum:Catch::WarnAbout::What
NoWildcard	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^            NoWildcard = 0,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
Node	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            explicit Node( T const& _value ) : value( _value ) {}$/;"	f	struct:Catch::CumulativeReporterBase::Node
Node	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        struct Node {$/;"	s	struct:Catch::CumulativeReporterBase
NonCopyable	misc/deps/catch2/include/external/clara.hpp	/^    struct NonCopyable {$/;"	s	namespace:Catch::clara::detail
NonCopyable	misc/deps/catch2/include/internal/catch_common.h	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	misc/deps/catch2/single_include/catch2/catch.hpp	/^    class NonCopyable {$/;"	c	namespace:Catch
NonCopyable	misc/deps/catch2/third_party/clara.hpp	/^    struct NonCopyable {$/;"	s	namespace:clara::detail
NonCopyableAndNonMovableType	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^struct NonCopyableAndNonMovableType {$/;"	s	namespace:__anone7dbb1860110::MiscTests	file:
NonCopyableAndNonMovableTypes	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^using NonCopyableAndNonMovableTypes = std::tuple<NonCopyableAndNonMovableType, float>;$/;"	t	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::tuple<NonCopyableAndNonMovableType,float>	file:
NonDefaultConstructibleType	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^struct NonDefaultConstructibleType {$/;"	s	namespace:__anone7dbb1860110::MiscTests	file:
NonPortable	misc/deps/catch2/include/internal/catch_test_case_info.h	/^            NonPortable = 1 << 5,$/;"	e	enum:Catch::TestCaseInfo::SpecialProperties
None	misc/deps/catch2/include/internal/catch_console_colour.h	/^            None = 0,$/;"	e	enum:Catch::Colour::Code
None	misc/deps/catch2/include/internal/catch_test_case_info.h	/^            None = 0,$/;"	e	enum:Catch::TestCaseInfo::SpecialProperties
None	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
Normal	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        Normal,$/;"	e	enum:Catch::Verbosity
Normal	misc/deps/catch2/include/internal/catch_result_type.h	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	misc/deps/catch2/single_include/catch2/catch.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
NotStarted	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            NotStarted,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
NotStarted	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^            NotStarted,$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
Nothing	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        Nothing = 0x00,$/;"	e	enum:Catch::WarnAbout::What
Nttp_Fixture	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^struct Nttp_Fixture{$/;"	s	namespace:__anon27b7d6900110::ClassTests	file:
OC_MAKE_UNIQUE_NAME	misc/deps/catch2/include/internal/catch_objc.hpp	/^#define OC_MAKE_UNIQUE_NAME(/;"	d
OC_TEST_CASE	misc/deps/catch2/include/internal/catch_objc.hpp	/^#define OC_TEST_CASE(/;"	d
OC_TEST_CASE	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^OC_TEST_CASE( "nil NSString should not crash the test", "[!shouldfail]" )$/;"	C	implementation:TestFixture
OC_TEST_CASE2	misc/deps/catch2/include/internal/catch_objc.hpp	/^#define OC_TEST_CASE2(/;"	d
OUTFILE	misc/deps/catch2/CMake/FindLcov.cmake	/^		set(OUTFILE "${TDIR}\/${FILE}.info")$/;"	v	function:lcov_capture_tgt
OUTFILE	misc/deps/catch2/CMake/FindLcov.cmake	/^		set(OUTFILE "${TDIR}\/${FILE}.info.init")$/;"	v	function:lcov_capture_initial_tgt
OUTFILE	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(OUTFILE "${LCOV_DATA_PATH_CAPTURE}\/${TNAME}.info")$/;"	v	function:lcov_capture_tgt
OUTFILE	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(OUTFILE "${LCOV_DATA_PATH_CAPTURE}\/all_targets.info")$/;"	v	function:lcov_capture
OUTFILE	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(OUTFILE "${LCOV_DATA_PATH_INIT}\/${TNAME}.info")$/;"	v	function:lcov_capture_initial_tgt
OUTFILE	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(OUTFILE "${LCOV_DATA_PATH_INIT}\/all_targets.info")$/;"	v	function:lcov_capture_initial
Obj	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    Obj():prop(&p){}$/;"	f	struct:Obj	file:
Obj	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^struct Obj$/;"	s	file:
Object	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    struct Object$/;"	s	namespace:ObjectWithConversions	file:
ObjectStorage	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            ObjectStorage() : data() {}$/;"	f	struct:Catch::Detail::ObjectStorage
ObjectStorage	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            ObjectStorage(ObjectStorage&& other)$/;"	f	struct:Catch::Detail::ObjectStorage
ObjectStorage	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            ObjectStorage(const ObjectStorage& other)$/;"	f	struct:Catch::Detail::ObjectStorage
ObjectStorage	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^        struct ObjectStorage$/;"	s	namespace:Catch::Detail
ObjectWithConversions	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace ObjectWithConversions$/;"	n	file:
OcMethod	misc/deps/catch2/include/internal/catch_objc.hpp	/^        OcMethod( Class cls, SEL sel ) : m_cls( cls ), m_sel( sel ) {}$/;"	f	class:Catch::OcMethod
OcMethod	misc/deps/catch2/include/internal/catch_objc.hpp	/^    class OcMethod : public ITestInvoker {$/;"	c	namespace:Catch
OfType	misc/deps/catch2/include/internal/catch_result_type.h	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
Ok	misc/deps/catch2/include/external/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:Catch::clara::detail::ResultBase::Type
Ok	misc/deps/catch2/include/internal/catch_result_type.h	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	misc/deps/catch2/single_include/catch2/catch.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	misc/deps/catch2/third_party/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:clara::detail::ResultBase::Type
Older versions	misc/deps/catch2/docs/release-notes.md	/^## Older versions$/;"	s
Opaque	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^struct Opaque$/;"	s	file:
Open Source projects using Catch	misc/deps/catch2/docs/opensource-users.md	/^# Open Source projects using Catch$/;"	c
OperatorException	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^struct OperatorException : std::exception {$/;"	s	namespace:__anon7572b8720110	file:
Opt	misc/deps/catch2/include/external/clara.hpp	/^        Opt( LambdaT const &ref, std::string const &hint ) : ParserRefImpl( ref, hint ) {}$/;"	f	class:Catch::clara::detail::Opt
Opt	misc/deps/catch2/include/external/clara.hpp	/^        Opt( T &ref, std::string const &hint ) : ParserRefImpl( ref, hint ) {}$/;"	f	class:Catch::clara::detail::Opt
Opt	misc/deps/catch2/include/external/clara.hpp	/^        explicit Opt( LambdaT const &ref ) : ParserRefImpl( std::make_shared<BoundFlagLambda<Lam/;"	f	class:Catch::clara::detail::Opt
Opt	misc/deps/catch2/include/external/clara.hpp	/^        explicit Opt( bool &ref ) : ParserRefImpl( std::make_shared<BoundFlagRef>( ref ) ) {}$/;"	f	class:Catch::clara::detail::Opt
Opt	misc/deps/catch2/include/external/clara.hpp	/^    class Opt : public ParserRefImpl<Opt> {$/;"	c	namespace:Catch::clara::detail
Opt	misc/deps/catch2/third_party/clara.hpp	/^        Opt( LambdaT const &ref, std::string const &hint ) : ParserRefImpl( ref, hint ) {}$/;"	f	class:clara::detail::Opt
Opt	misc/deps/catch2/third_party/clara.hpp	/^        Opt( T &ref, std::string const &hint ) : ParserRefImpl( ref, hint ) {}$/;"	f	class:clara::detail::Opt
Opt	misc/deps/catch2/third_party/clara.hpp	/^        explicit Opt( LambdaT const &ref ) : ParserRefImpl( std::make_shared<BoundFlagLambda<Lam/;"	f	class:clara::detail::Opt
Opt	misc/deps/catch2/third_party/clara.hpp	/^        explicit Opt( bool &ref ) : ParserRefImpl( std::make_shared<BoundFlagRef>( ref ) ) {}$/;"	f	class:clara::detail::Opt
Opt	misc/deps/catch2/third_party/clara.hpp	/^    class Opt : public ParserRefImpl<Opt> {$/;"	c	namespace:clara::detail
Option	misc/deps/catch2/include/external/clara.hpp	/^        Option, Argument$/;"	e	enum:Catch::clara::detail::TokenType
Option	misc/deps/catch2/include/internal/catch_option.hpp	/^        Option( Option const& _other )$/;"	f	class:Catch::Option
Option	misc/deps/catch2/include/internal/catch_option.hpp	/^        Option( T const& _value )$/;"	f	class:Catch::Option
Option	misc/deps/catch2/include/internal/catch_option.hpp	/^        Option() : nullableValue( nullptr ) {}$/;"	f	class:Catch::Option
Option	misc/deps/catch2/include/internal/catch_option.hpp	/^    class Option {$/;"	c	namespace:Catch
Option	misc/deps/catch2/third_party/clara.hpp	/^        Option, Argument$/;"	e	enum:clara::detail::TokenType
Optional	misc/deps/catch2/include/external/clara.hpp	/^    enum class Optionality { Optional, Required };$/;"	e	enum:Catch::clara::detail::Optionality
Optional	misc/deps/catch2/third_party/clara.hpp	/^    enum class Optionality { Optional, Required };$/;"	e	enum:clara::detail::Optionality
Optionality	misc/deps/catch2/include/external/clara.hpp	/^    enum class Optionality { Optional, Required };$/;"	g	namespace:Catch::clara::detail
Optionality	misc/deps/catch2/third_party/clara.hpp	/^    enum class Optionality { Optional, Required };$/;"	g	namespace:clara::detail
OrNot	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct ShowDurations { enum OrNot {$/;"	g	struct:Catch::ShowDurations
OriginalExpression	misc/deps/catch2/include/internal/catch_console_colour.h	/^            OriginalExpression = Cyan,$/;"	e	enum:Catch::Colour::Code
Other	misc/deps/catch2/docs/release-notes.md	/^##### Other$/;"	T
Other changes	misc/deps/catch2/docs/release-notes.md	/^### Other changes$/;"	S
Other core features	misc/deps/catch2/docs/why-catch.md	/^## Other core features$/;"	s
Other macros	misc/deps/catch2/docs/other-macros.md	/^# Other macros$/;"	c
Other notes:	misc/deps/catch2/docs/release-notes.md	/^##### Other notes:$/;"	T
Other possible solutions	misc/deps/catch2/docs/slow-compiles.md	/^## Other possible solutions$/;"	s
Other reporters	misc/deps/catch2/docs/ci-and-misc.md	/^## Other reporters$/;"	s
Other toggles	misc/deps/catch2/docs/configuration.md	/^## Other toggles$/;"	s
Other:	misc/deps/catch2/docs/release-notes.md	/^##### Other:$/;"	T
Others	misc/deps/catch2/docs/release-notes.md	/^### Others$/;"	S
Our Pledge	misc/deps/catch2/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s
Our Responsibilities	misc/deps/catch2/CODE_OF_CONDUCT.md	/^## Our Responsibilities$/;"	s
Our Standards	misc/deps/catch2/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s
OutlierClassification	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^        struct OutlierClassification {$/;"	s	namespace:Catch::Benchmark
Output format of `--list-*` command line parameters	misc/deps/catch2/docs/deprecations.md	/^### Output format of `--list-*` command line parameters$/;"	S
OutputDebugWriter	misc/deps/catch2/include/internal/catch_stream.cpp	/^        struct OutputDebugWriter {$/;"	s	namespace:Catch::Detail::__anond61e3add0110	file:
OutputRedirect	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    OutputRedirect::OutputRedirect(std::string& stdout_dest, std::string& stderr_dest) :$/;"	f	class:Catch::OutputRedirect
OutputRedirect	misc/deps/catch2/include/internal/catch_output_redirect.h	/^    class OutputRedirect {$/;"	c	namespace:Catch
Override output colouring	misc/deps/catch2/docs/command-line.md	/^## Override output colouring$/;"	s
PAGE_SIZE	misc/tests/utils/vmfill.cpp	/^	#define PAGE_SIZE /;"	d	file:
PARSE_CATCH_TESTS_ADD_FIXTURE_IN_TEST_NAME	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^option(PARSE_CATCH_TESTS_ADD_FIXTURE_IN_TEST_NAME "Add fixture class name to the test name" ON)$/;"	D
PARSE_CATCH_TESTS_ADD_TARGET_IN_TEST_NAME	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^option(PARSE_CATCH_TESTS_ADD_TARGET_IN_TEST_NAME "Add target name to the test name" ON)$/;"	D
PARSE_CATCH_TESTS_ADD_TO_CONFIGURE_DEPENDS	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^option(PARSE_CATCH_TESTS_ADD_TO_CONFIGURE_DEPENDS "Add test file to CMAKE_CONFIGURE_DEPENDS prop/;"	D
PARSE_CATCH_TESTS_NO_HIDDEN_TESTS	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^option(PARSE_CATCH_TESTS_NO_HIDDEN_TESTS "Exclude tests with [!hide], [.] or [.foo] tags" OFF)$/;"	D
PARSE_CATCH_TESTS_VERBOSE	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^option(PARSE_CATCH_TESTS_VERBOSE "Print Catch to CTest parser debug messages" OFF)$/;"	D
PKGCONFIG_INSTALL_DIR	misc/deps/catch2/CMakeLists.txt	/^    set(PKGCONFIG_INSTALL_DIR$/;"	v
ParseAndAddCatchTests	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^function(ParseAndAddCatchTests TestTarget)$/;"	f
ParseAndAddCatchTests_ParseFile	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^function(ParseAndAddCatchTests_ParseFile SourceFile TestTarget)$/;"	f
ParseAndAddCatchTests_PrintDebugMessage	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^function(ParseAndAddCatchTests_PrintDebugMessage)$/;"	f
ParseAndAddCatchTests_RemoveComments	misc/deps/catch2/contrib/ParseAndAddCatchTests.cmake	/^function(ParseAndAddCatchTests_RemoveComments CppCode)$/;"	f
ParseResultType	misc/deps/catch2/include/external/clara.hpp	/^    enum class ParseResultType {$/;"	g	namespace:Catch::clara::detail
ParseResultType	misc/deps/catch2/third_party/clara.hpp	/^    enum class ParseResultType {$/;"	g	namespace:clara::detail
ParseState	misc/deps/catch2/include/external/clara.hpp	/^        ParseState( ParseResultType type, TokenStream const &remainingTokens )$/;"	f	class:Catch::clara::detail::ParseState
ParseState	misc/deps/catch2/include/external/clara.hpp	/^    class ParseState {$/;"	c	namespace:Catch::clara::detail
ParseState	misc/deps/catch2/third_party/clara.hpp	/^        ParseState( ParseResultType type, TokenStream const &remainingTokens )$/;"	f	class:clara::detail::ParseState
ParseState	misc/deps/catch2/third_party/clara.hpp	/^    class ParseState {$/;"	c	namespace:clara::detail
Parser	misc/deps/catch2/include/external/clara.hpp	/^    struct Parser : ParserBase {$/;"	s	namespace:Catch::clara::detail
Parser	misc/deps/catch2/third_party/clara.hpp	/^    struct Parser : ParserBase {$/;"	s	namespace:clara::detail
ParserBase	misc/deps/catch2/include/external/clara.hpp	/^    class ParserBase {$/;"	c	namespace:Catch::clara::detail
ParserBase	misc/deps/catch2/third_party/clara.hpp	/^    class ParserBase {$/;"	c	namespace:clara::detail
ParserInfo	misc/deps/catch2/include/external/clara.hpp	/^            struct ParserInfo {$/;"	s	function:Catch::clara::detail::Parser::parse
ParserInfo	misc/deps/catch2/third_party/clara.hpp	/^            struct ParserInfo {$/;"	s	function:clara::detail::Parser::parse
ParserRefImpl	misc/deps/catch2/include/external/clara.hpp	/^        ParserRefImpl( LambdaT const &ref, std::string const &hint )$/;"	f	class:Catch::clara::detail::ParserRefImpl
ParserRefImpl	misc/deps/catch2/include/external/clara.hpp	/^        ParserRefImpl( T &ref, std::string const &hint )$/;"	f	class:Catch::clara::detail::ParserRefImpl
ParserRefImpl	misc/deps/catch2/include/external/clara.hpp	/^        explicit ParserRefImpl( std::shared_ptr<BoundRef> const &ref ) : m_ref( ref ) {}$/;"	f	class:Catch::clara::detail::ParserRefImpl
ParserRefImpl	misc/deps/catch2/include/external/clara.hpp	/^    class ParserRefImpl : public ComposableParserImpl<DerivedT> {$/;"	c	namespace:Catch::clara::detail
ParserRefImpl	misc/deps/catch2/third_party/clara.hpp	/^        ParserRefImpl( LambdaT const &ref, std::string const &hint )$/;"	f	class:clara::detail::ParserRefImpl
ParserRefImpl	misc/deps/catch2/third_party/clara.hpp	/^        ParserRefImpl( T &ref, std::string const &hint )$/;"	f	class:clara::detail::ParserRefImpl
ParserRefImpl	misc/deps/catch2/third_party/clara.hpp	/^        explicit ParserRefImpl( std::shared_ptr<BoundRef> const &ref ) : m_ref( ref ) {}$/;"	f	class:clara::detail::ParserRefImpl
ParserRefImpl	misc/deps/catch2/third_party/clara.hpp	/^    class ParserRefImpl : public ComposableParserImpl<DerivedT> {$/;"	c	namespace:clara::detail
ParserResult	misc/deps/catch2/include/external/clara.hpp	/^    using ParserResult = BasicResult<ParseResultType>;$/;"	t	namespace:Catch::clara::detail	typeref:typename:BasicResult<ParseResultType>
ParserResult	misc/deps/catch2/third_party/clara.hpp	/^    using ParserResult = BasicResult<ParseResultType>;$/;"	t	namespace:clara::detail	typeref:typename:BasicResult<ParseResultType>
Pattern	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    TestSpec::Pattern::Pattern( std::string const& name )$/;"	f	class:Catch::TestSpec::Pattern
Pattern	misc/deps/catch2/include/internal/catch_test_spec.h	/^        class Pattern {$/;"	c	class:Catch::TestSpec
PatternPtr	misc/deps/catch2/include/internal/catch_test_spec.h	/^        using PatternPtr = std::shared_ptr<Pattern>;$/;"	t	class:Catch::TestSpec	typeref:typename:std::shared_ptr<Pattern>
Planned	misc/deps/catch2/docs/list-of-examples.md	/^## Planned$/;"	s
Planned changes	misc/deps/catch2/docs/deprecations.md	/^## Planned changes$/;"	s
PosixColourImpl	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    class PosixColourImpl : public IColourImpl {$/;"	c	namespace:Catch::__anonabe5bc570310	file:
Practical example	misc/deps/catch2/docs/slow-compiles.md	/^## Practical example$/;"	s
Precompiled headers (PCHs)	misc/deps/catch2/docs/ci-and-misc.md	/^### Precompiled headers (PCHs)$/;"	S
Predicate	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^    Generic::PredicateMatcher<T> Predicate(std::function<bool(T const&)> const& predicate, std::/;"	f	namespace:Catch::Matchers	typeref:typename:Generic::PredicateMatcher<T>
PredicateMatcher	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^    PredicateMatcher(std::function<bool(T const&)> const& elem, std::string const& descr)$/;"	f	class:Catch::Matchers::Generic::PredicateMatcher
PredicateMatcher	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^class PredicateMatcher : public MatcherBase<T> {$/;"	c	namespace:Catch::Matchers::Generic
PrefixedMacros	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^add_executable(PrefixedMacros ${TESTS_DIR}\/X01-PrefixedMacros.cpp)$/;"	t
Prefixing Catch macros	misc/deps/catch2/docs/configuration.md	/^## Prefixing Catch macros$/;"	s
Process isolation in a test	misc/deps/catch2/docs/limitations.md	/^### Process isolation in a test$/;"	S
Provided generators	misc/deps/catch2/docs/generators.md	/^## Provided generators$/;"	s
Quickly capture value of variables or expressions	misc/deps/catch2/docs/logging.md	/^## Quickly capture value of variables or expressions$/;"	s
Quiet	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        Quiet = 0,$/;"	e	enum:Catch::Verbosity
QuotedName	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
REGISTER_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define REGISTER_TEST_CASE(/;"	d
REPORTER_FILES	misc/deps/catch2/projects/CMakeLists.txt	/^set(REPORTER_FILES ${REPORTER_HEADERS} ${REPORTER_SOURCES})$/;"	v
REPORTER_HEADERS	misc/deps/catch2/projects/CMakeLists.txt	/^set(REPORTER_HEADERS$/;"	v
REPORTER_HEADER_DIR	misc/deps/catch2/examples/CMakeLists.txt	/^set( REPORTER_HEADER_DIR ${CATCH_DIR}\/include\/reporters )$/;"	v
REPORTER_SOURCES	misc/deps/catch2/projects/CMakeLists.txt	/^set(REPORTER_SOURCES$/;"	v
REQUIRE	misc/deps/catch2/include/catch.hpp	/^#define REQUIRE(/;"	d
REQUIRE	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE( obj.int_val == 0 );$/;"	C	implementation:TestFixture
REQUIRE_FALSE	misc/deps/catch2/include/catch.hpp	/^#define REQUIRE_FALSE(/;"	d
REQUIRE_NOTHROW	misc/deps/catch2/include/catch.hpp	/^#define REQUIRE_NOTHROW(/;"	d
REQUIRE_THAT	misc/deps/catch2/include/catch.hpp	/^#define REQUIRE_THAT(/;"	d
REQUIRE_THAT	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE_THAT( @"This is a string", Contains( @"is a" ) );$/;"	C	implementation:TestFixture
REQUIRE_THAT	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE_THAT( @"This is a string", EndsWith( @"string" ) );$/;"	C	implementation:TestFixture
REQUIRE_THAT	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE_THAT( @"This is a string", StartsWith( @"This" ) );$/;"	C	implementation:TestFixture
REQUIRE_THROWS	misc/deps/catch2/include/catch.hpp	/^#define REQUIRE_THROWS(/;"	d
REQUIRE_THROWS_AS	misc/deps/catch2/include/catch.hpp	/^#define REQUIRE_THROWS_AS(/;"	d
REQUIRE_THROWS_MATCHES	misc/deps/catch2/include/catch.hpp	/^#define REQUIRE_THROWS_MATCHES(/;"	d
REQUIRE_THROWS_WITH	misc/deps/catch2/include/catch.hpp	/^#define REQUIRE_THROWS_WITH(/;"	d
RM	Makefile	/^RM          ?= \/bin\/rm -f$/;"	m
RM	misc/Makefile	/^RM          ?= \/bin\/rm -f$/;"	m
RM	misc/deps/ezbuild/Makefile	/^RM          ?= \/bin\/rm -f$/;"	m
RandomFloatingGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    RandomFloatingGenerator(Float a, Float b):$/;"	f	class:Catch::Generators::RandomFloatingGenerator
RandomFloatingGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^class RandomFloatingGenerator final : public IGenerator<Float> {$/;"	c	namespace:Catch::Generators
RandomIntGenerator	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^    RandomIntGenerator(int low, int high):$/;"	f	class:RandomIntGenerator	file:
RandomIntGenerator	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^class RandomIntGenerator : public Catch::Generators::IGenerator<int> {$/;"	c	file:
RandomIntegerGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    RandomIntegerGenerator(Integer a, Integer b):$/;"	f	class:Catch::Generators::RandomIntegerGenerator
RandomIntegerGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^class RandomIntegerGenerator final : public IGenerator<Integer> {$/;"	c	namespace:Catch::Generators
RangeGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    RangeGenerator(T const& start, T const& end):$/;"	f	class:Catch::Generators::RangeGenerator
RangeGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    RangeGenerator(T const& start, T const& end, T const& step):$/;"	f	class:Catch::Generators::RangeGenerator
RangeGenerator	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^class RangeGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
ReconstructedExpression	misc/deps/catch2/include/internal/catch_console_colour.h	/^            ReconstructedExpression = BrightYellow,$/;"	e	enum:Catch::Colour::Code
Red	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Red,$/;"	e	enum:Catch::Colour::Code
Red	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    enum class Colours { Red, Green, Blue };$/;"	e	enum:Bikeshed::Colours	file:
RedirectedStdErr	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    RedirectedStdErr::RedirectedStdErr()$/;"	f	class:Catch::RedirectedStdErr
RedirectedStdErr	misc/deps/catch2/include/internal/catch_output_redirect.h	/^    class RedirectedStdErr {$/;"	c	namespace:Catch
RedirectedStdOut	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    RedirectedStdOut::RedirectedStdOut() : m_cout( Catch::cout(), m_rss.get() ) {}$/;"	f	class:Catch::RedirectedStdOut
RedirectedStdOut	misc/deps/catch2/include/internal/catch_output_redirect.h	/^    class RedirectedStdOut {$/;"	c	namespace:Catch
RedirectedStream	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    RedirectedStream::RedirectedStream( std::ostream& originalStream, std::ostream& redirectionS/;"	f	class:Catch::RedirectedStream
RedirectedStream	misc/deps/catch2/include/internal/catch_output_redirect.h	/^    class RedirectedStream {$/;"	c	namespace:Catch
RedirectedStreams	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    RedirectedStreams::RedirectedStreams(std::string& redirectedCout, std::string& redirectedCer/;"	f	class:Catch::RedirectedStreams
RedirectedStreams	misc/deps/catch2/include/internal/catch_output_redirect.h	/^    class RedirectedStreams {$/;"	c	namespace:Catch
Reference	misc/deps/catch2/docs/Readme.md	/^# Reference$/;"	c
RegexMatcher	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        RegexMatcher::RegexMatcher(std::string regex, CaseSensitive::Choice caseSensitivity): m_/;"	f	class:Catch::Matchers::StdString::RegexMatcher
RegexMatcher	misc/deps/catch2/include/internal/catch_matchers_string.h	/^        struct RegexMatcher : MatcherBase<std::string> {$/;"	s	namespace:Catch::Matchers::StdString
RegistrarForTagAliases	misc/deps/catch2/include/internal/catch_tag_alias_autoregistrar.cpp	/^    RegistrarForTagAliases::RegistrarForTagAliases(char const* alias, char const* tag, SourceLin/;"	f	class:Catch::RegistrarForTagAliases
RegistrarForTagAliases	misc/deps/catch2/include/internal/catch_tag_alias_autoregistrar.h	/^    struct RegistrarForTagAliases {$/;"	s	namespace:Catch
RegistrarForTagAliases	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct RegistrarForTagAliases {$/;"	s	namespace:Catch
RegistryHub	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^        class RegistryHub : public IRegistryHub, public IMutableRegistryHub,$/;"	c	namespace:Catch::__anondaa5e4680110	file:
RegistryHubSingleton	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^    using RegistryHubSingleton = Singleton<RegistryHub, IRegistryHub, IMutableRegistryHub>;$/;"	t	namespace:Catch	typeref:typename:Singleton<RegistryHub,IRegistryHub,IMutableRegistryHub>	file:
Release notes	misc/deps/catch2/docs/release-notes.md	/^# Release notes$/;"	c
Release notes	misc/deps/catch2/docs/release-process.md	/^### Release notes$/;"	S
Release on GitHub	misc/deps/catch2/docs/release-process.md	/^### Release on GitHub$/;"	S
RepeatGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        RepeatGenerator(size_t repeats, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::RepeatGenerator
RepeatGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    class RepeatGenerator : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
Reporter / Listener interfaces	misc/deps/catch2/docs/configuration.md	/^## Reporter \/ Listener interfaces$/;"	s
Reporter verbosities	misc/deps/catch2/docs/deprecations.md	/^### Reporter verbosities$/;"	S
ReporterConfig	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    ReporterConfig::ReporterConfig( IConfigPtr const& _fullConfig )$/;"	f	class:Catch::ReporterConfig
ReporterConfig	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    ReporterConfig::ReporterConfig( IConfigPtr const& _fullConfig, std::ostream& _stream )$/;"	f	class:Catch::ReporterConfig
ReporterConfig	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct ReporterConfig {$/;"	s	namespace:Catch
ReporterFactory	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^        class ReporterFactory : public IReporterFactory {$/;"	c	class:Catch::ReporterRegistrar
ReporterPreferences	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct ReporterPreferences {$/;"	s	namespace:Catch
ReporterRegistrar	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^        explicit ReporterRegistrar( std::string const& name ) {$/;"	f	class:Catch::ReporterRegistrar
ReporterRegistrar	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^    class ReporterRegistrar {$/;"	c	namespace:Catch
ReporterRegistry	misc/deps/catch2/include/internal/catch_reporter_registry.h	/^    class ReporterRegistry : public IReporterRegistry {$/;"	c	namespace:Catch
Reporters	misc/deps/catch2/docs/reporters.md	/^# Reporters$/;"	c
Reporters	misc/deps/catch2/include/reporters/catch_reporter_listening.h	/^        using Reporters = std::vector<IStreamingReporterPtr>;$/;"	t	class:Catch::ListeningReporter	typeref:typename:std::vector<IStreamingReporterPtr>
Reporting timings	misc/deps/catch2/docs/command-line.md	/^## Reporting timings$/;"	s
Required	misc/deps/catch2/include/external/clara.hpp	/^    enum class Optionality { Optional, Required };$/;"	e	enum:Catch::clara::detail::Optionality
Required	misc/deps/catch2/third_party/clara.hpp	/^    enum class Optionality { Optional, Required };$/;"	e	enum:clara::detail::Optionality
Result	misc/deps/catch2/include/external/clara.hpp	/^    using Result = BasicResult<void>;$/;"	t	namespace:Catch::clara::detail	typeref:typename:BasicResult<void>
Result	misc/deps/catch2/third_party/clara.hpp	/^    using Result = BasicResult<void>;$/;"	t	namespace:clara::detail	typeref:typename:BasicResult<void>
ResultBase	misc/deps/catch2/include/external/clara.hpp	/^        ResultBase( Type type ) : m_type( type ) {}$/;"	f	class:Catch::clara::detail::ResultBase
ResultBase	misc/deps/catch2/include/external/clara.hpp	/^    class ResultBase {$/;"	c	namespace:Catch::clara::detail
ResultBase	misc/deps/catch2/third_party/clara.hpp	/^        ResultBase( Type type ) : m_type( type ) {}$/;"	f	class:clara::detail::ResultBase
ResultBase	misc/deps/catch2/third_party/clara.hpp	/^    class ResultBase {$/;"	c	namespace:clara::detail
ResultDisposition	misc/deps/catch2/include/internal/catch_result_type.h	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultError	misc/deps/catch2/include/internal/catch_console_colour.h	/^            ResultError = BrightRed,$/;"	e	enum:Catch::Colour::Code
ResultExpectedFailure	misc/deps/catch2/include/internal/catch_console_colour.h	/^            ResultExpectedFailure = Warning,$/;"	e	enum:Catch::Colour::Code
ResultOf_t	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            using ResultOf_t = typename std::result_of<Sig>::type;$/;"	t	namespace:Catch::Benchmark::Detail	typeref:typename:std::result_of<Sig>::type
ResultSuccess	misc/deps/catch2/include/internal/catch_console_colour.h	/^            ResultSuccess = BrightGreen,$/;"	e	enum:Catch::Colour::Code
ResultValueBase	misc/deps/catch2/include/external/clara.hpp	/^        ResultValueBase( ResultValueBase const &other ) : ResultBase( other ) {$/;"	f	class:Catch::clara::detail::ResultValueBase
ResultValueBase	misc/deps/catch2/include/external/clara.hpp	/^        ResultValueBase( Type type ) : ResultBase( type ) {}$/;"	f	class:Catch::clara::detail::ResultValueBase
ResultValueBase	misc/deps/catch2/include/external/clara.hpp	/^        ResultValueBase( Type, T const &value ) : ResultBase( Ok ) {$/;"	f	class:Catch::clara::detail::ResultValueBase
ResultValueBase	misc/deps/catch2/include/external/clara.hpp	/^    class ResultValueBase : public ResultBase {$/;"	c	namespace:Catch::clara::detail
ResultValueBase	misc/deps/catch2/include/external/clara.hpp	/^    class ResultValueBase<void> : public ResultBase {$/;"	c	namespace:Catch::clara::detail
ResultValueBase	misc/deps/catch2/third_party/clara.hpp	/^        ResultValueBase( ResultValueBase const &other ) : ResultBase( other ) {$/;"	f	class:clara::detail::ResultValueBase
ResultValueBase	misc/deps/catch2/third_party/clara.hpp	/^        ResultValueBase( Type type ) : ResultBase( type ) {}$/;"	f	class:clara::detail::ResultValueBase
ResultValueBase	misc/deps/catch2/third_party/clara.hpp	/^        ResultValueBase( Type, T const &value ) : ResultBase( Ok ) {$/;"	f	class:clara::detail::ResultValueBase
ResultValueBase	misc/deps/catch2/third_party/clara.hpp	/^    class ResultValueBase : public ResultBase {$/;"	c	namespace:clara::detail
ResultValueBase	misc/deps/catch2/third_party/clara.hpp	/^    class ResultValueBase<void> : public ResultBase {$/;"	c	namespace:clara::detail
ResultWas	misc/deps/catch2/include/internal/catch_result_type.h	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ReturnType	misc/deps/catch2/include/external/clara.hpp	/^        using ReturnType = ReturnT;$/;"	t	struct:Catch::clara::detail::UnaryLambdaTraits	typeref:typename:ReturnT
ReturnType	misc/deps/catch2/third_party/clara.hpp	/^        using ReturnType = ReturnT;$/;"	t	struct:clara::detail::UnaryLambdaTraits	typeref:typename:ReturnT
ReusableStringStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^    ReusableStringStream::ReusableStringStream()$/;"	f	class:Catch::ReusableStringStream
ReusableStringStream	misc/deps/catch2/include/internal/catch_stream.h	/^    class ReusableStringStream {$/;"	c	namespace:Catch
ReusableStringStream	misc/deps/catch2/single_include/catch2/catch.hpp	/^    class ReusableStringStream {$/;"	c	namespace:Catch
Right	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    enum Justification { Left, Right };$/;"	e	enum:Catch::__anon99a91d3f0110::ColumnInfo::Justification	file:
RowBreak	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^struct RowBreak {};$/;"	s	namespace:Catch::__anon99a91d3f0110	file:
RunContext	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    RunContext::RunContext(IConfigPtr const& _config, IStreamingReporterPtr&& reporter)$/;"	f	class:Catch::RunContext
RunContext	misc/deps/catch2/include/internal/catch_run_context.h	/^    class RunContext : public IResultCapture, public IRunner {$/;"	c	namespace:Catch
RunState	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        enum RunState {$/;"	g	class:Catch::TestCaseTracking::TrackerContext
RunTests	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct RunTests { enum InWhatOrder {$/;"	s	namespace:Catch
Running multiple tests in parallel	misc/deps/catch2/docs/limitations.md	/^### Running multiple tests in parallel$/;"	S
RuntimeError	misc/deps/catch2/include/external/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:Catch::clara::detail::ResultBase::Type
RuntimeError	misc/deps/catch2/third_party/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:clara::detail::ResultBase::Type
S	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^struct S$/;"	s	file:
SCENARIO	misc/deps/catch2/include/catch.hpp	/^#define SCENARIO(/;"	d
SCENARIO_METHOD	misc/deps/catch2/include/catch.hpp	/^#define SCENARIO_METHOD(/;"	d
SECTION	misc/deps/catch2/include/catch.hpp	/^#define SECTION(/;"	d
SEE	misc/deps/catch2/projects/XCode/OCTest/OCTest/OCTest.1	/^.Sh SEE ALSO$/;"	s
SELF_TEST_DIR	misc/deps/catch2/CMakeLists.txt	/^set(SELF_TEST_DIR ${CATCH_DIR}\/projects\/SelfTest)$/;"	v
SINGLE_INCLUDE_PATH	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^set( SINGLE_INCLUDE_PATH ${CATCH_DIR}\/single_include )$/;"	v
SOURCES	misc/deps/catch2/CMake/FindGcov.cmake	/^	set(SOURCES "")$/;"	v	function:add_gcov_target
SOURCES	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(SOURCES "")$/;"	v	function:lcov_capture_initial_tgt
SOURCES	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(SOURCES "")$/;"	v	function:lcov_capture_tgt
SOURCES_020	misc/deps/catch2/examples/CMakeLists.txt	/^set( SOURCES_020$/;"	v
SOURCES_ALL	misc/deps/catch2/examples/CMakeLists.txt	/^set( SOURCES_ALL$/;"	v
SOURCES_IDIOMATIC_MAIN	misc/deps/catch2/examples/CMakeLists.txt	/^set( SOURCES_IDIOMATIC_MAIN$/;"	v
SOURCES_IDIOMATIC_TESTS	misc/deps/catch2/examples/CMakeLists.txt	/^set( SOURCES_IDIOMATIC_TESTS$/;"	v
SOURCES_REPORTERS_MAIN	misc/deps/catch2/examples/CMakeLists.txt	/^set( SOURCES_REPORTERS_MAIN$/;"	v
SOURCES_REPORTERS_TESTS	misc/deps/catch2/examples/CMakeLists.txt	/^set( SOURCES_REPORTERS_TESTS$/;"	v
SOURCES_SINGLE_FILE	misc/deps/catch2/examples/CMakeLists.txt	/^set( SOURCES_SINGLE_FILE$/;"	v
SRCDIR	Makefile	/^SRCDIR		?= src$/;"	m
SRCDIR	misc/Makefile	/^SRCDIR		?= src$/;"	m
SRCDIR	misc/deps/ezbuild/Makefile	/^SRCDIR		?= src$/;"	m
STATIC_REQUIRE	misc/deps/catch2/include/catch.hpp	/^#define STATIC_REQUIRE(/;"	d
STATIC_REQUIRE_FALSE	misc/deps/catch2/include/catch.hpp	/^#define STATIC_REQUIRE_FALSE(/;"	d
SUCCEED	misc/deps/catch2/include/catch.hpp	/^#define SUCCEED(/;"	d
SURROGATE_SOURCES	misc/deps/catch2/projects/CMakeLists.txt	/^set(SURROGATE_SOURCES$/;"	v
SYNOPSIS	misc/deps/catch2/projects/XCode/OCTest/OCTest/OCTest.1	/^.Sh SYNOPSIS             \\" Section Header - required - don't modify$/;"	s
SampleAnalysis	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^        struct SampleAnalysis {$/;"	s	namespace:Catch::Benchmark
Scaling up	misc/deps/catch2/docs/tutorial.md	/^## Scaling up$/;"	s
Scope	misc/deps/catch2/CODE_OF_CONDUCT.md	/^## Scope$/;"	s
ScopedElement	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::ScopedElement( ScopedElement&& other ) noexcept$/;"	f	class:Catch::XmlWriter::ScopedElement
ScopedElement	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::ScopedElement( XmlWriter* writer )$/;"	f	class:Catch::XmlWriter::ScopedElement
ScopedElement	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        class ScopedElement {$/;"	c	class:Catch::XmlWriter
ScopedMessage	misc/deps/catch2/include/internal/catch_message.cpp	/^    ScopedMessage::ScopedMessage( MessageBuilder const& builder )$/;"	f	class:Catch::ScopedMessage
ScopedMessage	misc/deps/catch2/include/internal/catch_message.cpp	/^    ScopedMessage::ScopedMessage( ScopedMessage&& old )$/;"	f	class:Catch::ScopedMessage
ScopedMessage	misc/deps/catch2/include/internal/catch_message.h	/^    class ScopedMessage {$/;"	c	namespace:Catch
Secondary description amongst tags	misc/deps/catch2/docs/deprecations.md	/^### Secondary description amongst tags$/;"	S
SecondaryText	misc/deps/catch2/include/internal/catch_console_colour.h	/^            SecondaryText = LightGrey,$/;"	e	enum:Catch::Colour::Code
Seconds	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^        Seconds,$/;"	e	enum:Catch::__anon99a91d3f0110::Duration::Unit	file:
Section	misc/deps/catch2/include/internal/catch_section.cpp	/^    Section::Section( SectionInfo const& info )$/;"	f	class:Catch::Section
Section	misc/deps/catch2/include/internal/catch_section.h	/^    class Section : NonCopyable {$/;"	c	namespace:Catch
SectionEndInfo	misc/deps/catch2/include/internal/catch_section_info.h	/^    struct SectionEndInfo {$/;"	s	namespace:Catch
SectionInfo	misc/deps/catch2/include/internal/catch_section_info.cpp	/^    SectionInfo::SectionInfo$/;"	f	class:Catch::SectionInfo
SectionInfo	misc/deps/catch2/include/internal/catch_section_info.h	/^        SectionInfo$/;"	f	struct:Catch::SectionInfo
SectionInfo	misc/deps/catch2/include/internal/catch_section_info.h	/^    struct SectionInfo {$/;"	s	namespace:Catch
SectionNode	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            explicit SectionNode(SectionStats const& _stats) : stats(_stats) {}$/;"	f	struct:Catch::CumulativeReporterBase::SectionNode
SectionNode	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        struct SectionNode {$/;"	s	struct:Catch::CumulativeReporterBase
SectionStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    SectionStats::SectionStats(  SectionInfo const& _sectionInfo,$/;"	f	class:Catch::SectionStats
SectionStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct SectionStats {$/;"	s	namespace:Catch
SectionTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    SectionTracker::SectionTracker( NameAndLocation const& nameAndLocation, TrackerContext& ctx,/;"	f	class:Catch::TestCaseTracking::SectionTracker
SectionTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^    class SectionTracker : public TrackerBase {$/;"	c	namespace:Catch::TestCaseTracking
Sections nested in loops	misc/deps/catch2/docs/limitations.md	/^### Sections nested in loops$/;"	S
SelfTest	misc/deps/catch2/projects/CMakeLists.txt	/^add_executable(SelfTest ${TEST_SOURCES} ${IMPL_SOURCES} ${REPORTER_SOURCES} ${SURROGATE_SOURCES}/;"	t
Sending output to a file	misc/deps/catch2/docs/command-line.md	/^## Sending output to a file$/;"	s
Session	misc/deps/catch2/include/internal/catch_session.cpp	/^    Session::Session() {$/;"	f	class:Catch::Session
Session	misc/deps/catch2/include/internal/catch_session.h	/^    class Session : NonCopyable {$/;"	c	namespace:Catch
Short answer	misc/deps/catch2/docs/slow-compiles.md	/^## Short answer$/;"	s
ShortCircuitAll	misc/deps/catch2/include/external/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	e	enum:Catch::clara::detail::ParseResultType
ShortCircuitAll	misc/deps/catch2/third_party/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	e	enum:clara::detail::ParseResultType
ShortCircuitSame	misc/deps/catch2/include/external/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	e	enum:Catch::clara::detail::ParseResultType
ShortCircuitSame	misc/deps/catch2/third_party/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	e	enum:clara::detail::ParseResultType
ShouldFail	misc/deps/catch2/include/internal/catch_test_case_info.h	/^            ShouldFail = 1 << 2,$/;"	e	enum:Catch::TestCaseInfo::SpecialProperties
ShowDurations	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct ShowDurations { enum OrNot {$/;"	s	namespace:Catch
Showing results for successful tests	misc/deps/catch2/docs/command-line.md	/^## Showing results for successful tests$/;"	s
SignalDefs	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	s	namespace:Catch	file:
SignalDefs	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    struct SignalDefs {$/;"	s	namespace:Catch	file:
Signature	misc/deps/catch2/docs/test-cases-and-sections.md	/^### Signature$/;"	S
Signature based parametrised test cases	misc/deps/catch2/docs/test-cases-and-sections.md	/^## Signature based parametrised test cases$/;"	s
Signature-based parametrised test fixtures	misc/deps/catch2/docs/test-fixtures.md	/^## Signature-based parametrised test fixtures$/;"	s
Signing a tag	misc/deps/catch2/docs/release-process.md	/^#### Signing a tag$/;"	t
Signing the headers	misc/deps/catch2/docs/release-process.md	/^#### Signing the headers$/;"	t
SimplePcg32	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^    SimplePcg32::SimplePcg32(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
SimplePcg32	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^        SimplePcg32():SimplePcg32(0xed743cc4U) {}$/;"	f	class:Catch::SimplePcg32
SimplePcg32	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^    class SimplePcg32 {$/;"	c	namespace:Catch
SingleValueGenerator	misc/deps/catch2/include/internal/catch_generators.hpp	/^        SingleValueGenerator(T const& value) : m_value( value ) {}$/;"	f	class:Catch::Generators::SingleValueGenerator
SingleValueGenerator	misc/deps/catch2/include/internal/catch_generators.hpp	/^        SingleValueGenerator(T&& value) : m_value(std::move(value)) {}$/;"	f	class:Catch::Generators::SingleValueGenerator
SingleValueGenerator	misc/deps/catch2/include/internal/catch_generators.hpp	/^    class SingleValueGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
Singleton	misc/deps/catch2/include/internal/catch_singletons.hpp	/^    class Singleton : SingletonImplT, public ISingleton {$/;"	c	namespace:Catch
SourceLineInfo	misc/deps/catch2/include/internal/catch_common.h	/^        SourceLineInfo( char const* _file, std::size_t _line ) noexcept$/;"	f	struct:Catch::SourceLineInfo
SourceLineInfo	misc/deps/catch2/include/internal/catch_common.h	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo	misc/deps/catch2/single_include/catch2/catch.hpp	/^        SourceLineInfo( char const* _file, std::size_t _line ) noexcept$/;"	f	struct:Catch::SourceLineInfo
SourceLineInfo	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
SourceLineInfo::empty()	misc/deps/catch2/docs/deprecations.md	/^### SourceLineInfo::empty()$/;"	S
Spacer	misc/deps/catch2/include/external/clara.hpp	/^	explicit Spacer(size_t spaceWidth) : Column("") {$/;"	f	class:Catch::clara::TextFlow::Spacer
Spacer	misc/deps/catch2/include/external/clara.hpp	/^class Spacer : public Column {$/;"	c	namespace:Catch::clara::TextFlow
Spacer	misc/deps/catch2/third_party/clara.hpp	/^        explicit Spacer( size_t spaceWidth ) : Column( "" ) {$/;"	f	class:clara::TextFlow::Spacer
Spacer	misc/deps/catch2/third_party/clara.hpp	/^    class Spacer : public Column {$/;"	c	namespace:clara::TextFlow
Special Tags	misc/deps/catch2/docs/test-cases-and-sections.md	/^### Special Tags$/;"	S
SpecialException	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^        SpecialException(int i_) : i(i_) {}$/;"	f	struct:__anon96897c110110::MatchersTests::SpecialException	file:
SpecialException	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    struct SpecialException : std::exception {$/;"	s	namespace:__anon96897c110110::MatchersTests	file:
SpecialProperties	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        enum SpecialProperties{$/;"	g	struct:Catch::TestCaseInfo
Specify a seed for the Random Number Generator	misc/deps/catch2/docs/command-line.md	/^## Specify a seed for the Random Number Generator$/;"	s
Specify the confidence-interval for bootstrapping	misc/deps/catch2/docs/command-line.md	/^## Specify the confidence-interval for bootstrapping$/;"	s
Specify the number of benchmark samples to collect	misc/deps/catch2/docs/command-line.md	/^## Specify the number of benchmark samples to collect$/;"	s
Specify the number of resamples for bootstrapping	misc/deps/catch2/docs/command-line.md	/^## Specify the number of resamples for bootstrapping$/;"	s
Specify the order test cases are run	misc/deps/catch2/docs/command-line.md	/^## Specify the order test cases are run$/;"	s
Specify the section to run	misc/deps/catch2/docs/command-line.md	/^## Specify the section to run$/;"	s
Specifying which tests to run	misc/deps/catch2/docs/command-line.md	/^## Specifying which tests to run$/;"	s
StartsWith	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^    StdString::StartsWithMatcher StartsWith( std::string const& str, CaseSensitive::Choice caseS/;"	f	namespace:Catch::Matchers	typeref:typename:StdString::StartsWithMatcher
StartsWith	misc/deps/catch2/include/internal/catch_objc.hpp	/^                StartsWith( NSString* substr ) : StringHolder( substr ){}$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::StartsWith
StartsWith	misc/deps/catch2/include/internal/catch_objc.hpp	/^            StartsWith( NSString* substr ){ return Impl::NSStringMatchers::StartsWith( substr );/;"	f	namespace:Catch::Matchers	typeref:typename:Impl::NSStringMatchers::StartsWith
StartsWith	misc/deps/catch2/include/internal/catch_objc.hpp	/^            struct StartsWith : StringHolder {$/;"	s	namespace:Catch::Matchers::Impl::NSStringMatchers
StartsWith	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE_THAT( @"This is a string", StartsWith( @"This" ) );$/;"	C	implementation:TestFixture
StartsWithMatcher	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        StartsWithMatcher::StartsWithMatcher( CasedString const& comparator ) : StringMatcherBas/;"	f	class:Catch::Matchers::StdString::StartsWithMatcher
StartsWithMatcher	misc/deps/catch2/include/internal/catch_matchers_string.h	/^        struct StartsWithMatcher : StringMatcherBase {$/;"	s	namespace:Catch::Matchers::StdString
StartupExceptionRegistry	misc/deps/catch2/include/internal/catch_startup_exception_registry.h	/^    class StartupExceptionRegistry {$/;"	c	namespace:Catch
StdString	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers	file:
StdString	misc/deps/catch2/include/internal/catch_matchers_string.h	/^    namespace StdString {$/;"	n	namespace:Catch::Matchers
StreamBufImpl	misc/deps/catch2/include/internal/catch_stream.cpp	/^            StreamBufImpl() {$/;"	f	class:Catch::Detail::__anond61e3add0110::StreamBufImpl	file:
StreamBufImpl	misc/deps/catch2/include/internal/catch_stream.cpp	/^        class StreamBufImpl : public std::streambuf {$/;"	c	namespace:Catch::Detail::__anond61e3add0110	file:
StreamEndStop	misc/deps/catch2/include/internal/catch_common.h	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamEndStop	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
Streaming macros	misc/deps/catch2/docs/logging.md	/^## Streaming macros$/;"	s
StreamingReporterBase	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        StreamingReporterBase( ReporterConfig const& _config )$/;"	f	struct:Catch::StreamingReporterBase
StreamingReporterBase	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^    struct StreamingReporterBase : IStreamingReporter {$/;"	s	namespace:Catch
String conversions	misc/deps/catch2/docs/tostring.md	/^# String conversions$/;"	c
String matchers	misc/deps/catch2/docs/matchers.md	/^### String matchers$/;"	S
StringHolder	misc/deps/catch2/include/internal/catch_objc.hpp	/^                StringHolder( NSString* substr ) : m_substr( [substr copy] ){}$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::StringHolder
StringHolder	misc/deps/catch2/include/internal/catch_objc.hpp	/^                StringHolder( StringHolder const& other ) : m_substr( [other.m_substr copy] ){}$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::StringHolder
StringHolder	misc/deps/catch2/include/internal/catch_objc.hpp	/^                StringHolder() {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::StringHolder
StringHolder	misc/deps/catch2/include/internal/catch_objc.hpp	/^            struct StringHolder : MatcherBase<NSString*>{$/;"	s	namespace:Catch::Matchers::Impl::NSStringMatchers
StringMaker	misc/deps/catch2/include/internal/catch_approx.h	/^struct StringMaker<Catch::Detail::Approx> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<NSObject*> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<NSString*> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<R, typename std::enable_if<is_range<R>::value && !::Catch::Detail::IsStre/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<T[SZ]> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<T^> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<bool> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<char *> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<char const *> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<char> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<char[SZ]> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<double> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<float> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<int> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<long long> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<long> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<signed char> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<signed char[SZ]> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::byte> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::monostate> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::nullptr_t> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::optional<T> > {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::pair<T1, T2> > {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::string> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::string_view> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::wstring> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<std::wstring_view> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<unsigned char> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<unsigned char[SZ]> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<unsigned int> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<unsigned long long> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<unsigned long> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<wchar_t *> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct StringMaker<wchar_t const *> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^struct StringMaker<StringMakerException> {$/;"	s	namespace:Catch	file:
StringMaker	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    struct StringMaker<has_maker> {$/;"	s	namespace:Catch	file:
StringMaker	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    struct StringMaker<has_maker_and_operator> {$/;"	s	namespace:Catch	file:
StringMaker	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct StringMaker<stringmaker_range> {$/;"	s	namespace:Catch	file:
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<NSObject*> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<NSString*> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<R, typename std::enable_if<is_range<R>::value && !::Catch::Detail::IsStre/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<T[SZ]> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<T^> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<bool> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<char *> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<char const *> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<char> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<char[SZ]> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<double> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<float> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<int> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<long long> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<long> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<signed char> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<signed char[SZ]> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::byte> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::monostate> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::nullptr_t> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::optional<T> > {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::pair<T1, T2> > {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::string> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::string_view> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::wstring> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<std::wstring_view> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<unsigned char> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<unsigned char[SZ]> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<unsigned int> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<unsigned long long> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<unsigned long> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<wchar_t *> {$/;"	s	namespace:Catch
StringMaker	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct StringMaker<wchar_t const *> {$/;"	s	namespace:Catch
StringMakerException	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^struct StringMakerException : std::exception {$/;"	s	namespace:__anon7572b8720110	file:
StringMatcher	misc/deps/catch2/include/internal/catch_capture_matchers.cpp	/^    using StringMatcher = Matchers::Impl::MatcherBase<std::string>;$/;"	t	namespace:Catch	typeref:typename:Matchers::Impl::MatcherBase<std::string>	file:
StringMatcher	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^    using StringMatcher = Matchers::Impl::MatcherBase<std::string>;$/;"	t	namespace:Catch	typeref:typename:Matchers::Impl::MatcherBase<std::string>
StringMatcherBase	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        StringMatcherBase::StringMatcherBase( std::string const& operation, CasedString const& c/;"	f	class:Catch::Matchers::StdString::StringMatcherBase
StringMatcherBase	misc/deps/catch2/include/internal/catch_matchers_string.h	/^        struct StringMatcherBase : MatcherBase<std::string> {$/;"	s	namespace:Catch::Matchers::StdString
StringRef	misc/deps/catch2/include/internal/catch_stringref.cpp	/^    StringRef::StringRef( char const* rawChars ) noexcept$/;"	f	class:Catch::StringRef
StringRef	misc/deps/catch2/include/internal/catch_stringref.h	/^        StringRef( std::string const& stdString ) noexcept$/;"	f	class:Catch::StringRef
StringRef	misc/deps/catch2/include/internal/catch_stringref.h	/^        constexpr StringRef( char const* rawChars, size_type size ) noexcept$/;"	f	class:Catch::StringRef
StringRef	misc/deps/catch2/include/internal/catch_stringref.h	/^    class StringRef {$/;"	c	namespace:Catch
StringRef	misc/deps/catch2/single_include/catch2/catch.hpp	/^        StringRef( StringRef const& other ) noexcept$/;"	f	class:Catch::StringRef
StringRef	misc/deps/catch2/single_include/catch2/catch.hpp	/^        StringRef( StringRef&& other ) noexcept$/;"	f	class:Catch::StringRef
StringRef	misc/deps/catch2/single_include/catch2/catch.hpp	/^        StringRef( char const* rawChars, size_type size ) noexcept$/;"	f	class:Catch::StringRef
StringRef	misc/deps/catch2/single_include/catch2/catch.hpp	/^        StringRef( std::string const& stdString ) noexcept$/;"	f	class:Catch::StringRef
StringRef	misc/deps/catch2/single_include/catch2/catch.hpp	/^        StringRef() noexcept$/;"	f	class:Catch::StringRef
StringRef	misc/deps/catch2/single_include/catch2/catch.hpp	/^    class StringRef {$/;"	c	namespace:Catch
StringStreams	misc/deps/catch2/include/internal/catch_stream.cpp	/^    struct StringStreams {$/;"	s	namespace:Catch	file:
StrongDoubleTypedef	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^        explicit StrongDoubleTypedef(double d) : d_(d) {}$/;"	f	class:__anon0cb4e5740110::ApproxTests::StrongDoubleTypedef	file:
StrongDoubleTypedef	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^    class StrongDoubleTypedef {$/;"	c	namespace:__anon0cb4e5740110::ApproxTests	file:
Success	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Success = Green,$/;"	e	enum:Catch::Colour::Code
SummaryColumn	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    SummaryColumn( std::string _label, Colour::Code _colour )$/;"	f	struct:Catch::SummaryColumn	file:
SummaryColumn	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^struct SummaryColumn {$/;"	s	namespace:Catch	file:
Supplying main() yourself	misc/deps/catch2/docs/own-main.md	/^# Supplying main() yourself$/;"	c
SuppressFail	misc/deps/catch2/include/internal/catch_result_type.h	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	misc/deps/catch2/single_include/catch2/catch.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
T	misc/tests/ft_string/strchr.cpp	/^#define T(/;"	d	file:
TAP (Test Anything Protocol) Reporter	misc/deps/catch2/docs/ci-and-misc.md	/^### TAP (Test Anything Protocol) Reporter$/;"	S
TAPReporter	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^    struct TAPReporter : StreamingReporterBase<TAPReporter> {$/;"	s	namespace:Catch
TAPReporter	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^    struct TAPReporter : StreamingReporterBase<TAPReporter> {$/;"	s	namespace:Catch
TARGETS_ALL	misc/deps/catch2/examples/CMakeLists.txt	/^set( TARGETS_ALL$/;"	v
TARGETS_IDIOMATIC_TESTS	misc/deps/catch2/examples/CMakeLists.txt	/^set( TARGETS_IDIOMATIC_TESTS ${BASENAMES_IDIOMATIC_TESTS} )$/;"	v
TARGETS_REPORTERS_MAIN	misc/deps/catch2/examples/CMakeLists.txt	/^set( TARGETS_REPORTERS_MAIN  ${BASENAMES_REPORTERS_MAIN} )$/;"	v
TARGETS_REPORTERS_TESTS	misc/deps/catch2/examples/CMakeLists.txt	/^set( TARGETS_REPORTERS_TESTS ${BASENAMES_REPORTERS_TESTS} )$/;"	v
TARGETS_SINGLE_FILE	misc/deps/catch2/examples/CMakeLists.txt	/^set( TARGETS_SINGLE_FILE     ${BASENAMES_SINGLE_FILE} )$/;"	v
TARGET_COMPILER	misc/deps/catch2/CMake/Findcodecov.cmake	/^	set(TARGET_COMPILER "")$/;"	v	function:add_coverage_target
TCOMPILER	misc/deps/catch2/CMake/FindGcov.cmake	/^				set(TCOMPILER ${CMAKE_${LANG}_COMPILER_ID})$/;"	v	function:add_gcov_target
TCOMPILER	misc/deps/catch2/CMake/FindGcov.cmake	/^	set(TCOMPILER "")$/;"	v	function:add_gcov_target
TCOMPILER	misc/deps/catch2/CMake/FindLcov.cmake	/^				set(TCOMPILER ${CMAKE_${LANG}_COMPILER_ID})$/;"	v	function:lcov_capture_initial_tgt
TCOMPILER	misc/deps/catch2/CMake/FindLcov.cmake	/^				set(TCOMPILER ${CMAKE_${LANG}_COMPILER_ID})$/;"	v	function:lcov_capture_tgt
TCOMPILER	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(TCOMPILER "")$/;"	v	function:lcov_capture_initial_tgt
TCOMPILER	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(TCOMPILER "")$/;"	v	function:lcov_capture_tgt
TDIR	misc/deps/catch2/CMake/FindGcov.cmake	/^	set(TDIR ${CMAKE_CURRENT_BINARY_DIR}\/CMakeFiles\/${TNAME}.dir)$/;"	v	function:add_gcov_target
TDIR	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(TDIR ${CMAKE_CURRENT_BINARY_DIR}\/CMakeFiles\/${TNAME}.dir)$/;"	v	function:lcov_capture_initial_tgt
TDIR	misc/deps/catch2/CMake/FindLcov.cmake	/^	set(TDIR ${CMAKE_CURRENT_BINARY_DIR}\/CMakeFiles\/${TNAME}.dir)$/;"	v	function:lcov_capture_tgt
TEMPLATE_LIST_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_LIST_TEST_CASE(/;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_LIST_TEST_CASE_METHOD(/;"	d
TEMPLATE_PRODUCT_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_PRODUCT_TEST_CASE(/;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_PRODUCT_TEST_CASE_METHOD(/;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(/;"	d
TEMPLATE_PRODUCT_TEST_CASE_SIG	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_PRODUCT_TEST_CASE_SIG(/;"	d
TEMPLATE_TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_TEST_CASE(/;"	d
TEMPLATE_TEST_CASE_METHOD	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_TEST_CASE_METHOD(/;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_TEST_CASE_METHOD_SIG(/;"	d
TEMPLATE_TEST_CASE_SIG	misc/deps/catch2/include/catch.hpp	/^#define TEMPLATE_TEST_CASE_SIG(/;"	d
TEST	Makefile	/^TEST        ?= test$/;"	m
TEST	misc/Makefile	/^TEST        ?= test$/;"	m
TEST	misc/deps/ezbuild/Makefile	/^TEST        ?= test$/;"	m
TESTDF	Makefile	/^TESTDF      ?= $(patsubst %.o,%.d,$(TESTOBJ))$/;"	m
TESTDF	misc/Makefile	/^TESTDF      ?= $(call replace_ext,o,d,$(TESTOBJ))$/;"	m
TESTDF	misc/deps/ezbuild/Makefile	/^TESTDF      ?= $(patsubst %.o,%.d,$(TESTOBJ))$/;"	m
TESTDIR	Makefile	/^TESTDIR		:= misc\/tests$/;"	m
TESTDIR	Makefile	/^TESTDIR     ?= test$/;"	m
TESTDIR	misc/Makefile	/^TESTDIR		:= misc\/tests$/;"	m
TESTDIR	misc/Makefile	/^TESTDIR     ?= test$/;"	m
TESTDIR	misc/deps/ezbuild/Makefile	/^TESTDIR		:= misc\/tests$/;"	m
TESTDIR	misc/deps/ezbuild/Makefile	/^TESTDIR     ?= test$/;"	m
TESTFLAGS	Makefile	/^TESTFLAGS   := $(TESTFLAGS) $(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
TESTFLAGS	Makefile	/^TESTFLAGS   ?= $(CXXFLAGS)$/;"	m
TESTFLAGS	misc/Makefile	/^TESTFLAGS   ?= $(CXXFLAGS)$/;"	m
TESTFLAGS	misc/Makefile	/^TESTFLAGS   ?= $(TESTFLAGS) $(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
TESTFLAGS	misc/deps/ezbuild/Makefile	/^TESTFLAGS   := $(TESTFLAGS) $(INCDIR) $(LIBDIR) $(LIBNAME)$/;"	m
TESTFLAGS	misc/deps/ezbuild/Makefile	/^TESTFLAGS   ?= $(CXXFLAGS)$/;"	m
TESTOBJ	Makefile	/^TESTOBJ     ?= $(patsubst %.cpp,%.o,$(subst $(TESTDIR),$(BINDIR)\/$(TESTDIR),$(TESTSRC)))$/;"	m
TESTOBJ	misc/Makefile	/^TESTOBJ     ?= $(call replace_ext,cpp,o,$(call str_replace,$(TESTSRC),$(TESTDIR),$(BINDIR)\/$(TE/;"	m
TESTOBJ	misc/deps/ezbuild/Makefile	/^TESTOBJ     ?= $(patsubst %.cpp,%.o,$(subst $(TESTDIR),$(BINDIR)\/$(TESTDIR),$(TESTSRC)))$/;"	m
TESTSRC	Makefile	/^TESTSRC		:=.\/misc\/tests\/ft_string\/strcpy.cpp\\$/;"	m
TESTSRC	Makefile	/^TESTSRC     ?=$/;"	m
TESTSRC	misc/Makefile	/^TESTSRC		:=.\/misc\/tests\/ft_string\/strcpy.cpp\\$/;"	m
TESTSRC	misc/Makefile	/^TESTSRC     ?= $(call find_by_ext,$(TESTDIR),cpp)$/;"	m
TESTSRC	misc/deps/ezbuild/Makefile	/^TESTSRC		:=.\/misc\/tests\/ft_string\/strcpy.cpp\\$/;"	m
TESTSRC	misc/deps/ezbuild/Makefile	/^TESTSRC     ?=$/;"	m
TESTS_DIR	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^set( TESTS_DIR   ${CATCH_DIR}\/projects\/ExtraTests )$/;"	v
TEST_CASE	misc/deps/catch2/include/catch.hpp	/^#define TEST_CASE(/;"	d
TEST_CASE	misc/deps/catch2/projects/SelfTest/UsageTests/VariadicMacros.tests.cpp	/^TEST_CASE()$/;"	f
TEST_CASE	misc/deps/catch2/projects/XCode/OCTest/OCTest/OCTest.mm	/^TEST_CASE( "OCTest\/TestObj", "tests TestObj" )$/;"	f
TEST_CASE_METHOD	misc/deps/catch2/include/catch.hpp	/^#define TEST_CASE_METHOD(/;"	d
TEST_SOURCES	misc/deps/catch2/projects/CMakeLists.txt	/^set(TEST_SOURCES$/;"	v
THEN	misc/deps/catch2/include/catch.hpp	/^#define THEN(/;"	d
TOP_LEVEL_HEADERS	misc/deps/catch2/projects/CMakeLists.txt	/^set(TOP_LEVEL_HEADERS$/;"	v
TStorage	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            using TStorage = typename std::aligned_storage<sizeof(T), std::alignment_of<T>::valu/;"	t	struct:Catch::Detail::ObjectStorage
TWOBLUECUBES_CATCHOCTESTCASE_H_INCLUDED	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.h	/^#define TWOBLUECUBES_CATCHOCTESTCASE_H_INCLUDED$/;"	M
TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_approx.h	/^#define TWOBLUECUBES_CATCH_APPROX_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONHANDLER_H_INCLUDED	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^#define TWOBLUECUBES_CATCH_ASSERTIONHANDLER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONINFO_H_INCLUDED	misc/deps/catch2/include/internal/catch_assertioninfo.h	/^#define TWOBLUECUBES_CATCH_ASSERTIONINFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED	misc/deps/catch2/include/internal/catch_assertionresult.h	/^#define TWOBLUECUBES_CATCH_ASSERTIONRESULT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_BENCHMARK_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^#define TWOBLUECUBES_CATCH_BENCHMARK_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_BENCHMARK_RESULTS_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^#define TWOBLUECUBES_CATCH_BENCHMARK_RESULTS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_capture.hpp	/^#define TWOBLUECUBES_CATCH_CAPTURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CAPTURE_MATCHERS_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^#define TWOBLUECUBES_CATCH_CAPTURE_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CHRONOMETER_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^#define TWOBLUECUBES_CATCH_CHRONOMETER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLARA_H_INCLUDED	misc/deps/catch2/include/internal/catch_clara.h	/^#define TWOBLUECUBES_CATCH_CLARA_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CLOCK_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^#define TWOBLUECUBES_CATCH_CLOCK_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_commandline.h	/^#define TWOBLUECUBES_CATCH_COMMANDLINE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMMON_H_INCLUDED	misc/deps/catch2/include/internal/catch_common.h	/^#define TWOBLUECUBES_CATCH_COMMON_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#define TWOBLUECUBES_CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_config.hpp	/^#define TWOBLUECUBES_CATCH_CONFIG_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_console_colour.h	/^#define TWOBLUECUBES_CATCH_CONSOLE_COLOUR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONSTRUCTOR_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^#define TWOBLUECUBES_CATCH_CONSTRUCTOR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED	misc/deps/catch2/include/internal/catch_context.h	/^#define TWOBLUECUBES_CATCH_CONTEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED	misc/deps/catch2/include/internal/catch_debugger.h	/^#define TWOBLUECUBES_CATCH_DEBUGGER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEBUG_CONSOLE_H_INCLUDED	misc/deps/catch2/include/internal/catch_debug_console.h	/^#define TWOBLUECUBES_CATCH_DEBUG_CONSOLE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DECOMPOSER_H_INCLUDED	misc/deps/catch2/include/internal/catch_decomposer.h	/^#define TWOBLUECUBES_CATCH_DECOMPOSER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_default_main.hpp	/^#define TWOBLUECUBES_CATCH_DEFAULT_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DETAIL_ANALYSE_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_analyse.hpp	/^#define TWOBLUECUBES_CATCH_DETAIL_ANALYSE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DETAIL_ANALYSIS_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^#define TWOBLUECUBES_CATCH_DETAIL_ANALYSIS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DETAIL_BENCHMARK_FUNCTION_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^#define TWOBLUECUBES_CATCH_DETAIL_BENCHMARK_FUNCTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DETAIL_COMPLETE_INVOKE_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^#define TWOBLUECUBES_CATCH_DETAIL_COMPLETE_INVOKE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DETAIL_ESTIMATE_CLOCK_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^#define TWOBLUECUBES_CATCH_DETAIL_ESTIMATE_CLOCK_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DETAIL_MEASURE_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_measure.hpp	/^#define TWOBLUECUBES_CATCH_DETAIL_MEASURE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DETAIL_REPEAT_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_repeat.hpp	/^#define TWOBLUECUBES_CATCH_DETAIL_REPEAT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_DETAIL_TIMING_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_timing.hpp	/^#define TWOBLUECUBES_CATCH_DETAIL_TIMING_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ENFORCE_H_INCLUDED	misc/deps/catch2/include/internal/catch_enforce.h	/^#define TWOBLUECUBES_CATCH_ENFORCE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ENUMVALUESREGISTRY_H_INCLUDED	misc/deps/catch2/include/internal/catch_enum_values_registry.h	/^#define TWOBLUECUBES_CATCH_ENUMVALUESREGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ENVIRONMENT_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^#define TWOBLUECUBES_CATCH_ENVIRONMENT_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ERRNO_GUARD_H_INCLUDED	misc/deps/catch2/include/internal/catch_errno_guard.h	/^#define TWOBLUECUBES_CATCH_ERRNO_GUARD_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_ESTIMATE_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^#define TWOBLUECUBES_CATCH_ESTIMATE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_exception_translator_registry.h	/^#define TWOBLUECUBES_CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXECUTION_PLAN_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^#define TWOBLUECUBES_CATCH_EXECUTION_PLAN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_EXTERNAL_INTERFACES_H_INCLUDED	misc/deps/catch2/include/internal/catch_external_interfaces.h	/^#define TWOBLUECUBES_CATCH_EXTERNAL_INTERFACES_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^#define TWOBLUECUBES_CATCH_FATAL_CONDITION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_GENERIC_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_GENERIC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_generators.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_GENERATORS_SPECIFIC_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^#define TWOBLUECUBES_CATCH_GENERATORS_SPECIFIC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_HPP_INCLUDED	misc/deps/catch2/include/catch.hpp	/^#define TWOBLUECUBES_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_impl.hpp	/^#define TWOBLUECUBES_CATCH_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACESENUMVALUESREGISTRY_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_enum_values_registry.h	/^#define TWOBLUECUBES_CATCH_INTERFACESENUMVALUESREGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_capture.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_CAPTURE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_CONFIG_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_EXCEPTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_GENERATORTRACKER_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_generatortracker.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_GENERATORTRACKER_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_registry_hub.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_REGISTRY_HUB_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_runner.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_RUNNER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_tag_alias_registry.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED	misc/deps/catch2/include/internal/catch_interfaces_testcase.h	/^#define TWOBLUECUBES_CATCH_INTERFACES_TESTCASE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LEAK_DETECTOR_H_INCLUDED	misc/deps/catch2/include/internal/catch_leak_detector.h	/^#define TWOBLUECUBES_CATCH_LEAK_DETECTOR_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_LIST_H_INCLUDED	misc/deps/catch2/include/internal/catch_list.h	/^#define TWOBLUECUBES_CATCH_LIST_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_EXCEPTION_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_matchers_exception.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_EXCEPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_FLOATING_H_INCLUDED	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^#define TWOBLUECUBES_CATCH_MATCHERS_FLOATING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_GENERIC_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^#define TWOBLUECUBES_CATCH_MATCHERS_GENERIC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_matchers.h	/^#define TWOBLUECUBES_CATCH_MATCHERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_STRING_H_INCLUDED	misc/deps/catch2/include/internal/catch_matchers_string.h	/^#define TWOBLUECUBES_CATCH_MATCHERS_STRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MATCHERS_VECTOR_H_INCLUDED	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^#define TWOBLUECUBES_CATCH_MATCHERS_VECTOR_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED	misc/deps/catch2/include/internal/catch_message.h	/^#define TWOBLUECUBES_CATCH_MESSAGE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_META_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_meta.hpp	/^#define TWOBLUECUBES_CATCH_META_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_MULTI_REPORTER_H_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_listening.h	/^#define TWOBLUECUBES_CATCH_MULTI_REPORTER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_ARC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_objc.hpp	/^#define TWOBLUECUBES_CATCH_OBJC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTIMIZER_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^#define TWOBLUECUBES_CATCH_OPTIMIZER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_option.hpp	/^#define TWOBLUECUBES_CATCH_OPTION_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OUTLIERS_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^#define TWOBLUECUBES_CATCH_OUTLIERS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_OUTPUT_REDIRECT_H	misc/deps/catch2/include/internal/catch_output_redirect.h	/^#define TWOBLUECUBES_CATCH_OUTPUT_REDIRECT_H$/;"	d
TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED	misc/deps/catch2/include/internal/catch_platform.h	/^#define TWOBLUECUBES_CATCH_PLATFORM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_POLYFILLS_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_polyfills.hpp	/^#define TWOBLUECUBES_CATCH_POLYFILLS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_PREPROCESSOR_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_preprocessor.hpp	/^#define TWOBLUECUBES_CATCH_PREPROCESSOR_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RANDOM_NUMBER_GENERATOR_H_INCLUDED	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^#define TWOBLUECUBES_CATCH_RANDOM_NUMBER_GENERATOR_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED	misc/deps/catch2/include/internal/catch_reenable_warnings.h	/^#define TWOBLUECUBES_CATCH_REENABLE_WARNINGS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_AUTOMAKE_HPP_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_AUTOMAKE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_AUTOMAKE_HPP_INCLUDED	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_AUTOMAKE_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_BASES_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_COMPACT_H_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_compact.h	/^#define TWOBLUECUBES_CATCH_REPORTER_COMPACT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_CONSOLE_H_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_console.h	/^#define TWOBLUECUBES_CATCH_REPORTER_CONSOLE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_JUNIT_H_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^#define TWOBLUECUBES_CATCH_REPORTER_JUNIT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRARS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_REGISTRY_H_INCLUDED	misc/deps/catch2/include/internal/catch_reporter_registry.h	/^#define TWOBLUECUBES_CATCH_REPORTER_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_TAP_HPP_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_TAP_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_TAP_HPP_INCLUDED	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_TAP_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_TEAMCITY_HPP_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_TEAMCITY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_TEAMCITY_HPP_INCLUDED	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^#define TWOBLUECUBES_CATCH_REPORTER_TEAMCITY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_REPORTER_XML_H_INCLUDED	misc/deps/catch2/include/reporters/catch_reporter_xml.h	/^#define TWOBLUECUBES_CATCH_REPORTER_XML_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED	misc/deps/catch2/include/internal/catch_result_type.h	/^#define TWOBLUECUBES_CATCH_RESULT_TYPE_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_session.h	/^#define TWOBLUECUBES_CATCH_RUNNER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_run_context.h	/^#define TWOBLUECUBES_CATCH_RUNNER_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_RUN_FOR_AT_LEAST_HPP_INCLUDED	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^#define TWOBLUECUBES_CATCH_RUN_FOR_AT_LEAST_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_H_INCLUDED	misc/deps/catch2/include/internal/catch_section.h	/^#define TWOBLUECUBES_CATCH_SECTION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED	misc/deps/catch2/include/internal/catch_section_info.h	/^#define TWOBLUECUBES_CATCH_SECTION_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_SINGLETONS_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_singletons.hpp	/^#define TWOBLUECUBES_CATCH_SINGLETONS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STARTUP_EXCEPTION_REGISTRY_H_INCLUDED	misc/deps/catch2/include/internal/catch_startup_exception_registry.h	/^#define TWOBLUECUBES_CATCH_STARTUP_EXCEPTION_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STREAM_H_INCLUDED	misc/deps/catch2/include/internal/catch_stream.h	/^#define TWOBLUECUBES_CATCH_STREAM_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_STRING_MANIP_H_INCLUDED	misc/deps/catch2/include/internal/catch_string_manip.h	/^#define TWOBLUECUBES_CATCH_STRING_MANIP_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_AUTOREGISTRAR_H_INCLUDED	misc/deps/catch2/include/internal/catch_tag_alias_autoregistrar.h	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_AUTOREGISTRAR_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED	misc/deps/catch2/include/internal/catch_tag_alias.h	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED	misc/deps/catch2/include/internal/catch_tag_alias_registry.h	/^#define TWOBLUECUBES_CATCH_TAG_ALIAS_REGISTRY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED	misc/deps/catch2/include/internal/catch_test_case_info.h	/^#define TWOBLUECUBES_CATCH_TEST_CASE_INFO_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^#define TWOBLUECUBES_CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^#define TWOBLUECUBES_CATCH_TEST_CASE_TRACKER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_test_registry.h	/^#define TWOBLUECUBES_CATCH_TEST_REGISTRY_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_test_spec.h	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^#define TWOBLUECUBES_CATCH_TEST_SPEC_PARSER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TEXT_H_INCLUDED	misc/deps/catch2/include/internal/catch_text.h	/^#define TWOBLUECUBES_CATCH_TEXT_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TIMER_H_INCLUDED	misc/deps/catch2/include/internal/catch_timer.h	/^#define TWOBLUECUBES_CATCH_TIMER_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED	misc/deps/catch2/include/internal/catch_tostring.h	/^#define TWOBLUECUBES_CATCH_TOSTRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_totals.h	/^#define TWOBLUECUBES_CATCH_TOTALS_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_TO_STRING_H_INCLUDED	misc/deps/catch2/include/internal/catch_to_string.hpp	/^#define TWOBLUECUBES_CATCH_TO_STRING_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_UNCAUGHT_EXCEPTIONS_H_INCLUDED	misc/deps/catch2/include/internal/catch_uncaught_exceptions.h	/^#define TWOBLUECUBES_CATCH_UNCAUGHT_EXCEPTIONS_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_USER_INTERFACES_H_INCLUDED	misc/deps/catch2/include/internal/catch_user_interfaces.h	/^#define TWOBLUECUBES_CATCH_USER_INTERFACES_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_VERSION_H_INCLUDED	misc/deps/catch2/include/internal/catch_version.h	/^#define TWOBLUECUBES_CATCH_VERSION_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^#define TWOBLUECUBES_CATCH_WILDCARD_PATTERN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WINDOWS_H_PROXY_H_INCLUDED	misc/deps/catch2/include/internal/catch_windows_h_proxy.h	/^#define TWOBLUECUBES_CATCH_WINDOWS_H_PROXY_H_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_WITH_MAIN_HPP_INCLUDED	misc/deps/catch2/include/catch_with_main.hpp	/^#define TWOBLUECUBES_CATCH_WITH_MAIN_HPP_INCLUDED$/;"	d
TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^#define TWOBLUECUBES_CATCH_XMLWRITER_HPP_INCLUDED$/;"	d
TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED	misc/deps/catch2/single_include/catch2/catch.hpp	/^#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED$/;"	d
TWOBLUECUBES_TESTOBJ_H_INCLUDED	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.h	/^#define TWOBLUECUBES_TESTOBJ_H_INCLUDED$/;"	M
TYPE	Makefile	/^TYPE		:= share$/;"	m
TYPE	Makefile	/^TYPE        ?= executable$/;"	m
TYPE	misc/Makefile	/^TYPE		:= static$/;"	m
TYPE	misc/Makefile	/^TYPE        ?= executable$/;"	m
TYPE	misc/deps/ezbuild/Makefile	/^TYPE		:= shared$/;"	m
TYPE	misc/deps/ezbuild/Makefile	/^TYPE        ?= executable$/;"	m
T_LOC1	misc/tests/test.hpp	/^#define T_LOC1(/;"	d
T_LOC2	misc/tests/test.hpp	/^#define T_LOC2(/;"	d
TablePrinter	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    TablePrinter( std::ostream& os, std::vector<ColumnInfo> columnInfos )$/;"	f	class:Catch::TablePrinter	file:
TablePrinter	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^class TablePrinter {$/;"	c	namespace:Catch	file:
Tag	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
Tag aliases	misc/deps/catch2/docs/test-cases-and-sections.md	/^## Tag aliases$/;"	s
TagAlias	misc/deps/catch2/include/internal/catch_tag_alias.cpp	/^    TagAlias::TagAlias(std::string const & _tag, SourceLineInfo _lineInfo): tag(_tag), lineInfo(/;"	f	class:Catch::TagAlias
TagAlias	misc/deps/catch2/include/internal/catch_tag_alias.h	/^    struct TagAlias {$/;"	s	namespace:Catch
TagAliasRegistry	misc/deps/catch2/include/internal/catch_tag_alias_registry.h	/^    class TagAliasRegistry : public ITagAliasRegistry {$/;"	c	namespace:Catch
TagInfo	misc/deps/catch2/include/internal/catch_list.h	/^    struct TagInfo {$/;"	s	namespace:Catch
TagPattern	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    TestSpec::TagPattern::TagPattern( std::string const& tag, std::string const& filterString )$/;"	f	class:Catch::TestSpec::TagPattern
TagPattern	misc/deps/catch2/include/internal/catch_test_spec.h	/^        class TagPattern : public Pattern {$/;"	c	class:Catch::TestSpec
Tags	misc/deps/catch2/docs/test-cases-and-sections.md	/^## Tags$/;"	s
TakeGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        TakeGenerator(size_t target, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::TakeGenerator
TakeGenerator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    class TakeGenerator : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
TeamCity Reporter	misc/deps/catch2/docs/ci-and-misc.md	/^### TeamCity Reporter$/;"	S
TeamCityReporter	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        TeamCityReporter( ReporterConfig const& _config )$/;"	f	struct:Catch::TeamCityReporter
TeamCityReporter	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^    struct TeamCityReporter : StreamingReporterBase<TeamCityReporter> {$/;"	s	namespace:Catch
TeamCityReporter	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        TeamCityReporter( ReporterConfig const& _config )$/;"	f	struct:Catch::TeamCityReporter
TeamCityReporter	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^    struct TeamCityReporter : StreamingReporterBase<TeamCityReporter> {$/;"	s	namespace:Catch
TempFile	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    TempFile::TempFile() {$/;"	f	class:Catch::TempFile
TempFile	misc/deps/catch2/include/internal/catch_output_redirect.h	/^    class TempFile {$/;"	c	namespace:Catch
Template fixtures with types specified in template type lists	misc/deps/catch2/docs/test-fixtures.md	/^## Template fixtures with types specified in template type lists$/;"	s
Template_Fixture	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    Template_Fixture(): m_a(1) {}$/;"	f	struct:__anon27b7d6900110::ClassTests::Template_Fixture	file:
Template_Fixture	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^struct Template_Fixture {$/;"	s	namespace:__anon27b7d6900110::ClassTests	file:
Template_Fixture_2	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    Template_Fixture_2() {}$/;"	f	struct:__anon27b7d6900110::ClassTests::Template_Fixture_2	file:
Template_Fixture_2	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^struct Template_Fixture_2 {$/;"	s	namespace:__anon27b7d6900110::ClassTests	file:
Template_Foo	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^struct Template_Foo {$/;"	s	namespace:__anon27b7d6900110::ClassTests	file:
Template_Foo_2	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^struct Template_Foo_2 {$/;"	s	namespace:__anon27b7d6900110::ClassTests	file:
Terminal colour	misc/deps/catch2/docs/configuration.md	/^## Terminal colour$/;"	s
Test case related macros	misc/deps/catch2/docs/other-macros.md	/^## Test case related macros$/;"	s
Test cases and sections	misc/deps/catch2/docs/test-cases-and-sections.md	/^# Test cases and sections$/;"	c
Test cases and sections	misc/deps/catch2/docs/tutorial.md	/^## Test cases and sections$/;"	s
Test fixtures	misc/deps/catch2/docs/test-fixtures.md	/^# Test fixtures$/;"	c
TestCase	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    TestCase::TestCase( ITestInvoker* testCase, TestCaseInfo&& info ) : TestCaseInfo( std::move(/;"	f	class:Catch::TestCase
TestCase	misc/deps/catch2/include/internal/catch_test_case_info.h	/^    class TestCase : public TestCaseInfo {$/;"	c	namespace:Catch
TestCaseInfo	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    TestCaseInfo::TestCaseInfo( std::string const& _name,$/;"	f	class:Catch::TestCaseInfo
TestCaseInfo	misc/deps/catch2/include/internal/catch_test_case_info.h	/^    struct TestCaseInfo {$/;"	s	namespace:Catch
TestCaseNode	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        using TestCaseNode = Node<TestCaseStats, SectionNode>;$/;"	t	struct:Catch::CumulativeReporterBase	typeref:typename:Node<TestCaseStats,SectionNode>
TestCaseStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    TestCaseStats::TestCaseStats(  TestCaseInfo const& _testInfo,$/;"	f	class:Catch::TestCaseStats
TestCaseStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct TestCaseStats {$/;"	s	namespace:Catch
TestCaseTracking	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^namespace TestCaseTracking {$/;"	n	namespace:Catch	file:
TestCaseTracking	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^namespace TestCaseTracking {$/;"	n	namespace:Catch
TestChronometerModel	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    struct TestChronometerModel : Catch::Benchmark::Detail::ChronometerConcept {$/;"	s	namespace:__anon7f22177c0110	file:
TestClass	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    TestClass()$/;"	f	class:__anon27b7d6900110::ClassTests::TestClass	file:
TestClass	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^class TestClass$/;"	c	namespace:__anon27b7d6900110::ClassTests	file:
TestClass	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct TestClass {$/;"	s	namespace:__anonb1aeb3b90110::CompilationTests	file:
TestData	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^struct TestData {$/;"	s	namespace:__anon8b7f96210110::ConditionTests	file:
TestDef	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^struct TestDef {$/;"	s	namespace:__anon8b7f96210110::ConditionTests	file:
TestEventListenerBase	misc/deps/catch2/include/reporters/catch_reporter_bases.cpp	/^    TestEventListenerBase::TestEventListenerBase(ReporterConfig const & _config)$/;"	f	class:Catch::TestEventListenerBase
TestEventListenerBase	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^    struct TestEventListenerBase : StreamingReporterBase<TestEventListenerBase> {$/;"	s	namespace:Catch
TestFailureException	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFixture	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.h	/^@interface TestFixture : NSObject <OcFixture>$/;"	i	protocols:OcFixture
TestFixture	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^@implementation TestFixture$/;"	I	category:REQUIRE	category:obj	category:obj	category:REQUIRE	category:obj	category:obj	category:CHECK	category:obj	category:obj	category:NSException	category:throw	category:template	category:const	category:const	category:using	category:Equals	category:REQUIRE_THAT	category:Contains	category:REQUIRE_THAT	category:StartsWith	category:REQUIRE_THAT	category:EndsWith	category:OC_TEST_CASE	category:using	category:NSString	category:CHECK_THAT	category:NSString
TestGen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    TestGen(non_copyable const& nc):$/;"	f	class:__anon78e517e00510::TestGen	file:
TestGen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^class TestGen : public Catch::Generators::IGenerator<int> {$/;"	c	namespace:__anon78e517e00510	file:
TestGroup	misc/deps/catch2/include/internal/catch_session.cpp	/^            explicit TestGroup(std::shared_ptr<Config> const& config)$/;"	f	class:Catch::__anon2e423b750110::TestGroup	file:
TestGroup	misc/deps/catch2/include/internal/catch_session.cpp	/^        class TestGroup {$/;"	c	namespace:Catch::__anon2e423b750110	file:
TestGroupNode	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        using TestGroupNode = Node<TestGroupStats, TestCaseNode>;$/;"	t	struct:Catch::CumulativeReporterBase	typeref:typename:Node<TestGroupStats,TestCaseNode>
TestGroupStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    TestGroupStats::TestGroupStats( GroupInfo const& _groupInfo )$/;"	f	class:Catch::TestGroupStats
TestGroupStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    TestGroupStats::TestGroupStats( GroupInfo const& _groupInfo,$/;"	f	class:Catch::TestGroupStats
TestGroupStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct TestGroupStats {$/;"	s	namespace:Catch
TestInvokerAsFunction	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    TestInvokerAsFunction::TestInvokerAsFunction( void(*testAsFunction)() ) noexcept : m_testAsF/;"	f	class:Catch::TestInvokerAsFunction
TestInvokerAsFunction	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^    class TestInvokerAsFunction : public ITestInvoker {$/;"	c	namespace:Catch
TestInvokerAsMethod	misc/deps/catch2/include/internal/catch_test_registry.h	/^    TestInvokerAsMethod( void (C::*testAsMethod)() ) noexcept : m_testAsMethod( testAsMethod ) {/;"	f	class:Catch::TestInvokerAsMethod
TestInvokerAsMethod	misc/deps/catch2/include/internal/catch_test_registry.h	/^class TestInvokerAsMethod : public ITestInvoker {$/;"	c	namespace:Catch
TestInvokerAsMethod	misc/deps/catch2/single_include/catch2/catch.hpp	/^    TestInvokerAsMethod( void (C::*testAsMethod)() ) noexcept : m_testAsMethod( testAsMethod ) {/;"	f	class:Catch::TestInvokerAsMethod
TestInvokerAsMethod	misc/deps/catch2/single_include/catch2/catch.hpp	/^class TestInvokerAsMethod : public ITestInvoker {$/;"	c	namespace:Catch
TestListener	misc/deps/catch2/projects/SelfTest/TestMain.cpp	/^struct TestListener : Catch::TestEventListenerBase {$/;"	s	file:
TestObj	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.h	/^@interface TestObj : NSObject {$/;"	i
TestObj	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.m	/^@implementation TestObj$/;"	I
TestPackageConan	misc/deps/catch2/.conan/test_package/conanfile.py	/^class TestPackageConan(ConanFile):$/;"	c
TestRegistry	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^    class TestRegistry : public ITestCaseRegistry {$/;"	c	namespace:Catch
TestRunInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    TestRunInfo::TestRunInfo( std::string const& _name ) : name( _name ) {}$/;"	f	class:Catch::TestRunInfo
TestRunInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct TestRunInfo {$/;"	s	namespace:Catch
TestRunNode	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        using TestRunNode = Node<TestRunStats, TestGroupNode>;$/;"	t	struct:Catch::CumulativeReporterBase	typeref:typename:Node<TestRunStats,TestGroupNode>
TestRunStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    TestRunStats::TestRunStats(   TestRunInfo const& _runInfo,$/;"	f	class:Catch::TestRunStats
TestRunStats	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^    struct TestRunStats {$/;"	s	namespace:Catch
TestSpec	misc/deps/catch2/include/internal/catch_test_spec.h	/^    class TestSpec {$/;"	c	namespace:Catch
TestSpecParser	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    TestSpecParser::TestSpecParser( ITagAliasRegistry const& tagAliases ) : m_tagAliases( &tagAl/;"	f	class:Catch::TestSpecParser
TestSpecParser	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^    class TestSpecParser {$/;"	c	namespace:Catch
Testing	misc/deps/catch2/docs/release-process.md	/^### Testing$/;"	S
Testing your changes	misc/deps/catch2/docs/contributing.md	/^## Testing your changes$/;"	s
Tests	misc/deps/catch2/include/internal/catch_session.cpp	/^            using Tests = std::set<TestCase const*>;$/;"	t	class:Catch::__anon2e423b750110::TestGroup	typeref:typename:std::set<TestCase const * >	file:
Tests might be run again if last section fails	misc/deps/catch2/docs/limitations.md	/^### Tests might be run again if last section fails$/;"	S
TextFlow	misc/deps/catch2/include/external/clara.hpp	/^namespace TextFlow {$/;"	n	namespace:Catch::clara
TextFlow	misc/deps/catch2/third_party/clara.hpp	/^namespace clara { namespace TextFlow {$/;"	n	namespace:clara
The optimizer	misc/deps/catch2/docs/benchmarks.md	/^### The optimizer$/;"	S
Thread Safety	misc/deps/catch2/docs/assertions.md	/^## Thread Safety$/;"	s
Thread safe assertions	misc/deps/catch2/docs/limitations.md	/^### Thread safe assertions$/;"	S
ThrewException	misc/deps/catch2/include/internal/catch_result_type.h	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	misc/deps/catch2/single_include/catch2/catch.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
Throws	misc/deps/catch2/include/internal/catch_test_case_info.h	/^            Throws = 1 << 4,$/;"	e	enum:Catch::TestCaseInfo::SpecialProperties
TimePoint	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^        using TimePoint = typename Clock::time_point;$/;"	t	namespace:Catch::Benchmark	typeref:typename:Clock::time_point
Timer	misc/deps/catch2/include/internal/catch_timer.h	/^    class Timer {$/;"	c	namespace:Catch
Timing	misc/deps/catch2/include/internal/benchmark/detail/catch_timing.hpp	/^        struct Timing {$/;"	s	namespace:Catch::Benchmark
Timing	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto Timing = Catch::Benchmark::Detail::run_for_at_least<manual_clock>(time, 1, [&old_runs](/;"	v	typeref:typename:auto
Timing	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto Timing = Catch::Benchmark::Detail::run_for_at_least<manual_clock>(time, 1, [&old_x](int/;"	v	typeref:typename:auto
TimingOf	misc/deps/catch2/include/internal/benchmark/detail/catch_timing.hpp	/^        using TimingOf = Timing<ClockDuration<Clock>, Detail::CompleteType_t<Detail::ResultOf_t</;"	t	namespace:Catch::Benchmark	typeref:typename:Timing<ClockDuration<Clock>,Detail::CompleteType_t<Detail::ResultOf_t<Sig>>>
Token	misc/deps/catch2/include/external/clara.hpp	/^    struct Token {$/;"	s	namespace:Catch::clara::detail
Token	misc/deps/catch2/third_party/clara.hpp	/^    struct Token {$/;"	s	namespace:clara::detail
TokenStream	misc/deps/catch2/include/external/clara.hpp	/^        TokenStream( Iterator it, Iterator itEnd ) : it( it ), itEnd( itEnd ) {$/;"	f	class:Catch::clara::detail::TokenStream
TokenStream	misc/deps/catch2/include/external/clara.hpp	/^        explicit TokenStream( Args const &args ) : TokenStream( args.m_args.begin(), args.m_args/;"	f	class:Catch::clara::detail::TokenStream
TokenStream	misc/deps/catch2/include/external/clara.hpp	/^    class TokenStream {$/;"	c	namespace:Catch::clara::detail
TokenStream	misc/deps/catch2/third_party/clara.hpp	/^        TokenStream( Iterator it, Iterator itEnd ) : it( it ), itEnd( itEnd ) {$/;"	f	class:clara::detail::TokenStream
TokenStream	misc/deps/catch2/third_party/clara.hpp	/^        explicit TokenStream( Args const &args ) : TokenStream( args.m_args.begin(), args.m_args/;"	f	class:clara::detail::TokenStream
TokenStream	misc/deps/catch2/third_party/clara.hpp	/^    class TokenStream {$/;"	c	namespace:clara::detail
TokenType	misc/deps/catch2/include/external/clara.hpp	/^    enum class TokenType {$/;"	g	namespace:Catch::clara::detail
TokenType	misc/deps/catch2/third_party/clara.hpp	/^    enum class TokenType {$/;"	g	namespace:clara::detail
Totals	misc/deps/catch2/include/internal/catch_totals.h	/^    struct Totals {$/;"	s	namespace:Catch
TrackerBase	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    TrackerBase::TrackerBase( NameAndLocation const& nameAndLocation, TrackerContext& ctx, ITrac/;"	f	class:Catch::TestCaseTracking::TrackerBase
TrackerBase	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^    class TrackerBase : public ITracker {$/;"	c	namespace:Catch::TestCaseTracking
TrackerContext	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^    class TrackerContext {$/;"	c	namespace:Catch::TestCaseTracking
TupleElementPrinter	misc/deps/catch2/include/internal/catch_tostring.h	/^            struct TupleElementPrinter {$/;"	s	namespace:Catch::Detail
TupleElementPrinter	misc/deps/catch2/include/internal/catch_tostring.h	/^            struct TupleElementPrinter<Tuple, N, false> {$/;"	s	namespace:Catch::Detail
TupleElementPrinter	misc/deps/catch2/single_include/catch2/catch.hpp	/^            struct TupleElementPrinter {$/;"	s	namespace:Catch::Detail
TupleElementPrinter	misc/deps/catch2/single_include/catch2/catch.hpp	/^            struct TupleElementPrinter<Tuple, N, false> {$/;"	s	namespace:Catch::Detail
Tutorial	misc/deps/catch2/docs/tutorial.md	/^# Tutorial$/;"	c
Type	misc/deps/catch2/include/external/clara.hpp	/^        enum Type {$/;"	g	class:Catch::clara::detail::ResultBase
Type	misc/deps/catch2/third_party/clara.hpp	/^        enum Type {$/;"	g	class:clara::detail::ResultBase
Type parametrised test cases	misc/deps/catch2/docs/test-cases-and-sections.md	/^## Type parametrised test cases$/;"	s
Type parametrised test cases	misc/deps/catch2/docs/tutorial.md	/^## Type parametrised test cases$/;"	s
TypeList	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct TypeList {};$/;"	s	namespace:bar	file:
UNSCOPED_INFO	misc/deps/catch2/include/catch.hpp	/^#define UNSCOPED_INFO(/;"	d
UnaryExpr	misc/deps/catch2/include/internal/catch_decomposer.h	/^        explicit UnaryExpr( LhsT lhs )$/;"	f	class:Catch::UnaryExpr
UnaryExpr	misc/deps/catch2/include/internal/catch_decomposer.h	/^    class UnaryExpr : public ITransientExpression {$/;"	c	namespace:Catch
UnaryLambdaTraits	misc/deps/catch2/include/external/clara.hpp	/^    struct UnaryLambdaTraits : UnaryLambdaTraits<decltype( &L::operator() )> {};$/;"	s	namespace:Catch::clara::detail
UnaryLambdaTraits	misc/deps/catch2/include/external/clara.hpp	/^    struct UnaryLambdaTraits<ReturnT( ClassT::* )( ArgT ) const> {$/;"	s	namespace:Catch::clara::detail
UnaryLambdaTraits	misc/deps/catch2/include/external/clara.hpp	/^    struct UnaryLambdaTraits<ReturnT( ClassT::* )( Args... ) const> {$/;"	s	namespace:Catch::clara::detail
UnaryLambdaTraits	misc/deps/catch2/third_party/clara.hpp	/^    struct UnaryLambdaTraits : UnaryLambdaTraits<decltype( &L::operator() )> {};$/;"	s	namespace:clara::detail
UnaryLambdaTraits	misc/deps/catch2/third_party/clara.hpp	/^    struct UnaryLambdaTraits<ReturnT( ClassT::* )( ArgT ) const> {$/;"	s	namespace:clara::detail
UnaryLambdaTraits	misc/deps/catch2/third_party/clara.hpp	/^    struct UnaryLambdaTraits<ReturnT( ClassT::* )( Args... ) const> {$/;"	s	namespace:clara::detail
UnderlyingType	misc/deps/catch2/include/internal/catch_generators.hpp	/^        using UnderlyingType = typename decltype(generatorExpression())::type;$/;"	t	function:Catch::Generators::generate
UniqueTestsFixture	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^    UniqueTestsFixture()$/;"	f	class:UniqueTestsFixture	file:
UniqueTestsFixture	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^class UniqueTestsFixture$/;"	c	file:
Unit	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    enum class Unit {$/;"	g	class:Catch::__anon99a91d3f0110::Duration	file:
Unknown	misc/deps/catch2/include/internal/catch_result_type.h	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	misc/deps/catch2/single_include/catch2/catch.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
UnorderedEquals	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^    Vector::UnorderedEqualsMatcher<T> UnorderedEquals(std::vector<T> const& target) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Vector::UnorderedEqualsMatcher<T>
UnorderedEqualsMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            UnorderedEqualsMatcher(std::vector<T> const& target) : m_target(target) {}$/;"	f	struct:Catch::Matchers::Vector::UnorderedEqualsMatcher
UnorderedEqualsMatcher	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^        struct UnorderedEqualsMatcher : MatcherBase<std::vector<T>> {$/;"	s	namespace:Catch::Matchers::Vector
Unqualified usage of functions from C's stdlib	misc/deps/catch2/docs/contributing.md	/^### Unqualified usage of functions from C's stdlib$/;"	S
Usage	misc/deps/catch2/docs/cmake-integration.md	/^#### Usage$/;"	t
Usage	misc/deps/catch2/docs/command-line.md	/^## Usage$/;"	s
UseColour	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct UseColour { enum YesOrNo {$/;"	s	namespace:Catch
Using different reporters	misc/deps/catch2/docs/reporters.md	/^## Using different reporters$/;"	s
VALIDS	misc/deps/catch2/scripts/updateDocumentToC.py	/^VALIDS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-&'$/;"	v
Value1	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	e	enum:EnumClass3	file:
Value1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	e	enum:EnumClass3	file:
Value2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	e	enum:EnumClass3	file:
Value2	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	e	enum:EnumClass3	file:
Value3	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	e	enum:EnumClass3	file:
Value3	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	e	enum:EnumClass3	file:
Value4	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	e	enum:EnumClass3	file:
Value4	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	e	enum:EnumClass3	file:
Vector	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^    namespace Vector {$/;"	n	namespace:Catch::Matchers
Vector matchers	misc/deps/catch2/docs/matchers.md	/^### Vector matchers$/;"	S
VectorContains	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^    Vector::ContainsElementMatcher<T> VectorContains( T const& comparator ) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Vector::ContainsElementMatcher<T>
Verbosity	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    enum class Verbosity {$/;"	g	namespace:Catch
Version	misc/deps/catch2/include/internal/catch_version.cpp	/^    Version::Version$/;"	f	class:Catch::Version
Version	misc/deps/catch2/include/internal/catch_version.h	/^    struct Version {$/;"	s	namespace:Catch
Version	misc/deps/catch2/scripts/releaseCommon.py	/^class Version:$/;"	c
Version detection	misc/deps/catch2/docs/own-main.md	/^## Version detection$/;"	s
Visual Studio 2015 -- Alignment compilation error (C2718)	misc/deps/catch2/docs/limitations.md	/^### Visual Studio 2015 -- Alignment compilation error (C2718)$/;"	S
Visual Studio 2015 -- Wrong line number reported in debug mode	misc/deps/catch2/docs/limitations.md	/^### Visual Studio 2015 -- Wrong line number reported in debug mode$/;"	S
Visual Studio 2017 -- raw string literal in assert fails to compile	misc/deps/catch2/docs/limitations.md	/^### Visual Studio 2017 -- raw string literal in assert fails to compile$/;"	S
WARN	misc/deps/catch2/include/catch.hpp	/^#define WARN(/;"	d
WHEN	misc/deps/catch2/include/catch.hpp	/^#define WHEN(/;"	d
WIN32_LEAN_AND_MEAN	misc/deps/catch2/include/internal/catch_windows_h_proxy.h	/^#  define WIN32_LEAN_AND_MEAN$/;"	d
Wait for key before continuing	misc/deps/catch2/docs/command-line.md	/^## Wait for key before continuing$/;"	s
WaitForKeypress	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct WaitForKeypress { enum When {$/;"	s	namespace:Catch
WarnAbout	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct WarnAbout { enum What {$/;"	s	namespace:Catch
Warning	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Warning = BrightYellow,$/;"	e	enum:Catch::Colour::Code
Warning	misc/deps/catch2/include/internal/catch_result_type.h	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	misc/deps/catch2/single_include/catch2/catch.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warnings	misc/deps/catch2/docs/command-line.md	/^## Warnings$/;"	s
What	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct WarnAbout { enum What {$/;"	g	struct:Catch::WarnAbout
What did we do here?	misc/deps/catch2/docs/tutorial.md	/^### What did we do here?$/;"	S
What's the Catch?	misc/deps/catch2/README.md	/^## What's the Catch?$/;"	s
WhatException	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^struct WhatException : std::exception {$/;"	s	namespace:__anon7572b8720110	file:
When	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct WaitForKeypress { enum When {$/;"	g	struct:Catch::WaitForKeypress
Where to put it?	misc/deps/catch2/docs/tutorial.md	/^## Where to put it?$/;"	s
White	misc/deps/catch2/include/internal/catch_console_colour.h	/^            White,$/;"	e	enum:Catch::Colour::Code
Who else is using Catch?	misc/deps/catch2/docs/why-catch.md	/^## Who else is using Catch?$/;"	s
Why do my tests take so long to compile?	misc/deps/catch2/docs/slow-compiles.md	/^# Why do my tests take so long to compile?$/;"	c
Why do we need yet another C++ test framework?	misc/deps/catch2/docs/why-catch.md	/^# Why do we need yet another C++ test framework?$/;"	c
WildcardAtBothEnds	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^            WildcardAtBothEnds = WildcardAtStart | WildcardAtEnd$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardAtEnd	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^            WildcardAtEnd = 2,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardAtStart	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^            WildcardAtStart = 1,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardPattern	misc/deps/catch2/include/internal/catch_wildcard_pattern.cpp	/^    WildcardPattern::WildcardPattern( std::string const& pattern,$/;"	f	class:Catch::WildcardPattern
WildcardPattern	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^    class WildcardPattern {$/;"	c	namespace:Catch
WildcardPosition	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^        enum WildcardPosition {$/;"	g	class:Catch::WildcardPattern
Win32ColourImpl	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        Win32ColourImpl() : stdoutHandle( GetStdHandle(STD_OUTPUT_HANDLE) )$/;"	f	class:Catch::__anonabe5bc570210::Win32ColourImpl	file:
Win32ColourImpl	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    class Win32ColourImpl : public IColourImpl {$/;"	c	namespace:Catch::__anonabe5bc570210	file:
Windows header clutter	misc/deps/catch2/docs/configuration.md	/^## Windows header clutter$/;"	s
WindowsHeader	misc/deps/catch2/projects/ExtraTests/CMakeLists.txt	/^    add_executable(WindowsHeader ${TESTS_DIR}\/X90-WindowsHeaderInclusion.cpp)$/;"	t
WithinAbs	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^Floating::WithinAbsMatcher WithinAbs(double target, double margin) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Floating::WithinAbsMatcher
WithinAbsMatcher	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    WithinAbsMatcher::WithinAbsMatcher(double target, double margin)$/;"	f	class:Catch::Matchers::Floating::WithinAbsMatcher
WithinAbsMatcher	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^        struct WithinAbsMatcher : MatcherBase<double> {$/;"	s	namespace:Catch::Matchers::Floating
WithinRel	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^Floating::WithinRelMatcher WithinRel(double target) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Floating::WithinRelMatcher
WithinRel	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^Floating::WithinRelMatcher WithinRel(double target, double eps) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Floating::WithinRelMatcher
WithinRel	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^Floating::WithinRelMatcher WithinRel(float target) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Floating::WithinRelMatcher
WithinRel	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^Floating::WithinRelMatcher WithinRel(float target, float eps) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Floating::WithinRelMatcher
WithinRelMatcher	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    WithinRelMatcher::WithinRelMatcher(double target, double epsilon):$/;"	f	class:Catch::Matchers::Floating::WithinRelMatcher
WithinRelMatcher	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^        struct WithinRelMatcher : MatcherBase<double> {$/;"	s	namespace:Catch::Matchers::Floating
WithinULP	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^Floating::WithinUlpsMatcher WithinULP(double target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Floating::WithinUlpsMatcher
WithinULP	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^Floating::WithinUlpsMatcher WithinULP(float target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers	typeref:typename:Floating::WithinUlpsMatcher
WithinUlpsMatcher	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    WithinUlpsMatcher::WithinUlpsMatcher(double target, uint64_t ulps, FloatingPointKind baseTyp/;"	f	class:Catch::Matchers::Floating::WithinUlpsMatcher
WithinUlpsMatcher	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^        struct WithinUlpsMatcher : MatcherBase<double> {$/;"	s	namespace:Catch::Matchers::Floating
Writing tests	misc/deps/catch2/docs/tutorial.md	/^## Writing tests$/;"	s
Writing your own reporter	misc/deps/catch2/docs/reporters.md	/^## Writing your own reporter$/;"	s
X	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        X() : a(4), b(2), c(7) {}$/;"	f	struct:A::X	file:
X	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        X(int v) : a(v), b(2), c(7) {}$/;"	f	struct:A::X	file:
X	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    struct X$/;"	s	namespace:A	file:
XML Reporter	misc/deps/catch2/docs/ci-and-misc.md	/^### XML Reporter$/;"	S
XmlEncode	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlEncode::XmlEncode( std::string const& str, ForWhat forWhat )$/;"	f	class:Catch::XmlEncode
XmlEncode	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^    class XmlEncode {$/;"	c	namespace:Catch
XmlReporter	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    XmlReporter::XmlReporter( ReporterConfig const& _config )$/;"	f	class:Catch::XmlReporter
XmlReporter	misc/deps/catch2/include/reporters/catch_reporter_xml.h	/^    class XmlReporter : public StreamingReporterBase<XmlReporter> {$/;"	c	namespace:Catch
XmlWriter	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter::XmlWriter( std::ostream& os ) : m_os( os )$/;"	f	class:Catch::XmlWriter
XmlWriter	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^    class XmlWriter {$/;"	c	namespace:Catch
Y	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        struct Y {$/;"	s	namespace:__anonb1aeb3b90110::CompilationTests	file:
Y	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct Y {$/;"	s	namespace:__anonb1aeb3b90110::CompilationTests	file:
Y	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        Y() : a(4), b(2), c(7) {}$/;"	f	struct:B::Y	file:
Y	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        Y(int v) : a(v), b(2), c(7) {}$/;"	f	struct:B::Y	file:
Y	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    struct Y$/;"	s	namespace:B	file:
Yellow	misc/deps/catch2/include/internal/catch_console_colour.h	/^            Yellow,$/;"	e	enum:Catch::Colour::Code
Yes	misc/deps/catch2/include/internal/catch_common.h	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
Yes	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^        Yes,$/;"	e	enum:Catch::UseColour::YesOrNo
Yes	misc/deps/catch2/single_include/catch2/catch.hpp	/^        Yes,$/;"	e	enum:Catch::CaseSensitive::Choice
YesOrNo	misc/deps/catch2/include/internal/catch_interfaces_config.h	/^    struct UseColour { enum YesOrNo {$/;"	g	struct:Catch::UseColour
[ApprovalTests.cpp](https://github.com/approvals/ApprovalTests.cpp)	misc/deps/catch2/docs/opensource-users.md	/^### [ApprovalTests.cpp](https:\/\/github.com\/approvals\/ApprovalTests.cpp)$/;"	S
[ArangoDB](https://github.com/arangodb/arangodb)	misc/deps/catch2/docs/opensource-users.md	/^### [ArangoDB](https:\/\/github.com\/arangodb\/arangodb)$/;"	S
[Azmq](https://github.com/zeromq/azmq)	misc/deps/catch2/docs/opensource-users.md	/^### [Azmq](https:\/\/github.com\/zeromq\/azmq)$/;"	S
[Cataclysm: Dark Days Ahead](https://github.com/CleverRaven/Cataclysm-DDA)	misc/deps/catch2/docs/opensource-users.md	/^### [Cataclysm: Dark Days Ahead](https:\/\/github.com\/CleverRaven\/Cataclysm-DDA)$/;"	S
[ChaiScript](https://github.com/ChaiScript/ChaiScript)	misc/deps/catch2/docs/opensource-users.md	/^### [ChaiScript](https:\/\/github.com\/ChaiScript\/ChaiScript)$/;"	S
[ChakraCore](https://github.com/Microsoft/ChakraCore)	misc/deps/catch2/docs/opensource-users.md	/^### [ChakraCore](https:\/\/github.com\/Microsoft\/ChakraCore)$/;"	S
[Clara](https://github.com/philsquared/Clara)	misc/deps/catch2/docs/opensource-users.md	/^### [Clara](https:\/\/github.com\/philsquared\/Clara)$/;"	S
[Couchbase-lite-core](https://github.com/couchbase/couchbase-lite-core)	misc/deps/catch2/docs/opensource-users.md	/^### [Couchbase-lite-core](https:\/\/github.com\/couchbase\/couchbase-lite-core)$/;"	S
[DtCraft](https://github.com/twhuang-uiuc/DtCraft)	misc/deps/catch2/docs/opensource-users.md	/^### [DtCraft](https:\/\/github.com\/twhuang-uiuc\/DtCraft)$/;"	S
[Fuxedo](https://github.com/fuxedo/fuxedo)	misc/deps/catch2/docs/opensource-users.md	/^### [Fuxedo](https:\/\/github.com\/fuxedo\/fuxedo)$/;"	S
[Giada - Your Hardcore Loop Machine](https://github.com/monocasual/giada)	misc/deps/catch2/docs/opensource-users.md	/^### [Giada - Your Hardcore Loop Machine](https:\/\/github.com\/monocasual\/giada)$/;"	S
[Inja](https://github.com/pantor/inja)	misc/deps/catch2/docs/opensource-users.md	/^### [Inja](https:\/\/github.com\/pantor\/inja)$/;"	S
[MAME](https://github.com/mamedev/mame)	misc/deps/catch2/docs/opensource-users.md	/^### [MAME](https:\/\/github.com\/mamedev\/mame)$/;"	S
[MNMLSTC Core](https://github.com/mnmlstc/core)	misc/deps/catch2/docs/opensource-users.md	/^### [MNMLSTC Core](https:\/\/github.com\/mnmlstc\/core)$/;"	S
[Newsbeuter](https://github.com/akrennmair/newsbeuter)	misc/deps/catch2/docs/opensource-users.md	/^### [Newsbeuter](https:\/\/github.com\/akrennmair\/newsbeuter)$/;"	S
[Nonius](https://github.com/libnonius/nonius)	misc/deps/catch2/docs/opensource-users.md	/^### [Nonius](https:\/\/github.com\/libnonius\/nonius)$/;"	S
[PopHead](https://github.com/SPC-Some-Polish-Coders/PopHead)	misc/deps/catch2/docs/opensource-users.md	/^### [PopHead](https:\/\/github.com\/SPC-Some-Polish-Coders\/PopHead)$/;"	S
[Ppconsul](https://github.com/oliora/ppconsul)	misc/deps/catch2/docs/opensource-users.md	/^### [Ppconsul](https:\/\/github.com\/oliora\/ppconsul)$/;"	S
[Reactive-Extensions/ RxCpp](https://github.com/Reactive-Extensions/RxCpp)	misc/deps/catch2/docs/opensource-users.md	/^### [Reactive-Extensions\/ RxCpp](https:\/\/github.com\/Reactive-Extensions\/RxCpp)$/;"	S
[SOCI](https://github.com/SOCI/soci)	misc/deps/catch2/docs/opensource-users.md	/^### [SOCI](https:\/\/github.com\/SOCI\/soci)$/;"	S
[SpECTRE](https://github.com/sxs-collaboration/spectre)	misc/deps/catch2/docs/opensource-users.md	/^### [SpECTRE](https:\/\/github.com\/sxs-collaboration\/spectre)$/;"	S
[Standardese](https://github.com/foonathan/standardese)	misc/deps/catch2/docs/opensource-users.md	/^### [Standardese](https:\/\/github.com\/foonathan\/standardese)$/;"	S
[TextFlowCpp](https://github.com/philsquared/textflowcpp)	misc/deps/catch2/docs/opensource-users.md	/^### [TextFlowCpp](https:\/\/github.com\/philsquared\/textflowcpp)$/;"	S
[Trompeloeil](https://github.com/rollbear/trompeloeil)	misc/deps/catch2/docs/opensource-users.md	/^### [Trompeloeil](https:\/\/github.com\/rollbear\/trompeloeil)$/;"	S
[args](https://github.com/Taywee/args)	misc/deps/catch2/docs/opensource-users.md	/^### [args](https:\/\/github.com\/Taywee\/args)$/;"	S
[cppcodec](https://github.com/tplgy/cppcodec)	misc/deps/catch2/docs/opensource-users.md	/^### [cppcodec](https:\/\/github.com\/tplgy\/cppcodec)$/;"	S
[forest](https://github.com/xorz57/forest)	misc/deps/catch2/docs/opensource-users.md	/^### [forest](https:\/\/github.com\/xorz57\/forest)$/;"	S
[libcluon](https://github.com/chrberger/libcluon)	misc/deps/catch2/docs/opensource-users.md	/^### [libcluon](https:\/\/github.com\/chrberger\/libcluon)$/;"	S
[nanodbc](https://github.com/lexicalunit/nanodbc/)	misc/deps/catch2/docs/opensource-users.md	/^### [nanodbc](https:\/\/github.com\/lexicalunit\/nanodbc\/)$/;"	S
[polymorphic_value](https://github.com/jbcoe/polymorphic_value)	misc/deps/catch2/docs/opensource-users.md	/^### [polymorphic_value](https:\/\/github.com\/jbcoe\/polymorphic_value)$/;"	S
[raspigcd](https://github.com/pantadeusz/raspigcd)	misc/deps/catch2/docs/opensource-users.md	/^### [raspigcd](https:\/\/github.com\/pantadeusz\/raspigcd)$/;"	S
[thor](https://github.com/xorz57/thor)	misc/deps/catch2/docs/opensource-users.md	/^### [thor](https:\/\/github.com\/xorz57\/thor)$/;"	S
_	misc/deps/catch2/include/internal/catch_tostring.cpp	/^                union _{$/;"	u	function:Catch::Detail::__anon55f5ca2b0110::Endianness::which	file:
_BSD_SOURCE	misc/deps/catch2/include/internal/catch_compiler_capabilities.h	/^#   define _BSD_SOURCE$/;"	d
_BSD_SOURCE	misc/deps/catch2/single_include/catch2/catch.hpp	/^#   define _BSD_SOURCE$/;"	d
_CATCH_DISCOVER_TESTS_SCRIPT	misc/deps/catch2/contrib/Catch.cmake	/^set(_CATCH_DISCOVER_TESTS_SCRIPT$/;"	v
_TEST_LIST	misc/deps/catch2/contrib/Catch.cmake	/^    set(_TEST_LIST ${TARGET}_TESTS)$/;"	v	function:catch_discover_tests
_WORKING_DIRECTORY	misc/deps/catch2/contrib/Catch.cmake	/^    set(_WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")$/;"	v	function:catch_discover_tests
__anon012cead60102	misc/deps/catch2/examples/311-Gen-CustomCapture.cpp	/^        [&r1, r2]{$/;"	f	file:
__anon05c37cec0102	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^            std::transform(samples.begin(), samples.end(), std::back_inserter(samples2), [](Dura/;"	f	function:Catch::BenchmarkStats::operator BenchmarkStats<Duration2>	file:
__anon05e611b50102	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^                std::transform(samples.begin(), samples.end(), std::back_inserter(samples2), [](/;"	f	function:Catch::Benchmark::SampleAnalysis::operator SampleAnalysis<Duration2>	file:
__anon0cb4e5740110	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^namespace { namespace ApproxTests {$/;"	n	file:
__anon0e9c6c4c0102	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^    auto num = GENERATE(map<int>([](std::string const& line) { return std::stoi(line); },$/;"	f	file:
__anon11f5cd580102	misc/deps/catch2/include/internal/catch_commandline.cpp	/^        auto const setWarning = [&]( std::string const& warning ) {$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580202	misc/deps/catch2/include/internal/catch_commandline.cpp	/^                auto warningSet = [&]() {$/;"	f	function:Catch::makeCommandLineParser::__anon11f5cd580102	file:
__anon11f5cd580302	misc/deps/catch2/include/internal/catch_commandline.cpp	/^        auto const loadTestNamesFromFile = [&]( std::string const& filename ) {$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580402	misc/deps/catch2/include/internal/catch_commandline.cpp	/^        auto const setTestOrder = [&]( std::string const& order ) {$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580502	misc/deps/catch2/include/internal/catch_commandline.cpp	/^        auto const setRngSeed = [&]( std::string const& seed ) {$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580602	misc/deps/catch2/include/internal/catch_commandline.cpp	/^        auto const setColourUsage = [&]( std::string const& useColour ) {$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580702	misc/deps/catch2/include/internal/catch_commandline.cpp	/^        auto const setWaitForKeypress = [&]( std::string const& keypress ) {$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580802	misc/deps/catch2/include/internal/catch_commandline.cpp	/^        auto const setVerbosity = [&]( std::string const& verbosity ) {$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580902	misc/deps/catch2/include/internal/catch_commandline.cpp	/^        auto const setReporter = [&]( std::string const& reporter ) {$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580a02	misc/deps/catch2/include/internal/catch_commandline.cpp	/^            | Opt( [&]( bool ){ config.abortAfter = 1; } )$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580b02	misc/deps/catch2/include/internal/catch_commandline.cpp	/^            | Opt( [&]( int x ){ config.abortAfter = x; }, "no. failures" )$/;"	f	function:Catch::makeCommandLineParser	file:
__anon11f5cd580c02	misc/deps/catch2/include/internal/catch_commandline.cpp	/^            | Opt( [&]( bool flag ) { config.showDurations = flag ? ShowDurations::Always : Show/;"	f	function:Catch::makeCommandLineParser	file:
__anon12195f9c0110	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__anon12195f9c0202	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^        const auto is_ws = [](char c) {$/;"	f	function:Catch::trim	file:
__anon12350c3a0102	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/Details.tests.cpp	/^    REQUIRE_THROWS_AS([](){CATCH_ENFORCE(false, "");}(), std::domain_error);$/;"	f	file:
__anon12350c3a0202	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/Details.tests.cpp	/^    REQUIRE_NOTHROW([](){CATCH_ENFORCE(true, "");}());$/;"	f	file:
__anon16c8dcf30110	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^namespace {$/;"	n	file:
__anon16c8dcf30210	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^namespace {$/;"	n	namespace:Catch	file:
__anon1a231c31010a	misc/deps/catch2/third_party/clara.hpp	/^        union {$/;"	u	class:clara::detail::ResultValueBase
__anon1a231c310202	misc/deps/catch2/third_party/clara.hpp	/^        std::transform( srcLC.begin(), srcLC.end(), srcLC.begin(), []( char c ) { return static_/;"	f	function:clara::detail::convertInto	file:
__anon1a231c310302	misc/deps/catch2/third_party/clara.hpp	/^        :   Opt([&]( bool flag ) {$/;"	f	struct:clara::detail::Help	file:
__anon24bf8fff0110	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^namespace {$/;"	n	namespace:Catch	file:
__anon279582000110	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^namespace {$/;"	n	namespace:Catch	file:
__anon27b7d6900110	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^namespace{ namespace ClassTests {$/;"	n	file:
__anon2a286c900202	misc/deps/catch2/include/internal/catch_tostring.h	/^                    [](const auto& value) {$/;"	f	namespace:Catch	file:
__anon2e423b750110	misc/deps/catch2/include/internal/catch_session.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__anon3685c6240102	misc/deps/catch2/misc/coverage-helper.cpp	/^    auto cmdline = std::accumulate(++sep, end(args), std::string{}, [] (const std::string& lhs, /;"	f	function:main	file:
__anon396b06170102	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^            [&nameAndLocation]( ITrackerPtr const& tracker ){$/;"	f	function:Catch::TestCaseTracking::TrackerBase::findChild	file:
__anon396b06170202	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^                if( std::all_of(m_children.begin(), m_children.end(), [](ITrackerPtr const& t){ /;"	f	function:Catch::TestCaseTracking::TrackerBase::close	file:
__anon3ab11d7b0110	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^namespace {$/;"	n	namespace:Catch	file:
__anon3ab11d7b0210	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^namespace {$/;"	n	namespace:Catch	file:
__anon48b134320110	misc/deps/catch2/include/internal/catch_timer.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__anon538088c40110	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^namespace { namespace BDDTests {$/;"	n	file:
__anon538088c40210	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^    namespace {$/;"	n	namespace:__anon538088c40110::BDDTests	file:
__anon539cc7770110	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__anon55f5ca2b0110	misc/deps/catch2/include/internal/catch_tostring.cpp	/^    namespace {$/;"	n	namespace:Catch::Detail	file:
__anon596f4b7b0102	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^        return std::all_of( m_patterns.begin(), m_patterns.end(), [&]( PatternPtr const& p ){ re/;"	f	function:Catch::TestSpec::Filter::matches	file:
__anon596f4b7b0202	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^        return std::any_of( m_filters.begin(), m_filters.end(), [&]( Filter const& f ){ return f/;"	f	function:Catch::TestSpec::matches	file:
__anon596f4b7b0302	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^        std::transform( m_filters.begin(), m_filters.end(), matches.begin(), [&]( Filter const& /;"	f	function:Catch::TestSpec::matchesByFilter	file:
__anon5eacb9590102	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^                    [](TimePoint<Clock> a, TimePoint<Clock> b) { return static_cast<double>((a -/;"	f	function:Catch::Benchmark::Detail::resolution	file:
__anon5eacb9590202	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^                auto time_clock = [](int k) {$/;"	f	function:Catch::Benchmark::Detail::estimate_clock_cost	file:
__anon5eacb9590302	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^                    return Detail::measure<Clock>([k] {$/;"	f	function:Catch::Benchmark::Detail::estimate_clock_cost::__anon5eacb9590202	file:
__anon5eacb9590402	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^                std::generate_n(std::back_inserter(times), nsamples, [time_clock, &r] {$/;"	f	function:Catch::Benchmark::Detail::estimate_clock_cost	file:
__anon6315dc160102	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^                measure([&fun](int) { return fun(); }, std::true_type());$/;"	f	function:Catch::Benchmark::Chronometer::measure	file:
__anon72db525f0102	misc/deps/catch2/include/internal/benchmark/detail/catch_analyse.hpp	/^                    std::transform(first, last, std::back_inserter(samples), [](Duration d) { re/;"	f	function:Catch::Benchmark::Detail::analyse	file:
__anon72db525f0202	misc/deps/catch2/include/internal/benchmark/detail/catch_analyse.hpp	/^                    auto wrap_estimate = [](Estimate<double> e) {$/;"	f	function:Catch::Benchmark::Detail::analyse	file:
__anon72db525f0302	misc/deps/catch2/include/internal/benchmark/detail/catch_analyse.hpp	/^                    std::transform(samples.begin(), samples.end(), std::back_inserter(samples2),/;"	f	function:Catch::Benchmark::Detail::analyse	file:
__anon7572b8720110	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^namespace {$/;"	n	file:
__anon761396770110	misc/deps/catch2/include/internal/catch_singletons.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__anon78e517e00102	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = filter([] (int i) { return i != 2; }, values({ 2, 1, 2, 3, 2, 2 }));$/;"	f	file:
__anon78e517e00202	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        REQUIRE_THROWS_AS(filter([] (int) { return false; }, value(1)), Catch::GeneratorExceptio/;"	f	file:
__anon78e517e00302	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = map<double>([] (int i) {return 2.0 * i; }, values({ 1, 2, 3 }));$/;"	f	file:
__anon78e517e00402	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = map([] (int i) {return 2.0 * i; }, values({ 1, 2, 3 }));$/;"	f	file:
__anon78e517e00510	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^namespace {$/;"	n	file:
__anon7a5c27c10102	misc/deps/catch2/projects/ExtraTests/X03-DisabledExceptions-DefaultHandler.cpp	/^    std::set_terminate([](){exit(1);});$/;"	f	file:
__anon7f22177c0110	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^namespace {$/;"	n	file:
__anon7f22177c0203	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        enum { is_steady = true };$/;"	g	struct:__anon7f22177c0110::manual_clock	file:
__anon7f22177c0303	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        enum { is_steady = true };$/;"	g	struct:__anon7f22177c0110::counting_clock	file:
__anon7f22177c0402	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        auto fn = Catch::Benchmark::Detail::BenchmarkFunction{ [&] {$/;"	f	file:
__anon7f22177c0502	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        auto fn = Catch::Benchmark::Detail::BenchmarkFunction{ [&](Catch::Benchmark::Chronometer/;"	f	file:
__anon7f22177c0602	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto e = Catch::Benchmark::Detail::bootstrap(0.95, samples.begin(), samples.end(), samples, /;"	f	file:
__anon7f22177c0702	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto require_outliers = [](Catch::Benchmark::OutlierClassification o, int los, int lom, int /;"	f	file:
__anon7f22177c0802	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto Timing = Catch::Benchmark::Detail::run_for_at_least<manual_clock>(time, 1, [&old_x](int/;"	f	typeref:typename:int	file:
__anon7f22177c0902	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto Timing = Catch::Benchmark::Detail::run_for_at_least<manual_clock>(time, 1, [&old_runs](/;"	f	typeref:typename:int	file:
__anon7f22177c0a02	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        meter.measure([] {$/;"	f	function:__anon7f22177c0902	file:
__anon7f22177c0b02	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto r = Catch::Benchmark::Detail::measure<manual_clock>([](int x) -> int {$/;"	f	typeref:typename:int	file:
__anon7f22177c0c02	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto s = Catch::Benchmark::Detail::measure<manual_clock>([](int x) -> int {$/;"	f	typeref:typename:int	file:
__anon7f22177c0d02	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    Catch::Benchmark::Benchmark bench{ "Test Benchmark", [](Catch::Benchmark::Chronometer meter)/;"	f	file:
__anon7f22177c0e02	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        meter.measure([] { return counting_clock::now(); });$/;"	f	function:__anon7f22177c0d02	file:
__anon7fbdb41f0110	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^namespace {$/;"	n	file:
__anon7fc805e90110	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^namespace { namespace ExceptionTests {$/;"	n	file:
__anon8b7f96210110	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^namespace { namespace ConditionTests {$/;"	n	file:
__anon8bbeb4870110	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^namespace {$/;"	n	file:
__anon92f7f4560102	misc/deps/catch2/include/internal/catch_message.cpp	/^        auto trimmed = [&] (size_t start, size_t end) {$/;"	f	function:Catch::Capturer::Capturer	file:
__anon92f7f4560202	misc/deps/catch2/include/internal/catch_message.cpp	/^        auto skipq = [&] (size_t start, char quote) {$/;"	f	function:Catch::Capturer::Capturer	file:
__anon93dc02b70110	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^namespace {$/;"	n	file:
__anon96897c110110	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^namespace { namespace MatchersTests {$/;"	n	file:
__anon96897c110202	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                                 [] (std::string const& str) -> bool { return str.front() == str/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:bool	file:
__anon96897c110302	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                                 [] (std::string const& str) -> bool { return str.front() == str/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:bool	file:
__anon96897c110402	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^            REQUIRE_THAT("foo", Predicate<const char*>([] (const char* const&) { return true; })/;"	f	namespace:__anon96897c110110::MatchersTests	file:
__anon99a91d3f0110	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^namespace {$/;"	n	namespace:Catch	file:
__anon99a91d3f0202	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^        [&config]() -> std::vector<ColumnInfo> {$/;"	f	namespace:Catch	typeref:typename:std::vector<ColumnInfo>	file:
__anon9ddbf74d0110	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^        namespace {$/;"	n	namespace:Catch::Detail	file:
__anonabe5bc570110	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__anonabe5bc570210	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^namespace {$/;"	n	namespace:Catch	file:
__anonabe5bc570310	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^namespace {$/;"	n	namespace:Catch	file:
__anonac4822fc0110	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^namespace {$/;"	n	file:
__anonac4822fc0202	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^        double variance = std::accumulate(first, last, 0., [m](double a, double b) {$/;"	f	function:__anonac4822fc0110::standard_deviation	file:
__anonac4822fc0302	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^                auto c_max = [n, mn, sb2, sg2](double x) -> double {$/;"	f	function:Catch::Benchmark::Detail::outlier_variance	typeref:typename:double	file:
__anonac4822fc0402	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^                auto var_out = [n, sb2, sg2](double c) {$/;"	f	function:Catch::Benchmark::Detail::outlier_variance	file:
__anonac4822fc0502	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^                auto Estimate = [=](double(*f)(std::vector<double>::iterator, std::vector<double/;"	f	function:Catch::Benchmark::Detail::analyse_samples	file:
__anonac4822fc0602	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^                    return std::async(std::launch::async, [=] {$/;"	f	function:Catch::Benchmark::Detail::analyse_samples::__anonac4822fc0502	file:
__anonac4822fc0702	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^                auto Estimate = [=](double(*f)(std::vector<double>::iterator, std::vector<double/;"	f	function:Catch::Benchmark::Detail::analyse_samples	file:
__anonac4838410102	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                std::generate_n(std::back_inserter(out), resamples, [n, first, &estimator, &dist/;"	f	function:Catch::Benchmark::Detail::resample	file:
__anonac4838410202	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                    std::generate_n(std::back_inserter(resampled), n, [first, &dist, &rng] { ret/;"	f	function:Catch::Benchmark::Detail::resample::__anonac4838410102	file:
__anonac4838410302	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                std::tie(sum_squares, sum_cubes) = std::accumulate(jack.begin(), jack.end(), std/;"	f	function:Catch::Benchmark::Detail::bootstrap	typeref:typename:std::pair<double,double>	file:
__anonac4838410402	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                double prob_n = std::count_if(resample.begin(), resample.end(), [point](double x/;"	f	function:Catch::Benchmark::Detail::bootstrap	file:
__anonac4838410502	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                auto cumn = [n](double x) -> int {$/;"	f	function:Catch::Benchmark::Detail::bootstrap	typeref:typename:int	file:
__anonac4838410602	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                auto a = [bias, accel](double b) { return bias + b \/ (1. - accel * b); };$/;"	f	function:Catch::Benchmark::Detail::bootstrap	file:
__anonb1aeb3b90110	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^namespace { namespace CompilationTests {$/;"	n	file:
__anonb771ae700110	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace {$/;"	n	file:
__anonbdc2eeb10102	misc/deps/catch2/projects/ExtraTests/X01-PrefixedMacros.cpp	/^    CATCH_REQUIRE_THROWS_MATCHES(this_throws(), std::runtime_error, Predicate<std::runtime_error/;"	f	file:
__anonbdc2eeb10202	misc/deps/catch2/projects/ExtraTests/X01-PrefixedMacros.cpp	/^    CATCH_CHECK_THROWS_MATCHES(this_throws(), std::runtime_error, Predicate<std::runtime_error>(/;"	f	file:
__anonc1e781690110	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^namespace {$/;"	n	file:
__anonc1e781690210	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^namespace {$/;"	n	file:
__anonc7555fe50110	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^namespace {$/;"	n	file:
__anonc7555fe50202	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^                meter.measure([&](int idx) {$/;"	f	file:
__anonc9236c2e0102	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^                std::generate_n(std::back_inserter(times), cfg.benchmarkSamples(), [this, env] {$/;"	f	function:Catch::Benchmark::ExecutionPlan::run	file:
__anond61e3add0110	misc/deps/catch2/include/internal/catch_stream.cpp	/^    namespace Detail { namespace {$/;"	n	namespace:Catch::Detail	file:
__anondaa5e4680110	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__anondc31b3f00202	misc/deps/catch2/single_include/catch2/catch.hpp	/^                    [](const auto& value) {$/;"	f	namespace:Catch	file:
__anone7dbb1860110	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^namespace { namespace MiscTests {$/;"	n	file:
__anone7f3037b0102	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^                    auto plan = user_code([&] {$/;"	f	function:Catch::Benchmark::Benchmark::run	file:
__anone7f3037b0202	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^                    auto samples = user_code([&] {$/;"	f	function:Catch::Benchmark::Benchmark::run	file:
__anoneac8fe840110	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^namespace {$/;"	n	file:
__anoneac8fe840202	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^                meter.measure([&](int idx) {$/;"	f	file:
__anoneadae3b60110	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__anoneadae3b60202	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^                                   [] (std::string const& tag) {return tag.front() == '#'; });$/;"	f	function:Catch::__anoneadae3b60110::fileNameTag	file:
__anoned0ef4eb0110	misc/deps/catch2/include/internal/catch_approx.cpp	/^namespace {$/;"	n	file:
__anonee6a7c340102	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto i = GENERATE(filter([] (int val) { return val % 2 == 0; }, values({ 1, 2, 3, 4,/;"	f	file:
__anonee6a7c340202	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            REQUIRE_THROWS_AS(filter([] (int) {return false; }, value(1)), Catch::GeneratorExcep/;"	f	file:
__anonee6a7c340302	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto i = GENERATE(map([] (int val) { return val * 2; }, values({ 1, 2, 3 })));$/;"	f	file:
__anonee6a7c340402	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto i = GENERATE(map<std::string>([] (int val) { return std::to_string(val); }, val/;"	f	file:
__anonee6a7c340502	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto i = GENERATE(map([] (int val) { return std::to_string(val); }, values({ 1, 2, 3/;"	f	file:
__anonee6a7c340610	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^namespace {$/;"	n	file:
__anonf1cbda5d010a	misc/deps/catch2/include/external/clara.hpp	/^        union {$/;"	u	class:Catch::clara::detail::ResultValueBase
__anonf1cbda5d0202	misc/deps/catch2/include/external/clara.hpp	/^        std::transform( srcLC.begin(), srcLC.end(), srcLC.begin(), []( char c ) { return static_/;"	f	function:Catch::clara::detail::convertInto	file:
__anonf1cbda5d0302	misc/deps/catch2/include/external/clara.hpp	/^        :   Opt([&]( bool flag ) {$/;"	f	struct:Catch::clara::detail::Help	file:
__anonf21a15d70110	misc/deps/catch2/projects/SelfTest/UsageTests/Decomposition.tests.cpp	/^namespace {$/;"	n	file:
__anonfad788a70110	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^namespace {$/;"	n	file:
__anonfad788a70210	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^namespace {$/;"	n	file:
__anonfad788a70310	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^namespace {$/;"	n	file:
__anonfea7b9670110	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    namespace {$/;"	n	namespace:Catch	file:
__init__	misc/deps/catch2/scripts/embed.py	/^    def __init__( self, idMap, outerNamespace ):$/;"	m	class:LineMapper
__init__	misc/deps/catch2/scripts/releaseCommon.py	/^    def __init__(self):$/;"	m	class:Version
_args	misc/deps/catch2/contrib/CatchAddTests.cmake	/^      set(_args "${_args} ${_arg}")$/;"	v	function:add_command
_args	misc/deps/catch2/contrib/CatchAddTests.cmake	/^      set(_args "${_args} [==[${_arg}]==]") # form a bracket_argument$/;"	v	function:add_command
_args	misc/deps/catch2/contrib/CatchAddTests.cmake	/^  set(_args "")$/;"	v	function:add_command
_branch	misc/deps/catch2/.conan/build.py	/^    def _branch(self):$/;"	m	class:BuilderSettings
_version	misc/deps/catch2/.conan/build.py	/^    def _version(self):$/;"	m	class:BuilderSettings
`--list-*` return values	misc/deps/catch2/docs/deprecations.md	/^### `--list-*` return values$/;"	S
`--list-test-names-only`	misc/deps/catch2/docs/deprecations.md	/^### `--list-test-names-only`$/;"	S
`ANON_TEST_CASE`	misc/deps/catch2/docs/deprecations.md	/^### `ANON_TEST_CASE`$/;"	S
`CATCH_CONFIG_DISABLE_MATCHERS`	misc/deps/catch2/docs/configuration.md	/^### `CATCH_CONFIG_DISABLE_MATCHERS`$/;"	S
`CATCH_CONFIG_DISABLE_STRINGIFICATION`	misc/deps/catch2/docs/configuration.md	/^### `CATCH_CONFIG_DISABLE_STRINGIFICATION`$/;"	S
`CATCH_CONFIG_DISABLE`	misc/deps/catch2/docs/configuration.md	/^### `CATCH_CONFIG_DISABLE`$/;"	S
`CATCH_CONFIG_FAST_COMPILE`	misc/deps/catch2/docs/configuration.md	/^### `CATCH_CONFIG_FAST_COMPILE`$/;"	S
`CHECKED_IF` and `CHECKED_ELSE`	misc/deps/catch2/docs/deprecations.md	/^### `CHECKED_IF` and `CHECKED_ELSE`$/;"	S
`Catch.cmake` and `CatchAddTests.cmake`	misc/deps/catch2/docs/cmake-integration.md	/^### `Catch.cmake` and `CatchAddTests.cmake`$/;"	S
`ParseAndAddCatchTests.cmake`	misc/deps/catch2/docs/cmake-integration.md	/^### `ParseAndAddCatchTests.cmake`$/;"	S
```	misc/deps/catch2/docs/benchmarks.md	/^```$/;"	s
a	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    int a = 1;$/;"	v	typeref:typename:int
a	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    int a = 2;$/;"	v	typeref:typename:int
a	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    int a = 1;$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:int
a	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        int a;$/;"	m	struct:A::X	typeref:typename:int	file:
a	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        int a;$/;"	m	struct:B::Y	typeref:typename:int	file:
a	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    fooptr_t a = foo;$/;"	v	typeref:typename:fooptr_t
a	misc/tests/ft_string/strchr.cpp	/^	char a[128];$/;"	v	typeref:typename:char[128]
abccd	misc/tests/ft_string/strrchr.cpp	/^  	char abccd[] = "abccd";$/;"	v	typeref:typename:char[]
abcde	misc/tests/ft_string/strrchr.cpp	/^	char abcde[] = "abcde";$/;"	v	typeref:typename:char[]
abortAfter	misc/deps/catch2/include/internal/catch_config.cpp	/^    int Config::abortAfter() const                     { return m_data.abortAfter; }$/;"	f	class:Catch::Config	typeref:typename:int
abortAfter	misc/deps/catch2/include/internal/catch_config.hpp	/^        int abortAfter = -1;$/;"	m	struct:Catch::ConfigData	typeref:typename:int
aborting	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        bool aborting;$/;"	m	struct:Catch::TestCaseStats	typeref:typename:bool
aborting	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        bool aborting;$/;"	m	struct:Catch::TestGroupStats	typeref:typename:bool
aborting	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        bool aborting;$/;"	m	struct:Catch::TestRunStats	typeref:typename:bool
aborting	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    bool RunContext::aborting() const {$/;"	f	class:Catch::RunContext	typeref:typename:bool
acquire	misc/deps/catch2/include/internal/catch_run_context.cpp	/^            static GeneratorTracker& acquire( TrackerContext& ctx, TestCaseTracking::NameAndLoca/;"	f	struct:Catch::Generators::GeneratorTracker	typeref:typename:GeneratorTracker &	file:
acquire	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    SectionTracker& SectionTracker::acquire( TrackerContext& ctx, NameAndLocation const& nameAnd/;"	f	class:Catch::TestCaseTracking::SectionTracker	typeref:typename:SectionTracker &
acquireGeneratorTracker	misc/deps/catch2/include/internal/catch_generators.cpp	/^    auto acquireGeneratorTracker( SourceLineInfo const& lineInfo ) -> IGeneratorTracker& {$/;"	f	namespace:Catch::Generators	typeref:typename:IGeneratorTracker &
acquireGeneratorTracker	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    auto RunContext::acquireGeneratorTracker( SourceLineInfo const& lineInfo ) -> IGeneratorTrac/;"	f	class:Catch::RunContext	typeref:typename:IGeneratorTracker &
actual	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^            std::vector<char> actual = { 'a', 'b' };$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<char>
add	misc/deps/catch2/include/internal/catch_list.cpp	/^    void TagInfo::add( std::string const& spelling ) {$/;"	f	class:Catch::TagInfo	typeref:typename:void
add	misc/deps/catch2/include/internal/catch_startup_exception_registry.cpp	/^void StartupExceptionRegistry::add( std::exception_ptr const& exception ) noexcept {$/;"	f	class:Catch::StartupExceptionRegistry	typeref:typename:void
add	misc/deps/catch2/include/internal/catch_stream.cpp	/^        auto add() -> std::size_t {$/;"	f	struct:Catch::StringStreams	typeref:typename:std::size_t	file:
add	misc/deps/catch2/include/internal/catch_tag_alias_registry.cpp	/^    void TagAliasRegistry::add( std::string const& alias, std::string const& tag, SourceLineInfo/;"	f	class:Catch::TagAliasRegistry	typeref:typename:void
add	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^            uint64_t add = 0;$/;"	v	typeref:typename:uint64_t
add	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^            uint64_t add = 0;$/;"	v	typeref:typename:uint64_t
addCharToPattern	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        inline void addCharToPattern(char c) {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
addChild	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::addChild( ITrackerPtr const& child ) {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:void
addFilter	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::addFilter() {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
addIndentAndSuffix	misc/deps/catch2/include/external/clara.hpp	/^		auto addIndentAndSuffix(std::string const &plain) const -> std::string {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:std::string
addIndentAndSuffix	misc/deps/catch2/third_party/clara.hpp	/^            auto addIndentAndSuffix(std::string const &plain) const -> std::string {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:std::string
addInitialFilters	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void SectionTracker::addInitialFilters( std::vector<std::string> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker	typeref:typename:void
addListener	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::addListener( IStreamingReporterPtr&& listener ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
addNextFilters	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void SectionTracker::addNextFilters( std::vector<std::string> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker	typeref:typename:void
addPattern	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        void addPattern() {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
addReporter	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::addReporter(IStreamingReporterPtr&& reporter) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
addRow	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    SummaryColumn addRow( std::size_t count ) {$/;"	f	struct:Catch::SummaryColumn	typeref:typename:SummaryColumn	file:
addSingleton	misc/deps/catch2/include/internal/catch_singletons.cpp	/^    void addSingleton(ISingleton* singleton ) {$/;"	f	namespace:Catch	typeref:typename:void
add_command	misc/deps/catch2/contrib/CatchAddTests.cmake	/^function(add_command NAME)$/;"	f
add_coverage	misc/deps/catch2/CMake/Findcodecov.cmake	/^function (add_coverage TNAME)$/;"	f
add_coverage_target	misc/deps/catch2/CMake/Findcodecov.cmake	/^function(add_coverage_target TNAME)$/;"	f
add_gcov_target	misc/deps/catch2/CMake/FindGcov.cmake	/^function (add_gcov_target TNAME)$/;"	f
add_lcov_target	misc/deps/catch2/CMake/FindLcov.cmake	/^function (add_lcov_target TNAME)$/;"	f
adjustString	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        std::string CasedString::adjustString( std::string const& str ) const {$/;"	f	class:Catch::Matchers::StdString::CasedString	typeref:typename:std::string
advance	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static void advance(int ticks = 1) {$/;"	f	struct:__anon7f22177c0110::manual_clock	typeref:typename:void	file:
aligncpy	misc/tests/ft_string/strchr.cpp	/^static void *aligncpy(void *p, size_t len, size_t a)$/;"	f	typeref:typename:void *	file:
aligned	misc/tests/ft_memory/memcpy.cpp	/^static void     *aligned(void *p) {$/;"	f	typeref:typename:void *	file:
aligned	misc/tests/ft_memory/memset.cpp	/^static char *aligned(void *p)$/;"	f	typeref:typename:char *	file:
aligned	misc/tests/ft_string/strchr.cpp	/^static void *aligned(void *p)$/;"	f	typeref:typename:void *	file:
all	Makefile	/^all:                        $(NAME)$/;"	t
all	misc/Makefile	/^all:                        $(NAME)$/;"	t
all	misc/deps/catch2/include/internal/catch_list.cpp	/^    std::string TagInfo::all() const {$/;"	f	class:Catch::TagInfo	typeref:typename:std::string
all	misc/deps/ezbuild/Makefile	/^all:                        $(NAME)$/;"	t
allOk	misc/deps/catch2/include/internal/catch_totals.cpp	/^    bool Counts::allOk() const {$/;"	f	class:Catch::Counts	typeref:typename:bool
allPassed	misc/deps/catch2/include/internal/catch_totals.cpp	/^    bool Counts::allPassed() const {$/;"	f	class:Catch::Counts	typeref:typename:bool
allocate	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        T *allocate( size_type n ) {$/;"	f	struct:__anon8bbeb4870110::minimal_allocator	typeref:typename:T *	file:
allowThrows	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    auto AssertionHandler::allowThrows() const -> bool {$/;"	f	class:Catch::AssertionHandler	typeref:typename:bool
allowThrows	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::allowThrows() const                   { return !m_data.noThrow; }$/;"	f	class:Catch::Config	typeref:typename:bool
almostEqualUlps	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    bool almostEqualUlps(FP lhs, FP rhs, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::__anon3ab11d7b0110	typeref:typename:bool
altStackMem	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    char FatalConditionHandler::altStackMem[sigStackSize] = {};$/;"	m	class:Catch::FatalConditionHandler	typeref:typename:char[]
altStackMem	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^        static char altStackMem[];$/;"	m	struct:Catch::FatalConditionHandler	typeref:typename:char[]
alwaysFalse	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    inline bool alwaysFalse(int) { return false; }$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:bool
alwaysTrue	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    inline bool alwaysTrue(int) { return true; }$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:bool
always_false	misc/deps/catch2/include/internal/catch_meta.hpp	/^struct always_false : std::false_type {};$/;"	s	namespace:Catch
always_false	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct always_false : std::false_type {};$/;"	s	namespace:Catch
analyse	misc/deps/catch2/include/internal/benchmark/detail/catch_analyse.hpp	/^            SampleAnalysis<Duration> analyse(const IConfig &cfg, Environment<Duration>, Iterator/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:SampleAnalysis<Duration>
analyse_samples	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^            bootstrap_analysis analyse_samples(double confidence_level, int n_resamples, std::ve/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:bootstrap_analysis
analysis	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto analysis = Catch::Benchmark::Detail::analyse(config, env, samples.begin(), samples.end(/;"	v	typeref:typename:auto
answer	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^    int answer = 42;$/;"	v	namespace:__anon7fc805e90110::ExceptionTests	typeref:typename:int
applyCommandLine	misc/deps/catch2/include/internal/catch_session.cpp	/^    int Session::applyCommandLine( int argc, char const * const * argv ) {$/;"	f	class:Catch::Session	typeref:typename:int
applyCommandLine	misc/deps/catch2/include/internal/catch_session.cpp	/^    int Session::applyCommandLine( int argc, wchar_t const * const * argv ) {$/;"	f	class:Catch::Session	typeref:typename:int
applyFilenamesAsTags	misc/deps/catch2/include/internal/catch_session.cpp	/^        void applyFilenamesAsTags(Catch::IConfig const& config) {$/;"	f	namespace:Catch::__anon2e423b750110	typeref:typename:void
approve	misc/deps/catch2/scripts/approvalTests.py	/^def approve(baseName, args):$/;"	f
approveFile	misc/deps/catch2/scripts/approve.py	/^def approveFile( approvedFile, unapprovedFile ):$/;"	f
approx	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            mutable Catch::Detail::Approx approx = Catch::Detail::Approx::custom();$/;"	m	struct:Catch::Matchers::Vector::ApproxMatcher	typeref:typename:Catch::Detail::Approx
approx	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^    Approx approx = Approx::custom().epsilon( 0.01 );$/;"	v	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:Approx
arcSafeRelease	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f	typeref:typename:void
arcSafeRelease	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f	typeref:typename:void
arcSafeRelease	misc/deps/catch2/single_include/catch2/catch.hpp	/^inline void arcSafeRelease( NSObject* ){}$/;"	f	typeref:typename:void
arcSafeRelease	misc/deps/catch2/single_include/catch2/catch.hpp	/^inline void arcSafeRelease( NSObject* obj ) {$/;"	f	typeref:typename:void
args	misc/deps/catch2/scripts/benchmarkCompile.py	/^args = parser.parse_args()$/;"	v
arr	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        int arr[3] = { 3, 2, 1 };$/;"	v	typeref:typename:int[3]
arr	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        std::vector<std::string> arr[2] = { {"1:1", "1:2", "1:3"}, {"2:1", "2:2"} };$/;"	v	typeref:typename:std::vector<std::string>[2]
arr	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^    std::string_view arr[] { view };$/;"	v	typeref:typename:std::string_view[]
array	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^        int array[size];$/;"	v	typeref:typename:int[]
array	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^        int array[size];$/;"	v	typeref:typename:int[]
as	misc/deps/catch2/include/internal/catch_generators.hpp	/^    struct as {};$/;"	s	namespace:Catch::Generators
asChar	misc/deps/catch2/include/internal/catch_tostring.cpp	/^                    char asChar[sizeof (int)];$/;"	m	union:Catch::Detail::__anon55f5ca2b0110::Endianness::which::_	typeref:typename:char[]	file:
asInt	misc/deps/catch2/include/internal/catch_tostring.cpp	/^                    int asInt;$/;"	m	union:Catch::Detail::__anon55f5ca2b0110::Endianness::which::_	typeref:typename:int	file:
assertionEnded	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    bool assertionEnded( Catch::AssertionStats const& assertionStats ) override {$/;"	f	struct:MyListener	typeref:typename:bool	file:
assertionEnded	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::assertionEnded(AssertionResult const & result) {$/;"	f	class:Catch::RunContext	typeref:typename:void
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^        bool assertionEnded( AssertionStats const& \/*_assertionStats*\/ ) override { return tru/;"	f	struct:Catch::AutomakeReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.cpp	/^    bool TestEventListenerBase::assertionEnded(AssertionStats const &) {$/;"	f	class:Catch::TestEventListenerBase	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        bool assertionEnded(AssertionStats const& assertionStats) override {$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^        bool CompactReporter::assertionEnded( AssertionStats const& _assertionStats ) {$/;"	f	class:Catch::CompactReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^bool ConsoleReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    bool JunitReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    bool ListeningReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        bool assertionEnded( AssertionStats const& _assertionStats ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        bool assertionEnded( AssertionStats const& assertionStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    bool XmlReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^        bool assertionEnded( AssertionStats const& \/*_assertionStats*\/ ) override { return tru/;"	f	struct:Catch::AutomakeReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        bool assertionEnded( AssertionStats const& _assertionStats ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:bool
assertionEnded	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        bool assertionEnded( AssertionStats const& assertionStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:bool
assertionPassed	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::assertionPassed() {$/;"	f	class:Catch::RunContext	typeref:typename:void
assertionResult	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        AssertionResult assertionResult;$/;"	m	struct:Catch::AssertionStats	typeref:typename:AssertionResult
assertionStarting	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    void assertionStarting( Catch::AssertionInfo const& assertionInfo ) override {$/;"	f	struct:MyListener	typeref:typename:void	file:
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.cpp	/^    void TestEventListenerBase::assertionStarting(AssertionInfo const &) {}$/;"	f	class:Catch::TestEventListenerBase	typeref:typename:void
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void assertionStarting(AssertionInfo const&) override {}$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::assertionStarting( AssertionInfo const& ) {}$/;"	f	class:Catch::CompactReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::assertionStarting(AssertionInfo const&) {}$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::assertionStarting( AssertionInfo const& assertionInfo ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::assertionStarting( AssertionInfo const& ) { }$/;"	f	class:Catch::XmlReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
assertionStarting	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void assertionStarting( AssertionInfo const& ) override {}$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
assertions	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        Counts assertions;$/;"	m	struct:Catch::SectionStats	typeref:typename:Counts
assertions	misc/deps/catch2/include/internal/catch_totals.h	/^        Counts assertions;$/;"	m	struct:Catch::Totals	typeref:typename:Counts
assertions	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            Assertions assertions;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:Assertions
assertions_per_section	misc/deps/catch2/scripts/benchmarkCompile.py	/^assertions_per_section = 5$/;"	v
async	misc/deps/ezbuild/async.sh	/^function async() {$/;"	f
asyncWatchFolders	misc/deps/ezbuild/async_watcher.sh	/^function asyncWatchFolders()$/;"	f
atto_second	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    std::chrono::duration<int64_t, std::ratio<1, 1000000000000000000>> atto_second(1);$/;"	v	typeref:typename:std::chrono::duration<int64_t,std::ratio<1,1000000000000000000>>
autoTestReg	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^static AutoTestReg autoTestReg;$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS AutoTestReg	file:
await	misc/deps/ezbuild/async.sh	/^function await() {$/;"	f
awaitAll	misc/deps/ezbuild/async.sh	/^function awaitAll() {$/;"	f
awkward	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    Awkward awkward;$/;"	v	typeref:typename:Awkward
b	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    int b = 2;$/;"	v	typeref:typename:int
b	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    for( int b = 0; b < 10; ++b ) {$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:int
b	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    int b = 2;$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:int
b	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        int b;$/;"	m	struct:A::X	typeref:typename:int	file:
b	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        int b;$/;"	m	struct:B::Y	typeref:typename:int	file:
b	misc/tests/ft_string/strcpy.cpp	/^    char    b[32];$/;"	v	typeref:typename:char[32]
b	misc/tests/ft_string/strlcat.cpp	/^    char b[32];$/;"	v	typeref:typename:char[32]
b	misc/tests/ft_string/strlcpy.cpp	/^    char b[32];$/;"	v	typeref:typename:char[32]
bar	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^namespace bar {$/;"	n	file:
base_cmd	misc/deps/catch2/misc/appveyorMergeCoverageScript.py	/^    base_cmd = ['OpenCppCoverage', '--quiet', '--export_type=cobertura:cobertura.xml'] + ['--inp/;"	v
begin	misc/deps/catch2/include/external/clara.hpp	/^	auto begin() const -> iterator { return iterator(*this); }$/;"	f	class:Catch::clara::TextFlow::Column	typeref:typename:iterator
begin	misc/deps/catch2/include/external/clara.hpp	/^	auto begin() const -> iterator { return iterator(*this); }$/;"	f	class:Catch::clara::TextFlow::Columns	typeref:typename:iterator
begin	misc/deps/catch2/include/internal/catch_stringref.h	/^        constexpr const_iterator begin() const { return m_start; }$/;"	f	class:Catch::StringRef	typeref:typename:const_iterator
begin	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator begin() const { return int_iterator{ 1 }; }$/;"	f	struct:__anonfad788a70210::streamable_range	typeref:typename:int_iterator	file:
begin	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator begin() const { return int_iterator{ 1 }; }$/;"	f	struct:__anonfad788a70210::stringmaker_range	typeref:typename:int_iterator	file:
begin	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator begin() const { return int_iterator{ 1 }; }$/;"	f	struct:__anonfad788a70310::disabled_range	typeref:typename:int_iterator	file:
begin	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator begin() const { return int_iterator{ 1 }; }$/;"	f	struct:__anonfad788a70310::just_range	typeref:typename:int_iterator	file:
begin	misc/deps/catch2/single_include/catch2/catch.hpp	/^        const_iterator begin() const { return m_start; }$/;"	f	class:Catch::StringRef	typeref:typename:const_iterator
begin	misc/deps/catch2/third_party/clara.hpp	/^        auto begin() const -> iterator { return iterator( *this ); }$/;"	f	class:clara::TextFlow::Column	typeref:typename:iterator
begin	misc/deps/catch2/third_party/clara.hpp	/^        auto begin() const -> iterator { return iterator( *this ); }$/;"	f	class:clara::TextFlow::Columns	typeref:typename:iterator
bench	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    Catch::Benchmark::Benchmark bench{ "Test Benchmark", [](Catch::Benchmark::Chronometer meter)/;"	v	typeref:typename:Catch::Benchmark::Benchmark
benchmark	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^            Detail::BenchmarkFunction benchmark;$/;"	m	struct:Catch::Benchmark::ExecutionPlan	typeref:typename:Detail::BenchmarkFunction
benchmark	misc/deps/catch2/scripts/benchmarkCompile.py	/^def benchmark(func):$/;"	f
benchmarkConfidenceInterval	misc/deps/catch2/include/internal/catch_config.cpp	/^    double Config::benchmarkConfidenceInterval() const { return m_data.benchmarkConfidenceInterv/;"	f	class:Catch::Config	typeref:typename:double
benchmarkConfidenceInterval	misc/deps/catch2/include/internal/catch_config.hpp	/^        double benchmarkConfidenceInterval = 0.95;$/;"	m	struct:Catch::ConfigData	typeref:typename:double
benchmarkEnded	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        virtual void benchmarkEnded( BenchmarkStats<> const& ) {}$/;"	f	struct:Catch::IStreamingReporter	typeref:typename:void
benchmarkEnded	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::benchmarkEnded( BenchmarkStats<> const& stats ) {$/;"	f	class:Catch::RunContext	typeref:typename:void
benchmarkEnded	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkEnded(BenchmarkStats<> const& stats) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
benchmarkEnded	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
benchmarkEnded	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkEnded(BenchmarkStats<> const& benchmarkStats) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
benchmarkErrorMsg	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            const std::string benchmarkErrorMsg = "a benchmark failed to run successfully";$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const std::string
benchmarkFailed	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        virtual void benchmarkFailed( std::string const& ) {}$/;"	f	struct:Catch::IStreamingReporter	typeref:typename:void
benchmarkFailed	misc/deps/catch2/include/internal/catch_run_context.cpp	/^	void RunContext::benchmarkFailed(std::string const & error) {$/;"	f	class:Catch::RunContext	typeref:typename:void
benchmarkFailed	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkFailed(std::string const& error) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
benchmarkFailed	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^	void ListeningReporter::benchmarkFailed( std::string const& error ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
benchmarkFailed	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkFailed(std::string const &error) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
benchmarkNoAnalysis	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::benchmarkNoAnalysis() const           { return m_data.benchmarkNoAnalysis; }$/;"	f	class:Catch::Config	typeref:typename:bool
benchmarkNoAnalysis	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool benchmarkNoAnalysis = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
benchmarkPreparing	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        virtual void benchmarkPreparing( std::string const& ) {}$/;"	f	struct:Catch::IStreamingReporter	typeref:typename:void
benchmarkPreparing	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::RunContext	typeref:typename:void
benchmarkPreparing	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
benchmarkPreparing	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::benchmarkPreparing( std::string const& name ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
benchmarkPreparing	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
benchmarkResamples	misc/deps/catch2/include/internal/catch_config.cpp	/^    unsigned int Config::benchmarkResamples() const    { return m_data.benchmarkResamples; }$/;"	f	class:Catch::Config	typeref:typename:unsigned int
benchmarkResamples	misc/deps/catch2/include/internal/catch_config.hpp	/^        unsigned int benchmarkResamples = 100000;$/;"	m	struct:Catch::ConfigData	typeref:typename:unsigned int
benchmarkSamples	misc/deps/catch2/include/internal/catch_config.cpp	/^    int Config::benchmarkSamples() const               { return m_data.benchmarkSamples; }$/;"	f	class:Catch::Config	typeref:typename:int
benchmarkSamples	misc/deps/catch2/include/internal/catch_config.hpp	/^        unsigned int benchmarkSamples = 100;$/;"	m	struct:Catch::ConfigData	typeref:typename:unsigned int
benchmarkStarting	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        virtual void benchmarkStarting( BenchmarkInfo const& ) {}$/;"	f	struct:Catch::IStreamingReporter	typeref:typename:void
benchmarkStarting	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::benchmarkStarting( BenchmarkInfo const& info ) {$/;"	f	class:Catch::RunContext	typeref:typename:void
benchmarkStarting	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkStarting(BenchmarkInfo const& info) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
benchmarkStarting	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::benchmarkStarting( BenchmarkInfo const& benchmarkInfo ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
benchmarkStarting	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkStarting(BenchmarkInfo const &info) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
bit0	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        bit0 = 0x0001,$/;"	e	enum:EnumBitFieldTests::Bits	file:
bit1	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        bit1 = 0x0002,$/;"	e	enum:EnumBitFieldTests::Bits	file:
bit1and2	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        bit1and2 = bit1 | bit2,$/;"	e	enum:EnumBitFieldTests::Bits	file:
bit2	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        bit2 = 0x0004,$/;"	e	enum:EnumBitFieldTests::Bits	file:
bit3	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        bit3 = 0x0008,$/;"	e	enum:EnumBitFieldTests::Bits	file:
bit30	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        bit30 = 0x40000000,$/;"	e	enum:EnumBitFieldTests::Bits	file:
bit30and31	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        bit30and31 = bit30 | bit31$/;"	e	enum:EnumBitFieldTests::Bits	file:
bit31	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        bit31 = 0x80000000,$/;"	e	enum:EnumBitFieldTests::Bits	file:
bonus	Makefile	/^bonus:	$(COBJ) $(BONUSOBJ)$/;"	t
bools	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    std::vector<bool> bools;$/;"	v	typeref:typename:std::vector<bool>
bootstrap	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^            Estimate<double> bootstrap(double confidence_level, Iterator first, Iterator last, s/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:Estimate<double>
bootstrap_analysis	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^            struct bootstrap_analysis {$/;"	s	namespace:Catch::Benchmark::Detail
bothOrAll	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    std::string bothOrAll( std::size_t count ) {$/;"	f	namespace:__anon16c8dcf30110	typeref:typename:std::string
branchName	misc/deps/catch2/include/internal/catch_version.h	/^        char const * const branchName;$/;"	m	struct:Catch::Version	typeref:typename:char const * const
buf	misc/tests/ft_memory/bzero.cpp	/^static char buf[N];$/;"	v	typeref:typename:char[]	file:
buf	misc/tests/ft_memory/memcpy.cpp	/^static char     buf[512];$/;"	v	typeref:typename:char[512]	file:
buf	misc/tests/ft_memory/memset.cpp	/^static char buf[N];$/;"	v	typeref:typename:char[]	file:
buf	misc/tests/ft_string/strchr.cpp	/^static char buf[512];$/;"	v	typeref:typename:char[512]	file:
buf2	misc/tests/ft_memory/memset.cpp	/^static char buf2[N];$/;"	v	typeref:typename:char[]	file:
buffer1	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        char buffer1[] = "Hello";$/;"	v	typeref:typename:char[]
buffer2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        char buffer2[] = "Hello";$/;"	v	typeref:typename:char[]
build	misc/deps/catch2/.conan/test_package/conanfile.py	/^    def build(self):$/;"	m	class:TestPackageConan
buildMarkdown	misc/deps/catch2/scripts/updateDocumentToC.py	/^def buildMarkdown(toc_headlines, body, spacer=0, placeholder=None):$/;"	f
buildNumber	misc/deps/catch2/include/internal/catch_version.h	/^        unsigned int const buildNumber;$/;"	m	struct:Catch::Version	typeref:typename:unsigned int const
builder	misc/deps/catch2/.conan/build.py	/^    builder = ConanMultiPackager($/;"	v
bytes	misc/deps/catch2/include/internal/catch_tostring.h	/^            auto bytes = System::Text::Encoding::UTF8->GetBytes(ref->ToString());$/;"	v	namespace:Catch::Detail	typeref:typename:auto
bytes	misc/deps/catch2/single_include/catch2/catch.hpp	/^            auto bytes = System::Text::Encoding::UTF8->GetBytes(ref->ToString());$/;"	v	namespace:Catch::Detail	typeref:typename:auto
c	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    char c = 5;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:char
c	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    int c = 3;$/;"	v	typeref:typename:int
c	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^            char c = chars[i];$/;"	v	typeref:typename:char
c	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^            char c = static_cast<char>(i);$/;"	v	typeref:typename:char
c	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        int c;$/;"	m	struct:A::X	typeref:typename:int	file:
c	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        int c;$/;"	m	struct:B::Y	typeref:typename:int	file:
c_str	misc/deps/catch2/include/internal/catch_stringref.cpp	/^    auto StringRef::c_str() const -> char const* {$/;"	f	class:Catch::StringRef	typeref:typename:char const *
calcLength	misc/deps/catch2/include/external/clara.hpp	/^		void calcLength() {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:void
calcLength	misc/deps/catch2/third_party/clara.hpp	/^            void calcLength() {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:void
call	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                    void call(Chronometer meter) const override {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model	typeref:typename:void
call	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                    void call(Chronometer meter, std::false_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model	typeref:typename:void
call	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                    void call(Chronometer meter, std::true_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model	typeref:typename:void
call_count	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    size_t call_count = 0;$/;"	v	namespace:__anonee6a7c340610	typeref:typename:size_t
callable	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                struct callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
called	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        auto called = 0;$/;"	v	typeref:typename:auto
captureValue	misc/deps/catch2/include/internal/catch_message.cpp	/^    void Capturer::captureValue( size_t index, std::string const& value ) {$/;"	f	class:Catch::Capturer	typeref:typename:void
captureValues	misc/deps/catch2/include/internal/catch_message.h	/^        void captureValues( size_t index, T const& value ) {$/;"	f	class:Catch::Capturer	typeref:typename:void
captureValues	misc/deps/catch2/include/internal/catch_message.h	/^        void captureValues( size_t index, T const& value, Ts const&... values ) {$/;"	f	class:Catch::Capturer	typeref:typename:void
capturedExpression	misc/deps/catch2/include/internal/catch_assertioninfo.h	/^        StringRef capturedExpression;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:StringRef
capturedExpression	misc/deps/catch2/single_include/catch2/catch.hpp	/^        StringRef capturedExpression;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:StringRef
cardinality	misc/deps/catch2/include/external/clara.hpp	/^        auto cardinality() const -> size_t override {$/;"	f	class:Catch::clara::detail::ParserRefImpl	typeref:typename:size_t override
cardinality	misc/deps/catch2/include/external/clara.hpp	/^        virtual auto cardinality() const -> size_t { return 1; }$/;"	f	class:Catch::clara::detail::ParserBase	typeref:typename:size_t
cardinality	misc/deps/catch2/third_party/clara.hpp	/^        auto cardinality() const -> size_t override {$/;"	f	class:clara::detail::ParserRefImpl	typeref:typename:size_t override
cardinality	misc/deps/catch2/third_party/clara.hpp	/^        virtual auto cardinality() const -> size_t { return 1; }$/;"	f	class:clara::detail::ParserBase	typeref:typename:size_t
carr_return	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        char carr_return = '\\r';$/;"	v	typeref:typename:char
caseSensitivitySuffix	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        std::string CasedString::caseSensitivitySuffix() const {$/;"	f	class:Catch::Matchers::StdString::CasedString	typeref:typename:std::string
catchPath	misc/deps/catch2/scripts/scriptCommon.py	/^catchPath = os.path.dirname(os.path.realpath( os.path.dirname(sys.argv[0])))$/;"	v
catch_discover_tests	misc/deps/catch2/contrib/Catch.cmake	/^function(catch_discover_tests TARGET)$/;"	f
catch_path	misc/deps/catch2/misc/coverage-helper.cpp	/^std::string catch_path(std::string path) {$/;"	f	typeref:typename:std::string
catch_path	misc/deps/catch2/scripts/benchmarkCompile.py	/^catch_path = args.catch_header$/;"	v
cerr	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^    std::ostream& cerr() {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
cerr	misc/deps/catch2/include/internal/catch_stream.cpp	/^    std::ostream& cerr() { return std::cerr; }$/;"	f	namespace:Catch	typeref:typename:std::ostream &
changedFiles	misc/deps/catch2/scripts/fixWhitespace.py	/^changedFiles = fixAllFilesInDir(catchPath)$/;"	v
channel	misc/deps/catch2/.conan/build.py	/^    def channel(self):$/;"	m	class:BuilderSettings
char_range	misc/deps/catch2/scripts/benchmarkCompile.py	/^def char_range(start, end):$/;"	f
chars	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        char chars[] = {'a', 'z', 'A', 'Z'};$/;"	v	typeref:typename:char[]
checks	misc/deps/catch2/scripts/benchmarkCompile.py	/^checks = [$/;"	v
childSections	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            ChildSections childSections;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:ChildSections
children	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            ChildNodes children;$/;"	m	struct:Catch::CumulativeReporterBase::Node	typeref:typename:ChildNodes
chunk	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    GeneratorWrapper<std::vector<T>> chunk(size_t size, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<std::vector<T>>
chunk2	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto chunk2 = GENERATE(chunk(2, values({ 1, 1, 2, 2, 3 })));$/;"	v	typeref:typename:auto
chunk2	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto chunk2 = GENERATE(chunk(2, values({ 1, 1, 2, 2, 3, 3 })));$/;"	v	typeref:typename:auto
chunk2	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto chunk2 = GENERATE(take(3, chunk(0, value(1))));$/;"	v	typeref:typename:auto
clara	misc/deps/catch2/include/external/clara.hpp	/^namespace Catch { namespace clara {$/;"	n	namespace:Catch
clara	misc/deps/catch2/include/external/clara.hpp	/^namespace clara {$/;"	n	namespace:Catch
clara	misc/deps/catch2/third_party/clara.hpp	/^namespace clara { namespace TextFlow {$/;"	n
clara	misc/deps/catch2/third_party/clara.hpp	/^namespace clara {$/;"	n
className	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        std::string className;$/;"	m	struct:Catch::TestCaseInfo	typeref:typename:std::string
classify_outliers	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^            OutlierClassification classify_outliers(Iterator first, Iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:OutlierClassification
clean	Makefile	/^clean:$/;"	t
clean	misc/Makefile	/^clean:$/;"	t
clean	misc/deps/ezbuild/Makefile	/^clean:$/;"	t
cleanUp	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^    void cleanUp() {$/;"	f	namespace:Catch	typeref:typename:void
cleanUpContext	misc/deps/catch2/include/internal/catch_context.cpp	/^    void cleanUpContext() {$/;"	f	namespace:Catch	typeref:typename:void
cleanupSingletons	misc/deps/catch2/include/internal/catch_singletons.cpp	/^    void cleanupSingletons() {$/;"	f	namespace:Catch	typeref:typename:void
cli	misc/deps/catch2/include/internal/catch_session.cpp	/^    clara::Parser const& Session::cli() const {$/;"	f	class:Catch::Session	typeref:typename:clara::Parser const &
cli	misc/deps/catch2/include/internal/catch_session.cpp	/^    void Session::cli( clara::Parser const& newParser ) {$/;"	f	class:Catch::Session	typeref:typename:void
cli	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^    auto cli = Catch::makeCommandLineParser(config);$/;"	v	typeref:typename:auto
clockCost	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        double clockCost;$/;"	m	struct:Catch::BenchmarkInfo	typeref:typename:double
clockResolution	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        double clockResolution;$/;"	m	struct:Catch::BenchmarkInfo	typeref:typename:double
clock_cost	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^            EnvironmentEstimate<FloatDuration<Clock>> clock_cost;$/;"	m	struct:Catch::Benchmark::Environment	typeref:typename:EnvironmentEstimate<FloatDuration<Clock>>
clock_cost_estimation_iterations	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto clock_cost_estimation_iterations = 10000;$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
clock_cost_estimation_tick_limit	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto clock_cost_estimation_tick_limit = 100000;$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
clock_cost_estimation_time	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto clock_cost_estimation_time = std::chrono::milliseconds(10);$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
clock_cost_estimation_time_limit	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto clock_cost_estimation_time_limit = std::chrono::seconds(1);$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
clock_resolution	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^            EnvironmentEstimate<FloatDuration<Clock>> clock_resolution;$/;"	m	struct:Catch::Benchmark::Environment	typeref:typename:EnvironmentEstimate<FloatDuration<Clock>>
clock_resolution_estimation_time	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto clock_resolution_estimation_time = std::chrono::milliseconds(500);$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
clock_type	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^            using clock_type = Clock;$/;"	t	struct:Catch::Benchmark::Environment	typeref:typename:Clock
clog	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^    std::ostream& clog() {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
clog	misc/deps/catch2/include/internal/catch_stream.cpp	/^    std::ostream& clog() { return std::clog; }$/;"	f	namespace:Catch	typeref:typename:std::ostream &
clone	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                    model<Fun>* clone() const override { return new model<Fun>(*this); }$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model	typeref:typename:model<Fun> *
close	misc/deps/catch2/include/internal/catch_run_context.cpp	/^            void close() override {$/;"	f	struct:Catch::Generators::GeneratorTracker	typeref:typename:void	file:
close	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::close() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:void
close	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    void close() {$/;"	f	class:Catch::TablePrinter	typeref:typename:void	file:
cmakePath	misc/deps/catch2/scripts/releaseCommon.py	/^cmakePath = os.path.join(catchPath, 'CMakeLists.txt')$/;"	v
cmdPath	misc/deps/catch2/scripts/approvalTests.py	/^    cmdPath = sys.argv[1]$/;"	v
codecov_lang_of_source	misc/deps/catch2/CMake/Findcodecov.cmake	/^function (codecov_lang_of_source FILE RETURN_VAR)$/;"	f
codecov_path_of_source	misc/deps/catch2/CMake/Findcodecov.cmake	/^function (codecov_path_of_source FILE RETURN_VAR)$/;"	f
colour	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    Colour::Code colour;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:Colour::Code	file:
colour	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    Colour::Code colour;$/;"	m	struct:Catch::SummaryColumn	typeref:typename:Colour::Code	file:
columnInfos	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    auto columnInfos() const -> std::vector<ColumnInfo> const& {$/;"	f	class:Catch::TablePrinter	typeref:typename:std::vector<ColumnInfo> const &	file:
compareEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareEqual( LhsT const& lhs, RhsT const& rhs ) -> bool { return static_cast<bool>(lhs/;"	f	namespace:Catch	typeref:typename:bool
compareEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareEqual( T* const& lhs, int rhs ) -> bool { return lhs == reinterpret_cast<void co/;"	f	namespace:Catch	typeref:typename:bool
compareEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareEqual( T* const& lhs, long rhs ) -> bool { return lhs == reinterpret_cast<void c/;"	f	namespace:Catch	typeref:typename:bool
compareEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareEqual( int lhs, T* const& rhs ) -> bool { return reinterpret_cast<void const*>( /;"	f	namespace:Catch	typeref:typename:bool
compareEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareEqual( long lhs, T* const& rhs ) -> bool { return reinterpret_cast<void const*>(/;"	f	namespace:Catch	typeref:typename:bool
compareNotEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareNotEqual( LhsT const& lhs, RhsT&& rhs ) -> bool { return static_cast<bool>(lhs !/;"	f	namespace:Catch	typeref:typename:bool
compareNotEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareNotEqual( T* const& lhs, int rhs ) -> bool { return lhs != reinterpret_cast<void/;"	f	namespace:Catch	typeref:typename:bool
compareNotEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareNotEqual( T* const& lhs, long rhs ) -> bool { return lhs != reinterpret_cast<voi/;"	f	namespace:Catch	typeref:typename:bool
compareNotEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareNotEqual( int lhs, T* const& rhs ) -> bool { return reinterpret_cast<void const*/;"	f	namespace:Catch	typeref:typename:bool
compareNotEqual	misc/deps/catch2/include/internal/catch_decomposer.h	/^    auto compareNotEqual( long lhs, T* const& rhs ) -> bool { return reinterpret_cast<void const/;"	f	namespace:Catch	typeref:typename:bool
compile_files	misc/deps/catch2/scripts/benchmarkCompile.py	/^def compile_files():$/;"	f
compile_main	misc/deps/catch2/scripts/benchmarkCompile.py	/^def compile_main():$/;"	f
compiler_path	misc/deps/catch2/scripts/benchmarkCompile.py	/^compiler_path = ''$/;"	v
compiler_path	misc/deps/catch2/scripts/benchmarkCompile.py	/^compiler_path = args.compiler$/;"	v
complete	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::complete() {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
completeCycle	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerContext::completeCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:void
complete_invoke	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            CompleteType_t<ResultOf_t<Fun(Args...)>> complete_invoke(Fun&& fun, Args&&... args) /;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:CompleteType_t<ResultOf_t<Fun (Args...)>>
completedCycle	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool TrackerContext::completedCycle() const {$/;"	f	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:bool
confidence_interval	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^            double confidence_interval;$/;"	m	struct:Catch::Benchmark::Estimate	typeref:typename:double
config	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    IConfigPtr RunContext::config() const {$/;"	f	class:Catch::RunContext	typeref:typename:IConfigPtr
config	misc/deps/catch2/include/internal/catch_session.cpp	/^    Config& Session::config() {$/;"	f	class:Catch::Session	typeref:typename:Config &
config	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^    Catch::ConfigData config;$/;"	v	typeref:typename:Catch::ConfigData
config	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    Catch::Config config{ data };$/;"	v	typeref:typename:Catch::Config
config	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    Catch::Config config{data};$/;"	v	typeref:typename:Catch::Config
configData	misc/deps/catch2/include/internal/catch_session.cpp	/^    ConfigData& Session::configData() {$/;"	f	class:Catch::Session	typeref:typename:ConfigData &
conn	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^    DBConnection conn;$/;"	m	class:UniqueTestsFixture	typeref:typename:DBConnection	file:
const	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^void useObject( const T& object ){}$/;"	C	implementation:TestFixture
const	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^void useObject( const T* object ){}$/;"	C	implementation:TestFixture
const_iterator	misc/deps/catch2/include/external/clara.hpp	/^	using const_iterator = iterator;$/;"	t	class:Catch::clara::TextFlow::Column	typeref:typename:iterator
const_iterator	misc/deps/catch2/include/external/clara.hpp	/^	using const_iterator = iterator;$/;"	t	class:Catch::clara::TextFlow::Columns	typeref:typename:iterator
const_iterator	misc/deps/catch2/include/internal/catch_stringref.h	/^        using const_iterator = const char*;$/;"	t	class:Catch::StringRef	typeref:typename:const char *
const_iterator	misc/deps/catch2/single_include/catch2/catch.hpp	/^        using const_iterator = const char*;$/;"	t	class:Catch::StringRef	typeref:typename:const char *
const_iterator	misc/deps/catch2/third_party/clara.hpp	/^        using const_iterator = iterator;$/;"	t	class:clara::TextFlow::Column	typeref:typename:iterator
const_iterator	misc/deps/catch2/third_party/clara.hpp	/^        using const_iterator = iterator;$/;"	t	class:clara::TextFlow::Columns	typeref:typename:iterator
construct	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            void construct(Args&&... args)$/;"	f	struct:Catch::Detail::ObjectStorage	typeref:typename:void
constructor_throws	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        [[noreturn]] constructor_throws() {$/;"	f	struct:__anonb771ae700110::constructor_throws	file:
constructor_throws	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    struct constructor_throws {$/;"	s	namespace:__anonb771ae700110	file:
contains	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    bool contains( std::string const& s, std::string const& infix ) {$/;"	f	namespace:Catch	typeref:typename:bool
content	inc/ft_list.h	/^    void            *content;$/;"	m	struct:s_list	typeref:typename:void *
contentLineNdx	misc/deps/catch2/scripts/updateDocumentToC.py	/^contentLineNdx = contentLineNo - 1$/;"	v
contentLineNo	misc/deps/catch2/scripts/updateDocumentToC.py	/^contentLineNo = 4$/;"	v
contentTitle	misc/deps/catch2/scripts/updateDocumentToC.py	/^contentTitle = '**Contents**'$/;"	v
convert	misc/deps/catch2/include/internal/catch_approx.cpp	/^std::string StringMaker<Catch::Detail::Approx>::convert(Catch::Detail::Approx const& value) {$/;"	f	class:Catch::StringMaker::Detail::Approx	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    int32_t convert(float f) {$/;"	f	namespace:Catch::__anon3ab11d7b0110	typeref:typename:int32_t
convert	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    int64_t convert(double d) {$/;"	f	namespace:Catch::__anon3ab11d7b0110	typeref:typename:int64_t
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<bool>::convert(bool b) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<char const*>::convert(char const* str) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<char*>::convert(char* str) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<char>::convert(char c) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<double>::convert(double value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<float>::convert(float value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<int>::convert(int value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<long long>::convert(long long value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<long>::convert(long value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<signed char>::convert(signed char value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<std::byte>::convert(std::byte value) {$/;"	f	class:Catch::StringMaker::byte	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<std::nullptr_t>::convert(std::nullptr_t) {$/;"	f	class:Catch::StringMaker::nullptr_t	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<std::string>::convert(const std::string& str) {$/;"	f	class:Catch::StringMaker::string	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<std::string_view>::convert(std::string_view str) {$/;"	f	class:Catch::StringMaker::string_view	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<std::wstring>::convert(const std::wstring& wstr) {$/;"	f	class:Catch::StringMaker::wstring	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<std::wstring_view>::convert(std::wstring_view str) {$/;"	f	class:Catch::StringMaker::wstring_view	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<unsigned char>::convert(unsigned char c) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<unsigned int>::convert(unsigned int value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<unsigned long long>::convert(unsigned long long value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<unsigned long>::convert(unsigned long value) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<wchar_t *>::convert(wchar_t * str) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string StringMaker<wchar_t const*>::convert(wchar_t const * str) {$/;"	f	class:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^            convert(const Fake& value) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::enable_if<::Catch::Detail::IsStreamInsertable<Fake>::value,std::string>::type
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert( R const& range ) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(NSObject* nsObject) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(NSString * nsstring) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(R C::* p) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(T const(&arr)[SZ]) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(U* p) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(const std::monostate&) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(const std::optional<T>& optional) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(const std::pair<T1, T2>& pair) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(signed char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/include/internal/catch_tostring.h	/^        static std::string convert(unsigned char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^    static std::string convert(StringMakerException const&) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string	file:
convert	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^        static std::string convert( const has_maker& ) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string	file:
convert	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^        static std::string convert( const has_maker_and_operator& ) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string	file:
convert	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    static std::string convert(stringmaker_range const&) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string	file:
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^            convert(const Fake& value) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::enable_if<::Catch::Detail::IsStreamInsertable<Fake>::value,std::string>::type
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert( R const& range ) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(NSObject* nsObject) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(NSString * nsstring) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(R C::* p) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(T const(&arr)[SZ]) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(U* p) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(const std::monostate&) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(const std::optional<T>& optional) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(const std::pair<T1, T2>& pair) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(signed char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convert	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static std::string convert(unsigned char const* str) {$/;"	f	struct:Catch::StringMaker	typeref:typename:std::string
convertInto	misc/deps/catch2/include/external/clara.hpp	/^    inline auto convertInto( std::string const &source, CLARA_CONFIG_OPTIONAL_TYPE<T>& target ) /;"	f	namespace:Catch::clara::detail	typeref:typename:ParserResult
convertInto	misc/deps/catch2/include/external/clara.hpp	/^    inline auto convertInto( std::string const &source, T& target ) -> ParserResult {$/;"	f	namespace:Catch::clara::detail	typeref:typename:ParserResult
convertInto	misc/deps/catch2/include/external/clara.hpp	/^    inline auto convertInto( std::string const &source, bool &target ) -> ParserResult {$/;"	f	namespace:Catch::clara::detail	typeref:typename:ParserResult
convertInto	misc/deps/catch2/include/external/clara.hpp	/^    inline auto convertInto( std::string const &source, std::string& target ) -> ParserResult {$/;"	f	namespace:Catch::clara::detail	typeref:typename:ParserResult
convertInto	misc/deps/catch2/third_party/clara.hpp	/^    inline auto convertInto( std::string const &source, CLARA_CONFIG_OPTIONAL_TYPE<T>& target ) /;"	f	namespace:clara::detail	typeref:typename:ParserResult
convertInto	misc/deps/catch2/third_party/clara.hpp	/^    inline auto convertInto( std::string const &source, T& target ) -> ParserResult {$/;"	f	namespace:clara::detail	typeref:typename:ParserResult
convertInto	misc/deps/catch2/third_party/clara.hpp	/^    inline auto convertInto( std::string const &source, bool &target ) -> ParserResult {$/;"	f	namespace:clara::detail	typeref:typename:ParserResult
convertInto	misc/deps/catch2/third_party/clara.hpp	/^    inline auto convertInto( std::string const &source, std::string& target ) -> ParserResult {$/;"	f	namespace:clara::detail	typeref:typename:ParserResult
convertUnknownEnumToString	misc/deps/catch2/include/internal/catch_tostring.h	/^        std::string convertUnknownEnumToString( E e ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
convertUnknownEnumToString	misc/deps/catch2/single_include/catch2/catch.hpp	/^        std::string convertUnknownEnumToString( E e ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
convertUnstreamable	misc/deps/catch2/include/internal/catch_tostring.h	/^         std::string>::type convertUnstreamable(T const& ex) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	misc/deps/catch2/include/internal/catch_tostring.h	/^        , std::string>::type convertUnstreamable( T const& value ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::enable_if<std::is_enum<T>::value,std::string>::type
convertUnstreamable	misc/deps/catch2/include/internal/catch_tostring.h	/^        std::string>::type convertUnstreamable( T const& ) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	misc/deps/catch2/single_include/catch2/catch.hpp	/^         std::string>::type convertUnstreamable(T const& ex) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	misc/deps/catch2/single_include/catch2/catch.hpp	/^        , std::string>::type convertUnstreamable( T const& value ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::enable_if<std::is_enum<T>::value,std::string>::type
convertUnstreamable	misc/deps/catch2/single_include/catch2/catch.hpp	/^        std::string>::type convertUnstreamable( T const& ) {$/;"	f	namespace:Catch::Detail
copy	misc/tests/ft_string/strdup.cpp	/^    char *copy = ft_strdup(string);$/;"	v	typeref:typename:char *
copy_catch	misc/deps/catch2/scripts/benchmarkCompile.py	/^def copy_catch(path_to_catch):$/;"	f
count	misc/deps/catch2/include/external/clara.hpp	/^                size_t count = 0;$/;"	m	struct:Catch::clara::detail::Parser::parse::ParserInfo	typeref:typename:size_t
count	misc/deps/catch2/include/external/clara.hpp	/^        auto count() const -> size_t { return m_tokenBuffer.size() + (itEnd - it); }$/;"	f	class:Catch::clara::detail::TokenStream	typeref:typename:size_t
count	misc/deps/catch2/include/internal/catch_list.h	/^        std::size_t count = 0;$/;"	m	struct:Catch::TagInfo	typeref:typename:std::size_t
count	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    size_t count = 10;$/;"	v	typeref:typename:size_t
count	misc/deps/catch2/third_party/clara.hpp	/^                size_t count = 0;$/;"	m	struct:clara::detail::Parser::parse::ParserInfo	typeref:typename:size_t
count	misc/deps/catch2/third_party/clara.hpp	/^        auto count() const -> size_t { return m_tokenBuffer.size() + (itEnd - it); }$/;"	f	class:clara::detail::TokenStream	typeref:typename:size_t
counter	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            std::size_t counter;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::size_t
counter	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        std::size_t counter = 0;$/;"	m	struct:Catch::TAPReporter	typeref:typename:std::size_t
counter	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^            int counter() {$/;"	f	struct:__anon538088c40110::BDDTests::__anon538088c40210::Fixture	typeref:typename:int	file:
counter	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            std::size_t counter;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::size_t
counter	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        std::size_t counter = 0;$/;"	m	struct:Catch::TAPReporter	typeref:typename:std::size_t
counting_clock	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    struct counting_clock {$/;"	s	namespace:__anon7f22177c0110	file:
cout	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^    std::ostream& cout() {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
cout	misc/deps/catch2/include/internal/catch_stream.cpp	/^    std::ostream& cout() { return std::cout; }$/;"	f	namespace:Catch	typeref:typename:std::ostream &
cov_files	misc/deps/catch2/misc/appveyorMergeCoverageScript.py	/^    cov_files = list(glob.glob('projects\/cov-report*.bin'))$/;"	v
coverage_evaluate	misc/deps/catch2/CMake/Findcodecov.cmake	/^function (coverage_evaluate)$/;"	f
cp	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    const TestData* cp = p;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:const TestData *
cpc	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    const TestData* const cpc = p;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:const TestData * const
create	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^            IStreamingReporterPtr create( ReporterConfig const& config ) const override {$/;"	f	class:Catch::ListenerRegistrar::ListenerFactory	typeref:typename:IStreamingReporterPtr
create	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^            IStreamingReporterPtr create( ReporterConfig const& config ) const override {$/;"	f	class:Catch::ReporterRegistrar::ReporterFactory	typeref:typename:IStreamingReporterPtr
create	misc/deps/catch2/include/internal/catch_reporter_registry.cpp	/^    IStreamingReporterPtr ReporterRegistry::create( std::string const& name, IConfigPtr const& c/;"	f	class:Catch::ReporterRegistry	typeref:typename:IStreamingReporterPtr
createConnection	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^    static DBConnection createConnection( std::string const & \/*dbName*\/ ) {$/;"	f	class:DBConnection	typeref:typename:DBConnection	file:
createContext	misc/deps/catch2/include/internal/catch_context.cpp	/^    void IMutableContext::createContext()$/;"	f	class:Catch::IMutableContext	typeref:typename:void
createReporter	misc/deps/catch2/include/internal/catch_session.cpp	/^        IStreamingReporterPtr createReporter(std::string const& reporterName, IConfigPtr const& /;"	f	namespace:Catch::__anon2e423b750110	typeref:typename:IStreamingReporterPtr
createToc	misc/deps/catch2/scripts/updateDocumentToC.py	/^def createToc(headlines, hyperlink=True, top_link=False, no_toc_header=False):$/;"	f
create_catch_main	misc/deps/catch2/scripts/benchmarkCompile.py	/^def create_catch_main():$/;"	f
create_empty_file	misc/deps/catch2/misc/coverage-helper.cpp	/^void create_empty_file(std::string const& path) {$/;"	f	typeref:typename:void
create_introduced_in_text	misc/deps/catch2/scripts/extractFeaturesFromReleaseNotes.py	/^def create_introduced_in_text(version, bug_number = None):$/;"	f
create_temp_dir	misc/deps/catch2/scripts/benchmarkCompile.py	/^def create_temp_dir():$/;"	f
ctest_include_file	misc/deps/catch2/contrib/Catch.cmake	/^  set(ctest_include_file "${CMAKE_CURRENT_BINARY_DIR}\/${TARGET}_include-${args_hash}.cmake")$/;"	v	function:catch_discover_tests
ctest_tests_file	misc/deps/catch2/contrib/Catch.cmake	/^  set(ctest_tests_file "${CMAKE_CURRENT_BINARY_DIR}\/${TARGET}_tests-${args_hash}.cmake")$/;"	v	function:catch_discover_tests
ctx	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^    TrackerContext ctx;$/;"	v	typeref:typename:TrackerContext
currentContext	misc/deps/catch2/include/internal/catch_context.cpp	/^    IMutableContext *IMutableContext::currentContext = nullptr;$/;"	m	class:Catch::IMutableContext	typeref:typename:IMutableContext *
currentContext	misc/deps/catch2/include/internal/catch_context.h	/^        static IMutableContext *currentContext;$/;"	m	struct:Catch::IMutableContext	typeref:typename:IMutableContext *
currentGroupInfo	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        LazyStat<GroupInfo> currentGroupInfo;$/;"	m	struct:Catch::StreamingReporterBase	typeref:typename:LazyStat<GroupInfo>
currentTestCaseInfo	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        LazyStat<TestCaseInfo> currentTestCaseInfo;$/;"	m	struct:Catch::StreamingReporterBase	typeref:typename:LazyStat<TestCaseInfo>
currentTestRunInfo	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        LazyStat<TestRunInfo> currentTestRunInfo;$/;"	m	struct:Catch::StreamingReporterBase	typeref:typename:LazyStat<TestRunInfo>
currentTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    ITracker& TrackerContext::currentTracker() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:ITracker &
current_number	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^    int current_number;$/;"	m	class:RandomIntGenerator	typeref:typename:int	file:
current_number	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    int current_number;$/;"	m	class:__anon78e517e00510::TestGen	typeref:typename:int	file:
custom	misc/deps/catch2/include/internal/catch_approx.cpp	/^    Approx Approx::custom() {$/;"	f	class:Catch::Detail::Approx	typeref:typename:Approx
d	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^    double d = 1.23;$/;"	v	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:double
d	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^  double d = 1.23;$/;"	v	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:double
d	misc/tests/ft_string/count_occ.cpp	/^    char d = 'd';$/;"	v	typeref:typename:char
dMedium	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^    const double dMedium = 1.234;$/;"	v	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:const double
dSmall	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^    const double dSmall = 0.00001;$/;"	v	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:const double
dZero	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^    const double dZero = 0;$/;"	v	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:const double
d_	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^        double d_ = 0.0;$/;"	m	class:__anon0cb4e5740110::ApproxTests::StrongDoubleTypedef	typeref:typename:double	file:
d_counter	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^            int d_counter;$/;"	m	struct:__anon538088c40110::BDDTests::__anon538088c40210::Fixture	typeref:typename:int	file:
dashed_line	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^char const * dashed_line =$/;"	v	typeref:typename:char const *
dashifyHeadline	misc/deps/catch2/scripts/updateDocumentToC.py	/^def dashifyHeadline(line):$/;"	f
data	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            TStorage data;$/;"	m	struct:Catch::Detail::ObjectStorage	typeref:typename:TStorage
data	misc/deps/catch2/include/internal/catch_stream.cpp	/^            char data[bufferSize];$/;"	m	class:Catch::Detail::__anond61e3add0110::StreamBufImpl	typeref:typename:char[]	file:
data	misc/deps/catch2/include/internal/catch_stringref.cpp	/^    auto StringRef::data() const noexcept -> char const* {$/;"	f	class:Catch::StringRef	typeref:typename:auto
data	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    Catch::ConfigData data{};$/;"	v	typeref:typename:Catch::ConfigData
data	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    TestData data;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:TestData
data	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        static auto data = make_data();$/;"	v	typeref:typename:auto	file:
data	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto data = GENERATE( values<Data>({$/;"	v	typeref:typename:auto
data	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto data = GENERATE(table<char const*, int>({$/;"	v	typeref:typename:auto
data	misc/deps/catch2/scripts/benchmarkRunner.py	/^data = defaultdict(list)$/;"	v
dates	misc/deps/catch2/scripts/releaseNotes.py	/^dates = []$/;"	v
deallocate	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        void deallocate( T *p, size_type \/*n*\/ ) {$/;"	f	struct:__anon8bbeb4870110::minimal_allocator	typeref:typename:void	file:
decl	misc/deps/catch2/docs/command-line.md	/^### decl$/;"	S
default_clock	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^        using default_clock = std::chrono::steady_clock;$/;"	t	namespace:Catch::Benchmark	typeref:typename:std::chrono::steady_clock
definePath	misc/deps/catch2/scripts/releaseCommon.py	/^definePath = os.path.join(rootPath, 'catch.hpp')$/;"	v
defineRe	misc/deps/catch2/scripts/embed.py	/^defineRe = re.compile( r'\\s*#\\s*define\\s*(\\S*)(\\s+)(.*)' ) # all #defines$/;"	v
delta	misc/deps/catch2/include/internal/catch_totals.cpp	/^    Totals Totals::delta( Totals const& prevTotals ) const {$/;"	f	class:Catch::Totals	typeref:typename:Totals
deoptimize_value	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^        inline void deoptimize_value(T&& x) {$/;"	f	namespace:Catch::Benchmark	typeref:typename:void
describe	misc/deps/catch2/examples/207-Rpt-TeamCityReporter.cpp	/^    std::string describe() const override $/;"	f	struct:MyExceptionMatcher	typeref:typename:std::string	file:
describe	misc/deps/catch2/include/internal/catch_matchers.h	/^            std::string describe() const override {$/;"	f	struct:Catch::Matchers::Impl::MatchAllOf	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers.h	/^            std::string describe() const override {$/;"	f	struct:Catch::Matchers::Impl::MatchAnyOf	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers.h	/^            std::string describe() const override {$/;"	f	struct:Catch::Matchers::Impl::MatchNotOf	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_exception.cpp	/^std::string ExceptionMessageMatcher::describe() const {$/;"	f	class:Catch::Matchers::Exception::ExceptionMessageMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    std::string WithinAbsMatcher::describe() const {$/;"	f	class:Catch::Matchers::Floating::WithinAbsMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    std::string WithinRelMatcher::describe() const {$/;"	f	class:Catch::Matchers::Floating::WithinRelMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    std::string WithinUlpsMatcher::describe() const {$/;"	f	class:Catch::Matchers::Floating::WithinUlpsMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^    std::string describe() const override {$/;"	f	class:Catch::Matchers::Generic::PredicateMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        std::string RegexMatcher::describe() const {$/;"	f	class:Catch::Matchers::StdString::RegexMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        std::string StringMatcherBase::describe() const {$/;"	f	class:Catch::Matchers::StdString::StringMatcherBase	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::string describe() const override {$/;"	f	struct:Catch::Matchers::Vector::ApproxMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::string describe() const override {$/;"	f	struct:Catch::Matchers::Vector::ContainsElementMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::string describe() const override {$/;"	f	struct:Catch::Matchers::Vector::ContainsMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::string describe() const override {$/;"	f	struct:Catch::Matchers::Vector::EqualsMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::string describe() const override {$/;"	f	struct:Catch::Matchers::Vector::UnorderedEqualsMatcher	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_objc.hpp	/^                std::string describe() const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::Contains	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_objc.hpp	/^                std::string describe() const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::EndsWith	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_objc.hpp	/^                std::string describe() const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::Equals	typeref:typename:std::string
describe	misc/deps/catch2/include/internal/catch_objc.hpp	/^                std::string describe() const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::StartsWith	typeref:typename:std::string
describe	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^        std::string describe() const override {$/;"	f	class:__anon96897c110110::MatchersTests::ExceptionMatcher	typeref:typename:std::string	file:
description	misc/deps/catch2/conanfile.py	/^    description = "A modern, C++-native, header-only, framework for unit-tests, TDD and BDD"$/;"	v	class:CatchConan
description	misc/deps/catch2/include/internal/catch_section_info.h	/^        std::string description; \/\/ !Deprecated: this will always be empty$/;"	m	struct:Catch::SectionInfo	typeref:typename:std::string
description	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        std::string description;$/;"	m	struct:Catch::TestCaseInfo	typeref:typename:std::string
destruct	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            typename std::enable_if<AllowManualDestruction>::type destruct()$/;"	f	struct:Catch::Detail::ObjectStorage	typeref:typename:std::enable_if<AllowManualDestruction>::type
destruct_on_exit	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            void destruct_on_exit(typename std::enable_if<Destruct, U>::type* = 0) { destruct<tr/;"	f	struct:Catch::Detail::ObjectStorage	typeref:typename:void
destructable_object	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^    using destructable_object = Detail::ObjectStorage<T, false>;$/;"	t	namespace:Catch	typeref:typename:Detail::ObjectStorage<T,false>
detail	misc/deps/catch2/include/external/clara.hpp	/^namespace detail {$/;"	n	namespace:Catch::clara
detail	misc/deps/catch2/third_party/clara.hpp	/^namespace detail {$/;"	n	namespace:clara
developBuild	misc/deps/catch2/scripts/releaseCommon.py	/^    def developBuild(self):$/;"	m	class:Version
diffFiles	misc/deps/catch2/scripts/approvalTests.py	/^def diffFiles(fileA, fileB):$/;"	f
difference_type	misc/deps/catch2/include/external/clara.hpp	/^		using difference_type = std::ptrdiff_t;$/;"	t	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:std::ptrdiff_t
difference_type	misc/deps/catch2/include/external/clara.hpp	/^		using difference_type = std::ptrdiff_t;$/;"	t	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:std::ptrdiff_t
difference_type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	struct:__anonfad788a70210::int_iterator	typeref:typename:std::ptrdiff_t	file:
difference_type	misc/deps/catch2/third_party/clara.hpp	/^            using difference_type = std::ptrdiff_t;$/;"	t	class:clara::TextFlow::Column::iterator	typeref:typename:std::ptrdiff_t
difference_type	misc/deps/catch2/third_party/clara.hpp	/^            using difference_type = std::ptrdiff_t;$/;"	t	class:clara::TextFlow::Columns::iterator	typeref:typename:std::ptrdiff_t
dimColour	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    Catch::Colour::Code dimColour() { return Catch::Colour::FileName; }$/;"	f	namespace:__anon16c8dcf30110	typeref:typename:Catch::Colour::Code
dimColour	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            static Colour::Code dimColour() { return Colour::FileName; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:Colour::Code
dimColour	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            static Colour::Code dimColour() { return Colour::FileName; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:Colour::Code
dir_name	misc/deps/catch2/scripts/benchmarkCompile.py	/^dir_name = 'benchmark-dir'$/;"	v
disabled_range	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct disabled_range {$/;"	s	namespace:__anonfad788a70310	file:
discard	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^    void SimplePcg32::discard(uint64_t skip) {$/;"	f	class:Catch::SimplePcg32	typeref:typename:void
divide	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^    inline double divide( double a, double b ) {$/;"	f	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:double
do_nothing	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
documentsDefault	misc/deps/catch2/scripts/updateDocumentToC.py	/^documentsDefault = os.path.join(os.path.relpath(catchPath), 'docs\/*.md')$/;"	v
doesNotThrow	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    void doesNotThrow() {}$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:void
double_pi	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    double double_pi = 3.1415926535;$/;"	m	struct:__anon8b7f96210110::ConditionTests::TestData	typeref:typename:double	file:
dummy	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        A dummy;$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:A
dup	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    #define dup /;"	d	file:
dup2	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    #define dup2 /;"	d	file:
duration	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        using duration = std::chrono::nanoseconds;$/;"	t	struct:__anon7f22177c0110::counting_clock	typeref:typename:std::chrono::nanoseconds	file:
duration	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        using duration = std::chrono::nanoseconds;$/;"	t	struct:__anon7f22177c0110::manual_clock	typeref:typename:std::chrono::nanoseconds	file:
durationInSeconds	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        double durationInSeconds;$/;"	m	struct:Catch::SectionStats	typeref:typename:double
durationInSeconds	misc/deps/catch2/include/internal/catch_section_info.h	/^        double durationInSeconds;$/;"	m	struct:Catch::SectionEndInfo	typeref:typename:double
durationsParser	misc/deps/catch2/scripts/approvalTests.py	/^durationsParser = re.compile(r' time="[0-9]*\\.[0-9]*"')$/;"	v
e	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto e = Catch::Benchmark::Detail::bootstrap(0.95, samples.begin(), samples.end(), samples, /;"	v	typeref:typename:auto
e0	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    Enum1 e0 = Enum1Value0;$/;"	v	typeref:typename:Enum1
e0	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    Enum2 e0 = Enum2Value0;$/;"	v	typeref:typename:Enum2
e0	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    EnumClass1 e0 = EnumClass1::EnumClass1Value0;$/;"	v	typeref:typename:EnumClass1
e0	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    EnumClass2 e0 = EnumClass2::EnumClass2Value0;$/;"	v	typeref:typename:EnumClass2
e1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    Enum1 e1 = Enum1Value1;$/;"	v	typeref:typename:Enum1
e1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    Enum2 e1 = Enum2Value1;$/;"	v	typeref:typename:Enum2
e1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    EnumClass1 e1 = EnumClass1::EnumClass1Value1;$/;"	v	typeref:typename:EnumClass1
e1	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    EnumClass2 e1 = EnumClass2::EnumClass2Value1;$/;"	v	typeref:typename:EnumClass2
e3	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^    auto e3 = static_cast<EnumClass2>(10);$/;"	v	typeref:typename:auto
e_bool	inc/ft_bool.h	/^typedef enum			e_bool$/;"	g
eatCucumbers	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^static auto eatCucumbers( int start, int eat ) -> int { return start-eat; }$/;"	f	typeref:typename:int	file:
elapsed	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^                ClockDuration<Clock> elapsed() const { return finished - started; }$/;"	f	struct:Catch::Benchmark::Detail::ChronometerModel	typeref:typename:ClockDuration<Clock>
elapsed	misc/deps/catch2/include/internal/benchmark/detail/catch_timing.hpp	/^            Duration elapsed;$/;"	m	struct:Catch::Benchmark::Timing	typeref:typename:Duration
elem	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        auto elem = GENERATE(from_range(make_data_counted()));$/;"	v	typeref:typename:auto
elem	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        auto elem = GENERATE_REF(from_range(data.begin(), data.end()));$/;"	v	typeref:typename:auto
elseRe	misc/deps/catch2/scripts/embed.py	/^elseRe = re.compile( r'\\s*#\\s*else' )$/;"	v
emplaceUnscopedMessage	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::emplaceUnscopedMessage( MessageBuilder const& builder ) {$/;"	f	class:Catch::RunContext	typeref:typename:void
empty	misc/deps/catch2/include/internal/catch_common.h	/^        bool empty() const noexcept { return file[0] == '\\0'; }$/;"	f	struct:Catch::SourceLineInfo	typeref:typename:bool
empty	misc/deps/catch2/include/internal/catch_stringref.h	/^        constexpr auto empty() const noexcept -> bool {$/;"	f	class:Catch::StringRef	typeref:typename:auto
empty	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        StringRef empty;$/;"	v	typeref:typename:StringRef
empty	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                std::vector<double> empty, t1({1, 2});$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
empty	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                std::vector<double> empty;$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
empty	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^            std::vector<int> empty;$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<int>
empty	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^            std::vector<TestType> empty;$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::vector<TestType>
empty	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^            std::vector<int> empty;$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::vector<int>
empty	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    std::array<int, 0> empty;$/;"	v	typeref:typename:std::array<int,0>
empty	misc/deps/catch2/single_include/catch2/catch.hpp	/^        auto empty() const noexcept -> bool {$/;"	f	class:Catch::StringRef	typeref:typename:auto
empty	misc/deps/catch2/single_include/catch2/catch.hpp	/^        bool empty() const noexcept { return file[0] == '\\0'; }$/;"	f	struct:Catch::SourceLineInfo	typeref:typename:bool
emptyMap	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        std::map<std::string, int> emptyMap;$/;"	v	typeref:typename:std::map<std::string,int>
emptySet	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        std::set<std::string> emptySet;$/;"	v	typeref:typename:std::set<std::string>
encode	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/Xml.tests.cpp	/^inline std::string encode( std::string const& str, Catch::XmlEncode::ForWhat forWhat = Catch::Xm/;"	f	typeref:typename:std::string
encodeTo	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    void XmlEncode::encodeTo( std::ostream& os ) const {$/;"	f	class:Catch::XmlEncode	typeref:typename:void
end	misc/deps/catch2/include/external/clara.hpp	/^	auto end() const -> iterator { return { *this, iterator::EndTag() }; }$/;"	f	class:Catch::clara::TextFlow::Columns	typeref:typename:iterator
end	misc/deps/catch2/include/external/clara.hpp	/^	auto end() const -> iterator { return { *this, m_strings.size() }; }$/;"	f	class:Catch::clara::TextFlow::Column	typeref:typename:iterator
end	misc/deps/catch2/include/internal/catch_stringref.h	/^        constexpr const_iterator end() const { return m_start + m_size; }$/;"	f	class:Catch::StringRef	typeref:typename:const_iterator
end	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto end = counting_clock::now();$/;"	v	typeref:typename:auto
end	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator end() const { return {}; }$/;"	f	struct:__anonfad788a70210::streamable_range	typeref:typename:int_iterator	file:
end	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator end() const { return {}; }$/;"	f	struct:__anonfad788a70210::stringmaker_range	typeref:typename:int_iterator	file:
end	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator end() const { return {}; }$/;"	f	struct:__anonfad788a70310::disabled_range	typeref:typename:int_iterator	file:
end	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator end() const { return {}; }$/;"	f	struct:__anonfad788a70310::just_range	typeref:typename:int_iterator	file:
end	misc/deps/catch2/single_include/catch2/catch.hpp	/^        const_iterator end() const { return m_start + m_size; }$/;"	f	class:Catch::StringRef	typeref:typename:const_iterator
end	misc/deps/catch2/third_party/clara.hpp	/^        auto end() const -> iterator { return { *this, iterator::EndTag() }; }$/;"	f	class:clara::TextFlow::Columns	typeref:typename:iterator
end	misc/deps/catch2/third_party/clara.hpp	/^        auto end() const -> iterator { return { *this, m_strings.size() }; }$/;"	f	class:clara::TextFlow::Column	typeref:typename:iterator
endElement	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::endElement() {$/;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter &
endMode	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::endMode() {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
endRun	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerContext::endRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:void
endifRe	misc/deps/catch2/scripts/embed.py	/^endifRe = re.compile( r'\\s*#\\s*endif\\s*\/\/\\s*(.*)' )$/;"	v
endsWith	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    bool endsWith( std::string const& s, char suffix ) {$/;"	f	namespace:Catch	typeref:typename:bool
endsWith	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    bool endsWith( std::string const& s, std::string const& suffix ) {$/;"	f	namespace:Catch	typeref:typename:bool
enforceNoDuplicateTestCases	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    void enforceNoDuplicateTestCases( std::vector<TestCase> const& functions ) {$/;"	f	namespace:Catch	typeref:typename:void
enforceNotReservedTag	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^        void enforceNotReservedTag( std::string const& tag, SourceLineInfo const& _lineInfo ) {$/;"	f	namespace:Catch::__anon539cc7770110	typeref:typename:void
enforceOk	misc/deps/catch2/include/external/clara.hpp	/^        void enforceOk() const override {$/;"	f	class:Catch::clara::detail::BasicResult	typeref:typename:void
enforceOk	misc/deps/catch2/third_party/clara.hpp	/^        void enforceOk() const override {$/;"	f	class:clara::detail::BasicResult	typeref:typename:void
ensureTagClosed	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    void XmlWriter::ensureTagClosed() {$/;"	f	class:Catch::XmlWriter	typeref:typename:void
enumInfo	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^    std::unique_ptr<EnumInfo> enumInfo = makeEnumInfo( "EnumName", "EnumName::Value1, EnumName::/;"	v	typeref:typename:std::unique_ptr<EnumInfo>
env	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    Catch::Benchmark::Environment<Duration> env;$/;"	v	typeref:typename:Catch::Benchmark::Environment<Duration>
epsilon	misc/deps/catch2/include/internal/catch_approx.h	/^        Approx& epsilon( T const& newEpsilon ) {$/;"	f	class:Catch::Detail::Approx	typeref:typename:Approx &
epsilon	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            ApproxMatcher& epsilon( T const& newEpsilon ) {$/;"	f	struct:Catch::Matchers::Vector::ApproxMatcher	typeref:typename:ApproxMatcher &
epsilon example	misc/deps/catch2/docs/assertions.md	/^#### epsilon example$/;"	t
equal	misc/tests/ft_memory/memcmp.cpp	/^	int greater, lessthan, equal, greater2, lessthan2, equal2;$/;"	v	typeref:typename:int
equal2	misc/tests/ft_memory/memcmp.cpp	/^	int greater, lessthan, equal, greater2, lessthan2, equal2;$/;"	v	typeref:typename:int
equalityComparisonImpl	misc/deps/catch2/include/internal/catch_approx.cpp	/^    bool Approx::equalityComparisonImpl(const double other) const {$/;"	f	class:Catch::Detail::Approx	typeref:typename:bool
erf_inv	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^    double erf_inv(double x) {$/;"	f	namespace:__anonac4822fc0110	typeref:typename:double
erfc_inv	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^            double erfc_inv(double x) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:double
errnoParser	misc/deps/catch2/scripts/approvalTests.py	/^errnoParser = re.compile(r'''$/;"	v
error	misc/deps/catch2/include/internal/catch_totals.h	/^        int error = 0;$/;"	m	struct:Catch::Totals	typeref:typename:int
errorMessage	misc/deps/catch2/include/external/clara.hpp	/^        auto errorMessage() const -> std::string { return m_errorMessage; }$/;"	f	class:Catch::clara::detail::BasicResult	typeref:typename:std::string
errorMessage	misc/deps/catch2/third_party/clara.hpp	/^        auto errorMessage() const -> std::string { return m_errorMessage; }$/;"	f	class:clara::detail::BasicResult	typeref:typename:std::string
escape	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::escape() {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
escape	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        static std::string escape( std::string const& str ) {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:std::string
escape	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        static std::string escape( std::string const& str ) {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:std::string
escape_arg	misc/deps/catch2/misc/coverage-helper.cpp	/^std::string escape_arg(const std::string& arg) {$/;"	f	typeref:typename:std::string
estimateClockResolution	misc/deps/catch2/include/internal/catch_timer.cpp	/^        auto estimateClockResolution() -> uint64_t {$/;"	f	namespace:Catch::__anon48b134320110	typeref:typename:uint64_t
estimate_clock_cost	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            EnvironmentEstimate<FloatDuration<Clock>> estimate_clock_cost(FloatDuration<Clock> r/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:EnvironmentEstimate<FloatDuration<Clock>>
estimate_clock_resolution	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            EnvironmentEstimate<FloatDuration<Clock>> estimate_clock_resolution(int iterations) /;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:EnvironmentEstimate<FloatDuration<Clock>>
estimatedDuration	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        double estimatedDuration;$/;"	m	struct:Catch::BenchmarkInfo	typeref:typename:double
estimated_duration	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^            Duration estimated_duration;$/;"	m	struct:Catch::Benchmark::ExecutionPlan	typeref:typename:Duration
ex	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/Tag.tests.cpp	/^        catch( std::exception& ex ) {$/;"	v	typeref:typename:std::exception &
exceptionEarlyReported	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::exceptionEarlyReported() {$/;"	f	class:Catch::RunContext	typeref:typename:void
exceptionHandlerHandle	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^PVOID FatalConditionHandler::exceptionHandlerHandle = nullptr;$/;"	m	class:Catch::FatalConditionHandler	typeref:typename:PVOID
exceptionHandlerHandle	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^        static PVOID exceptionHandlerHandle;$/;"	m	struct:Catch::FatalConditionHandler	typeref:typename:PVOID
exceptionTranslateFunction	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^    using exceptionTranslateFunction = std::string(*)();$/;"	t	namespace:Catch
excludeHeadingsFor	misc/deps/catch2/scripts/updateDocumentToC.py	/^def excludeHeadingsFor(f):$/;"	f
exeName	misc/deps/catch2/include/external/clara.hpp	/^        auto exeName() const -> std::string {$/;"	f	class:Catch::clara::detail::Args	typeref:typename:std::string
exeName	misc/deps/catch2/third_party/clara.hpp	/^        auto exeName() const -> std::string {$/;"	f	class:clara::detail::Args	typeref:typename:std::string
exeNameParser	misc/deps/catch2/scripts/approvalTests.py	/^exeNameParser = re.compile(r'''$/;"	v
exec_cmd	misc/deps/catch2/misc/coverage-helper.cpp	/^int exec_cmd(std::string const& cmd, int log_num, std::string const& path) {$/;"	f	typeref:typename:int
execute	misc/deps/catch2/include/internal/catch_session.cpp	/^            Totals execute() {$/;"	f	class:Catch::__anon2e423b750110::TestGroup	typeref:typename:Totals	file:
executeSQL	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^    bool executeSQL( std::string const & \/*query*\/, int const \/*id*\/, std::string const & ar/;"	f	class:DBConnection	typeref:typename:bool	file:
expandAliases	misc/deps/catch2/include/internal/catch_tag_alias_registry.cpp	/^    std::string TagAliasRegistry::expandAliases( std::string const& unexpandedTestSpec ) const {$/;"	f	class:Catch::TagAliasRegistry	typeref:typename:std::string
expected	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^            std::vector<char> expected = { 'c', 'b' };$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<char>
expectedToFail	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    bool TestCaseInfo::expectedToFail() const {$/;"	f	class:Catch::TestCaseInfo	typeref:typename:bool
exports	misc/deps/catch2/conanfile.py	/^    exports = "LICENSE.txt"$/;"	v	class:CatchConan
exports_sources	misc/deps/catch2/conanfile.py	/^    exports_sources = ("single_include\/*", "CMakeLists.txt", "CMake\/*", "contrib\/*")$/;"	v	class:CatchConan
extent	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto extent = GENERATE(table<int, int>({$/;"	v	typeref:typename:auto
extra_args	misc/deps/catch2/contrib/CatchAddTests.cmake	/^set(extra_args ${TEST_EXTRA_ARGS})$/;"	v
extractClassName	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    std::string extractClassName( StringRef const& classOrQualifiedMethodName ) {$/;"	f	namespace:Catch	typeref:typename:std::string
extractInstanceName	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^            StringRef extractInstanceName(StringRef enumInstance) {$/;"	f	namespace:Catch::Detail::__anon9ddbf74d0110	typeref:typename:StringRef
f	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                std::unique_ptr<callable> f;$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction	typeref:typename:std::unique_ptr<callable>
f	misc/deps/catch2/projects/ExtraTests/X02-DisabledMacros.cpp	/^foo f;$/;"	v	typeref:typename:foo
f	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        foo f;$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:foo
f	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^static int f() {$/;"	f	namespace:__anone7dbb1860110::MiscTests	typeref:typename:int	file:
f	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    void f() {}$/;"	f	struct:S	typeref:typename:void	file:
f	misc/tests/ft_string/strmapi.cpp	/^char    f(unsigned int i, char c)$/;"	f	typeref:typename:char
factorial	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^std::uint64_t factorial(std::uint64_t number) {$/;"	f	namespace:__anoneac8fe840110	typeref:typename:std::uint64_t
fail	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::fail() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:void
failed	misc/deps/catch2/include/internal/catch_totals.h	/^        std::size_t failed = 0;$/;"	m	struct:Catch::Counts	typeref:typename:std::size_t
failedButOk	misc/deps/catch2/include/internal/catch_totals.h	/^        std::size_t failedButOk = 0;$/;"	m	struct:Catch::Counts	typeref:typename:std::size_t
failedString	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    const char* failedString() { return "FAILED"; }$/;"	f	namespace:__anon16c8dcf30110	typeref:typename:const char *
failedString	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            static const char* failedString() { return "not ok"; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:const char *
failedString	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            static const char* failedString() { return "not ok"; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:const char *
failingCase	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    void failingCase()$/;"	f	class:__anon27b7d6900110::ClassTests::TestClass	typeref:typename:void	file:
fakeTestCase	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^inline Catch::TestCase fakeTestCase(const char* name, const char* desc = "") { return Catch::mak/;"	f	typeref:typename:Catch::TestCase
fallbackStringifier	misc/deps/catch2/projects/ExtraTests/X10-FallbackStringifier.cpp	/^std::string fallbackStringifier(T const&) {$/;"	f	typeref:typename:std::string
fallbackStringifier	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^std::string fallbackStringifier(T const&) {$/;"	f	typeref:typename:std::string
false	inc/ft_bool.h	/^#  define false /;"	d
falseValue	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    bool falseValue = false;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:bool
fatalErrorEncountered	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    void IStreamingReporter::fatalErrorEncountered( StringRef ) {}$/;"	f	class:Catch::IStreamingReporter	typeref:typename:void
fclean	Makefile	/^fclean:$/;"	t
fclean	misc/Makefile	/^fclean:$/;"	t
fclean	misc/deps/ezbuild/Makefile	/^fclean:$/;"	t
fdefineRe	misc/deps/catch2/scripts/embed.py	/^fdefineRe = re.compile( r'\\s*#\\s*define\\s*(\\S*)\\s*\\(' ) # #defines that take arguments$/;"	v
femto_second	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    std::chrono::duration<int64_t, std::ratio<1, 1000000000000000>> femto_second(1);$/;"	v	typeref:typename:std::chrono::duration<int64_t,std::ratio<1,1000000000000000>>
fib	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    static const int fib[]  = { 1, 1, 2, 3, 5, 8, 13, 21 };$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:const int[]	file:
file	misc/deps/catch2/include/internal/catch_common.h	/^        char const* file;$/;"	m	struct:Catch::SourceLineInfo	typeref:typename:char const *
file	misc/deps/catch2/single_include/catch2/catch.hpp	/^        char const* file;$/;"	m	struct:Catch::SourceLineInfo	typeref:typename:char const *
fileNameTag	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^        std::string fileNameTag(const std::vector<std::string> &tags) {$/;"	f	namespace:Catch::__anoneadae3b60110	typeref:typename:std::string
filelocParser	misc/deps/catch2/scripts/approvalTests.py	/^filelocParser = re.compile(r'''$/;"	v
filename	misc/deps/catch2/scripts/embedClara.py	/^filename = os.path.join( rootPath, "third_party", "clara.hpp" )$/;"	v
filenamesAsTags	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool filenamesAsTags = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
fileno	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    #define fileno /;"	d	file:
files	misc/deps/catch2/scripts/approve.py	/^    files = [os.path.join( rootPath, f ) for f in sys.argv[1:]]$/;"	v
files	misc/deps/catch2/scripts/benchmarkCompile.py	/^files = 20$/;"	v
filter	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    GeneratorWrapper<T> filter(Predicate&& pred, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<T>
filterLine	misc/deps/catch2/scripts/approvalTests.py	/^def filterLine(line, isCompact):$/;"	f
filterTests	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCase> filterTests( std::vector<TestCase> const& testCases, TestSpec const& t/;"	f	namespace:Catch	typeref:typename:std::vector<TestCase>
finalizeDescription	misc/deps/catch2/include/internal/catch_matchers_generic.cpp	/^std::string Catch::Matchers::Generic::Detail::finalizeDescription(const std::string& desc) {$/;"	f	class:Catch::Matchers::Generic::Detail	typeref:typename:std::string
find	misc/deps/catch2/include/internal/catch_tag_alias_registry.cpp	/^    TagAlias const* TagAliasRegistry::find( std::string const& alias ) const {$/;"	f	class:Catch::TagAliasRegistry	typeref:typename:TagAlias const *
findChild	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    ITrackerPtr TrackerBase::findChild( NameAndLocation const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:ITrackerPtr
findMax	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^std::size_t& findMax(std::size_t& i, std::size_t& j, std::size_t& k) {$/;"	f	namespace:Catch::__anon99a91d3f0110	typeref:typename:std::size_t &
find_by_ext	misc/Makefile	/^define find_by_ext$/;"	m
finish	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^                void finish() override { finished = Clock::now(); }$/;"	f	struct:Catch::Benchmark::Detail::ChronometerModel	typeref:typename:void
finish	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        void finish() override { ++finished; }$/;"	f	struct:__anon7f22177c0110::TestChronometerModel	typeref:typename:void	file:
finished	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^                TimePoint<Clock> finished;$/;"	m	struct:Catch::Benchmark::Detail::ChronometerModel	typeref:typename:TimePoint<Clock>
finished	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        int finished = 0;$/;"	m	struct:__anon7f22177c0110::TestChronometerModel	typeref:typename:int	file:
fixAllFilesInDir	misc/deps/catch2/scripts/fixWhitespace.py	/^def fixAllFilesInDir( dir ):$/;"	f
fixFile	misc/deps/catch2/scripts/fixWhitespace.py	/^def fixFile( path ):$/;"	f
fixed_test	misc/tests/ft_memory/calloc.cpp	/^fixed_test (int size)$/;"	f	typeref:typename:void	file:
flags	misc/deps/catch2/scripts/benchmarkCompile.py	/^    flags = args.flags.split(',')$/;"	v
flags	misc/deps/catch2/scripts/benchmarkCompile.py	/^flags = []$/;"	v
float_nine_point_one	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    float float_nine_point_one = 9.1f;$/;"	m	struct:__anon8b7f96210110::ConditionTests::TestData	typeref:typename:float	file:
foo	misc/deps/catch2/projects/ExtraTests/X02-DisabledMacros.cpp	/^    foo(){$/;"	f	struct:foo	file:
foo	misc/deps/catch2/projects/ExtraTests/X02-DisabledMacros.cpp	/^struct foo {$/;"	s	file:
foo	misc/deps/catch2/projects/ExtraTests/X10-FallbackStringifier.cpp	/^struct foo {$/;"	s	file:
foo	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct foo {$/;"	s	namespace:__anonb1aeb3b90110::CompilationTests	file:
foo	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^namespace foo {$/;"	n	file:
foo	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^inline void foo() {}$/;"	f	typeref:typename:void
fooptr_t	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^typedef void (*fooptr_t)();$/;"	t	typeref:typename:void (*)()	file:
form_feed	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        char form_feed = '\\f';$/;"	v	typeref:typename:char
formatReconstructedExpression	misc/deps/catch2/include/internal/catch_decomposer.cpp	/^    void formatReconstructedExpression( std::ostream &os, std::string const& lhs, StringRef op, /;"	f	namespace:Catch	typeref:typename:void
fortytwo	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    int fortytwo() const {$/;"	f	struct:Fixture	typeref:typename:int	file:
fpToString	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string fpToString( T value, int precision ) {$/;"	f	namespace:Catch	typeref:typename:std::string
fp_seconds	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^        using fp_seconds = std::chrono::duration<double, std::ratio<1>>;$/;"	t	namespace:Catch::Benchmark	typeref:typename:std::chrono::duration<double,std::ratio<1>>
fptr	misc/deps/catch2/projects/SelfTest/UsageTests/Decomposition.tests.cpp	/^    FILE* fptr = nullptr;$/;"	v	typeref:typename:FILE *
from	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto from = std::get<0>(extent);$/;"	v	typeref:typename:auto
from_range	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^GeneratorWrapper<ResultType> from_range(Container const& cnt) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<ResultType>
from_range	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^GeneratorWrapper<ResultType> from_range(InputIterator from, InputSentinel to) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<ResultType>
ft_atoi	src/ft_string/ft_atoi.c	/^int         ft_atoi(const char *str)$/;"	f	typeref:typename:int
ft_atol	src/ft_string/ft_atol.c	/^long         ft_atol(const char *str)$/;"	f	typeref:typename:long
ft_atoll	src/ft_string/ft_atoll.c	/^long long		ft_atoll(const char *str)$/;"	f	typeref:typename:long long
ft_bytes_digits	src/ft_memory/ft_bytes_digits.c	/^unsigned int    ft_bytes_digits(size_t bytes)$/;"	f	typeref:typename:unsigned int
ft_bzero	src/ft_memory/ft_bzero.c	/^void    ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void
ft_calloc	src/ft_memory/ft_calloc.c	/^void        *ft_calloc(size_t nmemb, size_t size) {$/;"	f	typeref:typename:void *
ft_count_occ	src/ft_string/ft_count_occ.c	/^unsigned int    ft_count_occ(const char *s, char c)$/;"	f	typeref:typename:unsigned int
ft_free_until	src/ft_memory/ft_freea.c	/^void        ft_free_until(void **array, void *end)$/;"	f	typeref:typename:void
ft_is_char_in	src/ft_string/ft_is_char_in.c	/^t_bool       ft_is_char_in(char c, char const *str)$/;"	f	typeref:typename:t_bool
ft_isalnum	src/ft_string/ft_isalnum.c	/^int         ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	src/ft_string/ft_isalpha.c	/^int         ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	src/ft_string/ft_isascii.c	/^int         ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	src/ft_string/ft_isdigit.c	/^int         ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_islower	src/ft_string/ft_islower.c	/^int         ft_islower(int c)$/;"	f	typeref:typename:int
ft_isprint	src/ft_string/ft_isprint.c	/^int         ft_isprint(int c)$/;"	f	typeref:typename:int
ft_isspace	src/ft_string/ft_isspace.c	/^int	ft_isspace(int c)$/;"	f	typeref:typename:int
ft_isupper	src/ft_string/ft_isupper.c	/^int         ft_isupper(int c)$/;"	f	typeref:typename:int
ft_itoa	src/ft_string/ft_itoa.c	/^char        *ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	src_bonus/ft_list/ft_lstadd_back.c	/^void ft_lstadd_back(t_list **alst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	src_bonus/ft_list/ft_lstadd_front.c	/^void ft_lstadd_front(t_list **alst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	src_bonus/ft_list/ft_lstclear.c	/^void ft_lstclear(t_list **lst, void (*del)(void*))$/;"	f	typeref:typename:void
ft_lstdelone	src_bonus/ft_list/ft_lstdelone.c	/^void ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f	typeref:typename:void
ft_lstiter	src_bonus/ft_list/ft_lstiter.c	/^void ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	src_bonus/ft_list/ft_lstlast.c	/^t_list      *ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	src_bonus/ft_list/ft_lstmap.c	/^t_list *ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	src_bonus/ft_list/ft_lstnew.c	/^t_list *ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	src_bonus/ft_list/ft_lstsize.c	/^int     ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memccpy	src/ft_memory/ft_memccpy.c	/^void    *ft_memccpy(void *dest, const void *src, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memchr	src/ft_memory/ft_memchr.c	/^void    *ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	src/ft_memory/ft_memcmp.c	/^int     ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	src/ft_memory/ft_memcpy.c	/^void    *ft_memcpy(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	src/ft_memory/ft_memmove.c	/^void    *ft_memmove(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memset	src/ft_memory/ft_memset.c	/^void    *ft_memset(void *s, int c, size_t len)$/;"	f	typeref:typename:void *
ft_numlen	src/ft_memory/ft_numlen.c	/^unsigned short     ft_numlen(int n)$/;"	f	typeref:typename:unsigned short
ft_putchar	src/ft_io/ft_putchar.c	/^void    ft_putchar(char c)$/;"	f	typeref:typename:void
ft_putchar_fd	src/ft_io/ft_putchar_fd.c	/^void ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl	src/ft_io/ft_putendl.c	/^void ft_putendl(char *s)$/;"	f	typeref:typename:void
ft_putendl_fd	src/ft_io/ft_putendl_fd.c	/^void ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr	src/ft_io/ft_putnbr.c	/^void ft_putnbr(int n)$/;"	f	typeref:typename:void
ft_putnbr_fd	src/ft_io/ft_putnbr_fd.c	/^void ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr	src/ft_io/ft_putstr.c	/^void    ft_putstr(char *s)$/;"	f	typeref:typename:void
ft_putstr_fd	src/ft_io/ft_putstr_fd.c	/^void ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_read	src/ft_io/ft_read.c	/^char    *ft_read(char delimiter)$/;"	f	typeref:typename:char *
ft_read_fd	src/ft_io/ft_read_fd.c	/^char    *ft_read_fd(char delimiter, int fd)$/;"	f	typeref:typename:char *
ft_realloc	src/ft_memory/ft_realloc.c	/^void    *ft_realloc(void *ptr, size_t size)$/;"	f	typeref:typename:void *
ft_split	src/ft_string/ft_split.c	/^char            **ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strchr	src/ft_string/ft_strchr.c	/^char        *ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strcpy	src/ft_string/ft_strcpy.c	/^char        *ft_strcpy(char *dst, const char *src)$/;"	f	typeref:typename:char *
ft_strdup	src/ft_string/ft_strdup.c	/^char    *ft_strdup(const char *src)$/;"	f	typeref:typename:char *
ft_strjoin	src/ft_string/ft_strjoin.c	/^char *ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	src/ft_string/ft_strlcat.c	/^size_t      ft_strlcat(char *dst, const	char *src, size_t dstsize)$/;"	f	typeref:typename:size_t
ft_strlcpy	src/ft_string/ft_strlcpy.c	/^size_t      ft_strlcpy(char *dest, const char *src, size_t len)$/;"	f	typeref:typename:size_t
ft_strlen	src/ft_string/ft_strlen.c	/^size_t		ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
ft_strmapi	src/ft_string/ft_strmapi.c	/^char    *ft_strmapi(const char *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	src/ft_string/ft_strncmp.c	/^int         ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnlen	src/ft_string/ft_strnlen.c	/^size_t		ft_strnlen(const char *s, size_t maxlen)$/;"	f	typeref:typename:size_t
ft_strnstr	src/ft_string/ft_strnstr.c	/^char    *ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	src/ft_string/ft_strrchr.c	/^char        *ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	src/ft_string/ft_strtrim.c	/^char                *ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_strtrim_begin	src/ft_string/ft_trim_begin.c	/^char         *ft_strtrim_begin(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_strtrim_end	src/ft_string/ft_trim_end.c	/^char         *ft_strtrim_end(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	src/ft_string/ft_substr.c	/^char        *ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	src/ft_string/ft_tolower.c	/^int         ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	src/ft_string/ft_toupper.c	/^int         ft_toupper(int c)$/;"	f	typeref:typename:int
fullConfig	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    IConfigPtr ReporterConfig::fullConfig() const { return m_fullConfig; }$/;"	f	class:Catch::ReporterConfig	typeref:typename:IConfigPtr
fun	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^            Detail::BenchmarkFunction fun;$/;"	m	struct:Catch::Benchmark::Benchmark	typeref:typename:Detail::BenchmarkFunction
fun	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                    Fun fun;$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction::model	typeref:typename:Fun
fun	misc/deps/catch2/include/internal/benchmark/detail/catch_repeat.hpp	/^                Fun fun;$/;"	m	struct:Catch::Benchmark::Detail::repeater	typeref:typename:Fun
g_false	inc/ft_bool.h	/^{g_false, g_true}		t_bool;$/;"	e	enum:e_bool
g_true	inc/ft_bool.h	/^{g_false, g_true}		t_bool;$/;"	e	enum:e_bool
gcov	misc/deps/catch2/CMake/FindGcov.cmake	/^	add_custom_target(gcov)$/;"	t
gdb and lldb scripts	misc/deps/catch2/docs/ci-and-misc.md	/^### gdb and lldb scripts$/;"	S
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^                    auto gen = range(-7, 4, 3);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^                    auto gen = range(-7, 5, 3);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^                    auto gen = range(-7, 6, 3);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^                    auto gen = range(5, -6, -3);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^                    auto gen = range(5, -7, -3);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^                    auto gen = range(5, -8, -3);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^                auto gen = range(-2, 2);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^                auto gen = range(2, -2);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^            auto gen = repeat(1, value(3));$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^            auto gen = repeat(2, values({ 1, 2, 3 }));$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^            auto gen = take(2, value(1));$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^            auto gen = take(2, values({ 1, 2, 3 }));$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = filter([] (int i) { return i != 2; }, values({ 2, 1, 2, 3, 2, 2 }));$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = makeGenerators(1, 5, values({ 2, 4 }), 0);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = makeGenerators(as<std::string>{}, "aa", "bb", "cc");$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = map([] (int i) {return 2.0 * i; }, values({ 1, 2, 3 }));$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = map<double>([] (int i) {return 2.0 * i; }, values({ 1, 2, 3 }));$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = value(123);$/;"	v	typeref:typename:auto
gen	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto gen = values({ 1, 3, 5 });$/;"	v	typeref:typename:auto
generate	misc/deps/catch2/include/internal/catch_generators.hpp	/^    auto generate( SourceLineInfo const& lineInfo, L const& generatorExpression ) -> decltype(st/;"	f	namespace:Catch::Generators	typeref:typename:decltype (std::declval<decltype (generatorExpression ())> ().get ())
generate	misc/deps/catch2/scripts/generateSingleHeader.py	/^def generate(v):$/;"	f
generate_file	misc/deps/catch2/scripts/benchmarkCompile.py	/^def generate_file(file_no):$/;"	f
generate_files	misc/deps/catch2/scripts/benchmarkCompile.py	/^def generate_files():$/;"	f
generate_sections	misc/deps/catch2/scripts/benchmarkCompile.py	/^def generate_sections(fd):$/;"	f
generated	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^        auto generated = GENERATE(range(0, 10));$/;"	v	typeref:typename:auto
generated	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^        auto generated = GENERATE(range(0, 10));$/;"	v	typeref:typename:auto
generators	misc/deps/catch2/.conan/test_package/conanfile.py	/^    generators = "cmake"$/;"	v	class:TestPackageConan
generators	misc/deps/catch2/conanfile.py	/^    generators = "cmake"$/;"	v	class:CatchConan
get	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^int const& RandomIntGenerator::get() const {$/;"	f	class:RandomIntGenerator	typeref:typename:int const &
get	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^    std::string const& get() const override {$/;"	f	class:LineGenerator	typeref:typename:std::string const &	file:
get	misc/deps/catch2/include/internal/catch_generators.hpp	/^        T const& get() const override {$/;"	f	class:Catch::Generators::FixedValuesGenerator	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators.hpp	/^        T const& get() const override {$/;"	f	class:Catch::Generators::Generators	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators.hpp	/^        T const& get() const override {$/;"	f	class:Catch::Generators::SingleValueGenerator	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators.hpp	/^        T const& get() const {$/;"	f	class:Catch::Generators::GeneratorWrapper	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        T const& get() const override {$/;"	f	class:Catch::Generators::FilterGenerator	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        T const& get() const override {$/;"	f	class:Catch::Generators::MapGenerator	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        T const& get() const override {$/;"	f	class:Catch::Generators::RepeatGenerator	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        T const& get() const override {$/;"	f	class:Catch::Generators::TakeGenerator	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        std::vector<T> const& get() const override {$/;"	f	class:Catch::Generators::ChunkGenerator	typeref:typename:std::vector<T> const &
get	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    Float const& get() const override {$/;"	f	class:Catch::Generators::RandomFloatingGenerator	typeref:typename:Float const &
get	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    Integer const& get() const override {$/;"	f	class:Catch::Generators::RandomIntegerGenerator	typeref:typename:Integer const &
get	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    T const& get() const override {$/;"	f	class:Catch::Generators::IteratorGenerator	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    T const& get() const override {$/;"	f	class:Catch::Generators::RangeGenerator	typeref:typename:T const &
get	misc/deps/catch2/include/internal/catch_singletons.hpp	/^        static auto get() -> InterfaceT const& {$/;"	f	class:Catch::Singleton	typeref:typename:InterfaceT const &
get	misc/deps/catch2/include/internal/catch_stream.h	/^        auto get() -> std::ostream& { return *m_oss; }$/;"	f	class:Catch::ReusableStringStream	typeref:typename:std::ostream &
get	misc/deps/catch2/include/internal/catch_tag_alias_registry.cpp	/^    ITagAliasRegistry const& ITagAliasRegistry::get() {$/;"	f	class:Catch::ITagAliasRegistry	typeref:typename:ITagAliasRegistry const &
get	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^int const& TestGen::get() const {$/;"	f	class:__anon78e517e00510::TestGen	typeref:typename:int const &
get	misc/deps/catch2/single_include/catch2/catch.hpp	/^        auto get() -> std::ostream& { return *m_oss; }$/;"	f	class:Catch::ReusableStringStream	typeref:typename:std::ostream &
getAllTestCasesSorted	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCase> const& getAllTestCasesSorted( IConfig const& config ) {$/;"	f	namespace:Catch	typeref:typename:std::vector<TestCase> const &
getAllTests	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCase> const& TestRegistry::getAllTests() const {$/;"	f	class:Catch::TestRegistry	typeref:typename:std::vector<TestCase> const &
getAllTestsSorted	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCase> const& TestRegistry::getAllTestsSorted( IConfig const& config ) const /;"	f	class:Catch::TestRegistry	typeref:typename:std::vector<TestCase> const &
getAnnotation	misc/deps/catch2/include/internal/catch_objc.hpp	/^        inline std::string getAnnotation(   Class cls,$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
getBuildExecutable	misc/deps/catch2/scripts/scriptCommon.py	/^def getBuildExecutable():$/;"	f
getConfig	misc/deps/catch2/include/internal/catch_context.cpp	/^        IConfigPtr const& getConfig() const override {$/;"	f	class:Catch::Context	typeref:typename:IConfigPtr const &	file:
getContents	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    std::string TempFile::getContents() {$/;"	f	class:Catch::TempFile	typeref:typename:std::string
getCurrentContext	misc/deps/catch2/include/internal/catch_context.h	/^    inline IContext& getCurrentContext()$/;"	f	namespace:Catch	typeref:typename:IContext &
getCurrentMutableContext	misc/deps/catch2/include/internal/catch_context.h	/^    inline IMutableContext& getCurrentMutableContext()$/;"	f	namespace:Catch	typeref:typename:IMutableContext &
getCurrentNanosecondsSinceEpoch	misc/deps/catch2/include/internal/catch_timer.cpp	/^    auto getCurrentNanosecondsSinceEpoch() -> uint64_t {$/;"	f	namespace:Catch	typeref:typename:uint64_t
getCurrentTestName	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    std::string RunContext::getCurrentTestName() const {$/;"	f	class:Catch::RunContext	typeref:typename:std::string
getCurrentTimestamp	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^        std::string getCurrentTimestamp() {$/;"	f	namespace:Catch::__anoneadae3b60110	typeref:typename:std::string
getDescription	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^            std::string getDescription() const override {$/;"	f	class:Catch::ListenerRegistrar::ListenerFactory	typeref:typename:std::string
getDescription	misc/deps/catch2/include/internal/catch_reporter_registrars.hpp	/^            std::string getDescription() const override {$/;"	f	class:Catch::ReporterRegistrar::ReporterFactory	typeref:typename:std::string
getDescription	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^        std::string CompactReporter::getDescription() {$/;"	f	class:Catch::CompactReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^std::string ConsoleReporter::getDescription() {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    std::string JunitReporter::getDescription() {$/;"	f	class:Catch::JunitReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::TAPReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    std::string XmlReporter::getDescription() {$/;"	f	class:Catch::XmlReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::TAPReporter	typeref:typename:std::string
getDescription	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:std::string
getElapsedMicroseconds	misc/deps/catch2/include/internal/catch_timer.cpp	/^    auto Timer::getElapsedMicroseconds() const -> uint64_t {$/;"	f	class:Catch::Timer	typeref:typename:uint64_t
getElapsedMilliseconds	misc/deps/catch2/include/internal/catch_timer.cpp	/^    auto Timer::getElapsedMilliseconds() const -> unsigned int {$/;"	f	class:Catch::Timer	typeref:typename:unsigned int
getElapsedNanoseconds	misc/deps/catch2/include/internal/catch_timer.cpp	/^    auto Timer::getElapsedNanoseconds() const -> uint64_t {$/;"	f	class:Catch::Timer	typeref:typename:uint64_t
getElapsedSeconds	misc/deps/catch2/include/internal/catch_timer.cpp	/^    auto Timer::getElapsedSeconds() const -> double {$/;"	f	class:Catch::Timer	typeref:typename:double
getEstimatedClockResolution	misc/deps/catch2/include/internal/catch_timer.cpp	/^    auto getEstimatedClockResolution() -> uint64_t {$/;"	f	namespace:Catch	typeref:typename:uint64_t
getExceptionTranslatorRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            IExceptionTranslatorRegistry const& getExceptionTranslatorRegistry() const override /;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:IExceptionTranslatorRegistry const &	file:
getExceptions	misc/deps/catch2/include/internal/catch_startup_exception_registry.cpp	/^    std::vector<std::exception_ptr> const& StartupExceptionRegistry::getExceptions() const noexc/;"	f	class:Catch::StartupExceptionRegistry	typeref:typename:std::vector<std::exception_ptr> const &
getExpandedExpression	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    std::string AssertionResult::getExpandedExpression() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:std::string
getExpression	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    std::string AssertionResult::getExpression() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:std::string
getExpressionInMacro	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    std::string AssertionResult::getExpressionInMacro() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:std::string
getFactories	misc/deps/catch2/include/internal/catch_reporter_registry.cpp	/^    IReporterRegistry::FactoryMap const& ReporterRegistry::getFactories() const {$/;"	f	class:Catch::ReporterRegistry	typeref:typename:IReporterRegistry::FactoryMap const &
getFile	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    FILE* TempFile::getFile() {$/;"	f	class:Catch::TempFile	typeref:typename:FILE *
getFilename	misc/deps/catch2/include/internal/catch_config.cpp	/^    std::string const& Config::getFilename() const {$/;"	f	class:Catch::Config	typeref:typename:std::string const &
getFormattedDuration	misc/deps/catch2/include/reporters/catch_reporter_bases.cpp	/^    std::string getFormattedDuration( double duration ) {$/;"	f	namespace:Catch	typeref:typename:std::string
getGenerator	misc/deps/catch2/include/internal/catch_run_context.cpp	/^            auto getGenerator() const -> GeneratorBasePtr const& override {$/;"	f	struct:Catch::Generators::GeneratorTracker	typeref:typename:GeneratorBasePtr const & override	file:
getHelpColumns	misc/deps/catch2/include/external/clara.hpp	/^        auto getHelpColumns() const -> std::vector<HelpColumns> {$/;"	f	class:Catch::clara::detail::Opt	typeref:typename:std::vector<HelpColumns>
getHelpColumns	misc/deps/catch2/include/external/clara.hpp	/^        auto getHelpColumns() const -> std::vector<HelpColumns> {$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:std::vector<HelpColumns>
getHelpColumns	misc/deps/catch2/third_party/clara.hpp	/^        auto getHelpColumns() const -> std::vector<HelpColumns> {$/;"	f	class:clara::detail::Opt	typeref:typename:std::vector<HelpColumns>
getHelpColumns	misc/deps/catch2/third_party/clara.hpp	/^        auto getHelpColumns() const -> std::vector<HelpColumns> {$/;"	f	struct:clara::detail::Parser	typeref:typename:std::vector<HelpColumns>
getID	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^    int getID() {$/;"	f	class:UniqueTestsFixture	typeref:typename:int	file:
getInternal	misc/deps/catch2/include/internal/catch_singletons.hpp	/^        static auto getInternal() -> Singleton* {$/;"	f	class:Catch::Singleton	typeref:typename:Singleton *
getInvalidArgs	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    const TestSpec::vectorStrings& TestSpec::getInvalidArgs() const{$/;"	f	class:Catch::TestSpec	typeref:typename:const TestSpec::vectorStrings &
getIssueTitle	misc/deps/catch2/scripts/releaseNotes.py	/^def getIssueTitle( issueNumber ):$/;"	f
getLastResult	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    const AssertionResult * RunContext::getLastResult() const {$/;"	f	class:Catch::RunContext	typeref:typename:const AssertionResult *
getLineOfChars	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^    char const* getLineOfChars() {$/;"	f	namespace:Catch	typeref:typename:char const *
getListeners	misc/deps/catch2/include/internal/catch_reporter_registry.cpp	/^    IReporterRegistry::Listeners const& ReporterRegistry::getListeners() const {$/;"	f	class:Catch::ReporterRegistry	typeref:typename:IReporterRegistry::Listeners const &
getMessage	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    std::string AssertionResult::getMessage() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:std::string
getMessage	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^    std::string getMessage() const {$/;"	f	class:__anon7fc805e90110::ExceptionTests::CustomException	typeref:typename:std::string	file:
getMessage	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^    std::string getMessage() const {$/;"	f	class:__anon7fc805e90110::ExceptionTests::CustomStdException	typeref:typename:std::string	file:
getMutable	misc/deps/catch2/include/internal/catch_singletons.hpp	/^        static auto getMutable() -> MutableInterfaceT& {$/;"	f	class:Catch::Singleton	typeref:typename:MutableInterfaceT &
getMutableEnumValuesRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            IMutableEnumValuesRegistry& getMutableEnumValuesRegistry() override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:IMutableEnumValuesRegistry &	file:
getMutableRegistryHub	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^    IMutableRegistryHub& getMutableRegistryHub() {$/;"	f	namespace:Catch	typeref:typename:IMutableRegistryHub &
getPreferences	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        ReporterPreferences getPreferences() const override {$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:ReporterPreferences
getPreferences	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        ReporterPreferences getPreferences() const override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:ReporterPreferences
getPreferences	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^        ReporterPreferences CompactReporter::getPreferences() const {$/;"	f	class:Catch::CompactReporter	typeref:typename:ReporterPreferences
getPreferences	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    ReporterPreferences ListeningReporter::getPreferences() const {$/;"	f	class:Catch::ListeningReporter	typeref:typename:ReporterPreferences
getPreferences	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        ReporterPreferences getPreferences() const override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:ReporterPreferences
getPreferences	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        ReporterPreferences getPreferences() const override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:ReporterPreferences
getProcessName	misc/deps/catch2/include/internal/catch_config.cpp	/^    std::string Config::getProcessName() const { return m_data.processName; }$/;"	f	class:Catch::Config	typeref:typename:std::string
getRegistryHub	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^    IRegistryHub const& getRegistryHub() {$/;"	f	namespace:Catch	typeref:typename:IRegistryHub const &
getReporterName	misc/deps/catch2/include/internal/catch_config.cpp	/^    std::string const& Config::getReporterName() const { return m_data.reporterName; }$/;"	f	class:Catch::Config	typeref:typename:std::string const &
getReporterRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            IReporterRegistry const& getReporterRegistry() const override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:IReporterRegistry const &	file:
getResult	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto getResult() const -> bool { return m_result; }$/;"	f	struct:Catch::ITransientExpression	typeref:typename:bool
getResultCapture	misc/deps/catch2/include/internal/catch_context.cpp	/^        IResultCapture* getResultCapture() override {$/;"	f	class:Catch::Context	typeref:typename:IResultCapture *	file:
getResultCapture	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    IResultCapture& getResultCapture() {$/;"	f	namespace:Catch	typeref:typename:IResultCapture &
getResultType	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    ResultWas::OfType AssertionResult::getResultType() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:ResultWas::OfType
getRunner	misc/deps/catch2/include/internal/catch_context.cpp	/^        IRunner* getRunner() override {$/;"	f	class:Catch::Context	typeref:typename:IRunner *	file:
getSectionsToRun	misc/deps/catch2/include/internal/catch_config.cpp	/^    std::vector<std::string> const& Config::getSectionsToRun() const { return m_data.sectionsToR/;"	f	class:Catch::Config	typeref:typename:std::vector<std::string> const &
getSingletons	misc/deps/catch2/include/internal/catch_singletons.cpp	/^        static auto getSingletons() -> std::vector<ISingleton*>*& {$/;"	f	namespace:Catch::__anon761396770110	typeref:typename:std::vector<ISingleton * > * &	file:
getSourceInfo	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    SourceLineInfo AssertionResult::getSourceInfo() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:SourceLineInfo
getStartupExceptionRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            StartupExceptionRegistry const& getStartupExceptionRegistry() const override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:StartupExceptionRegistry const &	file:
getStylesheetRef	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    std::string XmlReporter::getStylesheetRef() const {$/;"	f	class:Catch::XmlReporter	typeref:typename:std::string
getSupportedVerbosities	misc/deps/catch2/include/reporters/catch_reporter_bases.cpp	/^    std::set<Verbosity> TestEventListenerBase::getSupportedVerbosities() {$/;"	f	class:Catch::TestEventListenerBase	typeref:typename:std::set<Verbosity>
getSupportedVerbosities	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        static std::set<Verbosity> getSupportedVerbosities() {$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:std::set<Verbosity>
getSupportedVerbosities	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        static std::set<Verbosity> getSupportedVerbosities() {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:std::set<Verbosity>
getSupportedVerbosities	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    std::set<Verbosity> ListeningReporter::getSupportedVerbosities() {$/;"	f	class:Catch::ListeningReporter	typeref:typename:std::set<Verbosity>
getTagAliasRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            ITagAliasRegistry const& getTagAliasRegistry() const override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:ITagAliasRegistry const &	file:
getTestCaseInfo	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    TestCaseInfo const& TestCase::getTestCaseInfo() const$/;"	f	class:Catch::TestCase	typeref:typename:TestCaseInfo const &
getTestCaseRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            ITestCaseRegistry const& getTestCaseRegistry() const override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:ITestCaseRegistry const &	file:
getTestMacroName	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    StringRef AssertionResult::getTestMacroName() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:StringRef
getTestsOrTags	misc/deps/catch2/include/internal/catch_config.cpp	/^    std::vector<std::string> const& Config::getTestsOrTags() const { return m_data.testsOrTags; /;"	f	class:Catch::Config	typeref:typename:std::vector<std::string> const &
getVersionString	misc/deps/catch2/scripts/releaseCommon.py	/^    def getVersionString(self):$/;"	m	class:Version
get_commit_hash	misc/deps/catch2/scripts/benchmarkRunner.py	/^def get_commit_hash():$/;"	f
globalCount	misc/deps/catch2/include/internal/catch_message.cpp	/^    unsigned int MessageInfo::globalCount = 0;$/;"	m	class:Catch::MessageInfo	typeref:typename:unsigned int
globalCount	misc/deps/catch2/include/internal/catch_message.h	/^        static unsigned int globalCount;$/;"	m	struct:Catch::MessageInfo	typeref:typename:unsigned int
greater	misc/tests/ft_memory/memcmp.cpp	/^	int greater, lessthan, equal, greater2, lessthan2, equal2;$/;"	v	typeref:typename:int
greater2	misc/tests/ft_memory/memcmp.cpp	/^	int greater, lessthan, equal, greater2, lessthan2, equal2;$/;"	v	typeref:typename:int
groupIndex	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::size_t groupIndex;$/;"	m	struct:Catch::GroupInfo	typeref:typename:std::size_t
groupInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        GroupInfo groupInfo;$/;"	m	struct:Catch::TestGroupStats	typeref:typename:GroupInfo
groupsCounts	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::size_t groupsCounts;$/;"	m	struct:Catch::GroupInfo	typeref:typename:std::size_t
guaranteeSize	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^ULONG FatalConditionHandler::guaranteeSize = 0;$/;"	m	class:Catch::FatalConditionHandler	typeref:typename:ULONG
guaranteeSize	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^        static ULONG guaranteeSize;$/;"	m	struct:Catch::FatalConditionHandler	typeref:typename:ULONG
half_minute	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    std::chrono::duration<int64_t, std::ratio<30>> half_minute(1);$/;"	v	typeref:typename:std::chrono::duration<int64_t,std::ratio<30>>
handleExceptionMatchExpr	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, std::string const& str, StringRef /;"	f	namespace:Catch	typeref:typename:void
handleExceptionMatchExpr	misc/deps/catch2/include/internal/catch_capture_matchers.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, StringMatcher const& matcher, Stri/;"	f	namespace:Catch	typeref:typename:void
handleExceptionNotThrownAsExpected	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::handleExceptionNotThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
handleExceptionThrownAsExpected	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::handleExceptionThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
handleExpr	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::handleExpr( ITransientExpression const& expr ) {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
handleExpr	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        void handleExpr( ExprLhs<T> const& expr ) {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
handleExpr	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::handleExpr($/;"	f	class:Catch::RunContext	typeref:typename:void
handleExpression	misc/deps/catch2/include/internal/catch_decomposer.h	/^    void handleExpression( ExprLhs<T> const& expr ) {$/;"	f	namespace:Catch	typeref:typename:void
handleFatalErrorCondition	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::handleFatalErrorCondition( StringRef message ) {$/;"	f	class:Catch::RunContext	typeref:typename:void
handleIncomplete	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::handleIncomplete($/;"	f	class:Catch::RunContext	typeref:typename:void
handleMessage	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::handleMessage(ResultWas::OfType resultType, StringRef const& message)/;"	f	class:Catch::AssertionHandler	typeref:typename:void
handleMessage	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::handleMessage($/;"	f	class:Catch::RunContext	typeref:typename:void
handleNonExpr	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::handleNonExpr($/;"	f	class:Catch::RunContext	typeref:typename:void
handleSignal	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    void FatalConditionHandler::handleSignal( int sig ) {$/;"	f	class:Catch::FatalConditionHandler	typeref:typename:void
handleThrowingCallSkipped	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::handleThrowingCallSkipped() {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
handleUnexpectedExceptionNotThrown	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::handleUnexpectedExceptionNotThrown() {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
handleUnexpectedExceptionNotThrown	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::handleUnexpectedExceptionNotThrown($/;"	f	class:Catch::RunContext	typeref:typename:void
handleUnexpectedInflightException	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::handleUnexpectedInflightException() {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
handleUnexpectedInflightException	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::handleUnexpectedInflightException($/;"	f	class:Catch::RunContext	typeref:typename:void
handleUnfinishedSections	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::handleUnfinishedSections() {$/;"	f	class:Catch::RunContext	typeref:typename:void
handleVectoredException	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    LONG CALLBACK FatalConditionHandler::handleVectoredException(PEXCEPTION_POINTERS ExceptionIn/;"	f	class:Catch::FatalConditionHandler	typeref:typename:LONG CALLBACK
hasChildren	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool TrackerBase::hasChildren() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:bool
hasExpandedExpression	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    bool AssertionResult::hasExpandedExpression() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:bool
hasExpression	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    bool AssertionResult::hasExpression() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:bool
hasFilters	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    bool TestSpec::hasFilters() const {$/;"	f	class:Catch::TestSpec	typeref:typename:bool
hasGenerator	misc/deps/catch2/include/internal/catch_run_context.cpp	/^            auto hasGenerator() const -> bool override {$/;"	f	struct:Catch::Generators::GeneratorTracker	typeref:typename:bool override	file:
hasMessage	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    bool AssertionResult::hasMessage() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:bool
hasTestFilters	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::hasTestFilters() const { return m_hasTestFilters; }$/;"	f	class:Catch::Config	typeref:typename:bool
has_maker	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_maker {};$/;"	s	namespace:__anonfad788a70110	file:
has_maker_and_operator	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_maker_and_operator {};$/;"	s	namespace:__anonfad788a70110	file:
has_neither	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_neither {};$/;"	s	namespace:__anonfad788a70110	file:
has_operator	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_operator { };$/;"	s	namespace:__anonfad788a70110	file:
has_template_operator	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_template_operator {};$/;"	s	namespace:__anonfad788a70110	file:
hashes	misc/deps/catch2/scripts/releaseNotes.py	/^hashes = runAndCapture( ['git', 'log', '-2', '--format="%H"', versionPath] )$/;"	v
headerValue	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    uint32_t headerValue(unsigned char c) {$/;"	f	namespace:Catch::__anon24bf8fff0110	typeref:typename:uint32_t
headingExcludeDefault	misc/deps/catch2/scripts/updateDocumentToC.py	/^headingExcludeDefault = [1,3,4,5]  # use level 2 headers for at default$/;"	v
headingExcludeRelease	misc/deps/catch2/scripts/updateDocumentToC.py	/^headingExcludeRelease = [1,3,4,5]  # use level 1 headers for release-notes.md$/;"	v
helper_1403	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct helper_1403 {$/;"	s	namespace:foo	file:
helper_1436	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    helper_1436(T1 t1_, T2 t2_):$/;"	f	struct:helper_1436	file:
helper_1436	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^struct helper_1436 {$/;"	s	file:
hexEscapeChar	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    void hexEscapeChar(std::ostream& os, unsigned char c) {$/;"	f	namespace:Catch::__anon24bf8fff0110	typeref:typename:void
hexParser	misc/deps/catch2/scripts/approvalTests.py	/^hexParser = re.compile(r'\\b(0[xX][0-9a-fA-F]+)\\b')$/;"	v
hexThreshold	misc/deps/catch2/include/internal/catch_tostring.cpp	/^        const int hexThreshold = 255;$/;"	v	namespace:Catch::Detail::__anon55f5ca2b0110	typeref:typename:const int
high_mild	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^            int high_mild = 0;      \/\/ 1.5 to 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification	typeref:typename:int
high_severe	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^            int high_severe = 0;    \/\/ more than 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification	typeref:typename:int
hint	misc/deps/catch2/include/external/clara.hpp	/^        auto hint() const -> std::string { return m_hint; }$/;"	f	class:Catch::clara::detail::ParserRefImpl	typeref:typename:std::string
hint	misc/deps/catch2/third_party/clara.hpp	/^        auto hint() const -> std::string { return m_hint; }$/;"	f	class:clara::detail::ParserRefImpl	typeref:typename:std::string
homepage	misc/deps/catch2/conanfile.py	/^    homepage = url$/;"	v	class:CatchConan
hour	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto hour = std::chrono::hours(1);$/;"	v	typeref:typename:auto
i	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    int i = 42;$/;"	v	typeref:typename:int
i	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^        auto i = GENERATE(take(100, GeneratorWrapper<int>(std::unique_ptr<IGenerator<int>>(new R/;"	v	typeref:typename:auto
i	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^        auto i = GENERATE(take(100, random(-100, 100)));$/;"	v	typeref:typename:auto
i	misc/deps/catch2/projects/ExtraTests/X01-PrefixedMacros.cpp	/^        int i = 1;$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^                for (int i = 0; i < size; ++i)$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^            for (int i = 0; i < size; ++i)$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^            for (size_t i = 0; i < v.size(); ++i) {$/;"	v	typeref:typename:size_t
i	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^        for (int i = 0; i < size; ++i)$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^        for (size_t i = 0; i < v.size(); ++i) {$/;"	v	typeref:typename:size_t
i	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        for (size_t i = 0; i < 1000; ++i) {$/;"	v	typeref:typename:size_t
i	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    for (size_t i = 0; i < samples.size(); ++i) {$/;"	v	typeref:typename:size_t
i	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    for (size_t i = 1; i < count; ++i) {$/;"	v	typeref:typename:size_t
i	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^                for (int i = 0; i < size; ++i)$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^            for (int i = 0; i < size; ++i)$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^            for (size_t i = 0; i < v.size(); ++i) {$/;"	v	typeref:typename:size_t
i	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^        for (int i = 0; i < size; ++i)$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^        for (size_t i = 0; i < v.size(); ++i) {$/;"	v	typeref:typename:size_t
i	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        int i;$/;"	m	struct:__anonb1aeb3b90110::CompilationTests::foo	typeref:typename:int	file:
i	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    int i = 1;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto i = GENERATE(filter([] (int val) { return val % 2 == 0; }, values({ 1, 2, 3, 4,/;"	v	typeref:typename:auto
i	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto i = GENERATE(map([] (int val) { return std::to_string(val); }, values({ 1, 2, 3/;"	v	typeref:typename:auto
i	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto i = GENERATE(map([] (int val) { return val * 2; }, values({ 1, 2, 3 })));$/;"	v	typeref:typename:auto
i	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^            auto i = GENERATE(map<std::string>([] (int val) { return std::to_string(val); }, val/;"	v	typeref:typename:auto
i	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        auto i = GENERATE(take(3, values({ 1, 2, 3, 4, 5, 6 })));$/;"	v	typeref:typename:auto
i	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto i = GENERATE(1, 2, 3);$/;"	v	typeref:typename:auto
i	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                    for (int i = 0; i < 5; ++i) {$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^        int i;$/;"	m	struct:__anon96897c110110::MatchersTests::SpecialException	typeref:typename:int	file:
i	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    for (int i = 1; i <= 3; i++) {$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    for (int i = 4; i <= 6; i++) {$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    for( int i=0; i<100; i++ )$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    int i = 7;$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    for (char i = '0'; i < '5'; ++i) {$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:char
i	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    for( std::size_t i=0; i < sizeof(fib)\/sizeof(int); ++i ) {$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::size_t
i	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        for (int i = 0; i < 4; ++i){$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        for (int i = 2; i < 6; ++i){$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        int i = 2;$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        int i = 3;$/;"	v	typeref:typename:int
i	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    int i = 7;$/;"	v	typeref:typename:int
i	misc/tests/ft_memory/memcpy.cpp	/^    	int i,j,k;$/;"	v	typeref:typename:int
i	misc/tests/ft_memory/memset.cpp	/^    int i,j;$/;"	v	typeref:typename:int
i	misc/tests/ft_string/strchr.cpp	/^	int i;$/;"	v	typeref:typename:int
id	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^        int id;$/;"	m	struct:Catch::SignalDefs	typeref:typename:int	file:
id	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	typeref:typename:DWORD	file:
idMap	misc/deps/catch2/scripts/embedClara.py	/^idMap = {$/;"	v
ifRe	misc/deps/catch2/scripts/embed.py	/^ifRe = re.compile( r'\\s*#\\s*if\\s+(.*)' )$/;"	v
ifdefCommonRe	misc/deps/catch2/scripts/embed.py	/^ifdefCommonRe = re.compile( r'\\s*#\\s*if' ) # all #ifdefs$/;"	v
ifdefRe	misc/deps/catch2/scripts/embed.py	/^ifdefRe = re.compile( r'\\s*#\\s*ifdef\\s*(\\S*)' )$/;"	v
ifndefRe	misc/deps/catch2/scripts/embed.py	/^ifndefRe = re.compile( r'\\s*#\\s*ifndef\\s*(\\S*)' )$/;"	v
impl	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            Detail::ChronometerConcept* impl;$/;"	m	struct:Catch::Benchmark::Chronometer	typeref:typename:Detail::ChronometerConcept *
includeSuccessfulResults	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::includeSuccessfulResults() const      { return m_data.showSuccessfulTests; }$/;"	f	class:Catch::Config	typeref:typename:bool
incrementBuildNumber	misc/deps/catch2/scripts/releaseCommon.py	/^    def incrementBuildNumber(self):$/;"	m	class:Version
incrementMajorVersion	misc/deps/catch2/scripts/releaseCommon.py	/^    def incrementMajorVersion(self):$/;"	m	class:Version
incrementMinorVersion	misc/deps/catch2/scripts/releaseCommon.py	/^    def incrementMinorVersion(self):$/;"	m	class:Version
incrementPatchNumber	misc/deps/catch2/scripts/releaseCommon.py	/^    def incrementPatchNumber(self):$/;"	m	class:Version
indent	misc/deps/catch2/include/external/clara.hpp	/^		auto indent() const -> size_t {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:size_t
indent	misc/deps/catch2/include/external/clara.hpp	/^	auto indent(size_t newIndent) -> Column& {$/;"	f	class:Catch::clara::TextFlow::Column	typeref:typename:Column &
indent	misc/deps/catch2/third_party/clara.hpp	/^            auto indent() const -> size_t {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:size_t
indent	misc/deps/catch2/third_party/clara.hpp	/^        auto indent( size_t newIndent ) -> Column& {$/;"	f	class:clara::TextFlow::Column	typeref:typename:Column &
infParser	misc/deps/catch2/scripts/approvalTests.py	/^infParser = re.compile(r'''$/;"	v
info	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        BenchmarkInfo info;$/;"	m	struct:Catch::BenchmarkStats	typeref:typename:BenchmarkInfo
infoMessages	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::vector<MessageInfo> infoMessages;$/;"	m	struct:Catch::AssertionStats	typeref:typename:std::vector<MessageInfo>
initialIndent	misc/deps/catch2/include/external/clara.hpp	/^	auto initialIndent(size_t newIndent) -> Column& {$/;"	f	class:Catch::clara::TextFlow::Column	typeref:typename:Column &
initialIndent	misc/deps/catch2/third_party/clara.hpp	/^        auto initialIndent( size_t newIndent ) -> Column& {$/;"	f	class:clara::TextFlow::Column	typeref:typename:Column &
inner	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    using inner = std::variant<MyType1, float, int>;$/;"	t	typeref:typename:std::variant<MyType1,float,int>	file:
inner	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    using inner = std::vector<std::string, minimal_allocator<std::string>>;$/;"	t	typeref:typename:std::vector<std::string,minimal_allocator<std::string>>	file:
insert	misc/tests/utils/rand.cpp	/^static int insert(uint64_t *tab, size_t len, uint64_t v)$/;"	f	typeref:typename:int	file:
insertCpps	misc/deps/catch2/scripts/generateSingleHeader.py	/^    def insertCpps():$/;"	f	function:generate	file:
instance	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^            static IColourImpl* instance() {$/;"	f	struct:Catch::__anonabe5bc570110::NoColourImpl	typeref:typename:IColourImpl *	file:
instance	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        static IColourImpl* instance() {$/;"	f	class:Catch::__anonabe5bc570310::PosixColourImpl	typeref:typename:IColourImpl *	file:
int_iterator	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator(int i) :val(i) {}$/;"	f	struct:__anonfad788a70210::int_iterator	file:
int_iterator	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct int_iterator {$/;"	s	namespace:__anonfad788a70210	file:
int_seven	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    int int_seven = 7;$/;"	m	struct:__anon8b7f96210110::ConditionTests::TestData	typeref:typename:int	file:
int_val	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.h	/^    int int_val;$/;"	E	interface:TestObj
int_val	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.h	/^@property (nonatomic, assign ) int int_val;$/;"	p	interface:TestObj
invoke	misc/deps/catch2/include/external/clara.hpp	/^        static auto invoke( L const &lambda, ArgType const &arg ) -> ParserResult {$/;"	f	struct:Catch::clara::detail::LambdaInvoker	typeref:typename:ParserResult
invoke	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^                static CompleteType_t<void> invoke(Fun&& fun, Args&&... args) {$/;"	f	struct:Catch::Benchmark::Detail::CompleteInvoker	typeref:typename:CompleteType_t<void>
invoke	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^                static Result invoke(Fun&& fun, Args&&... args) {$/;"	f	struct:Catch::Benchmark::Detail::CompleteInvoker	typeref:typename:Result
invoke	misc/deps/catch2/include/internal/catch_objc.hpp	/^        virtual void invoke() const {$/;"	f	class:Catch::OcMethod	typeref:typename:void
invoke	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    void TestCase::invoke() const {$/;"	f	class:Catch::TestCase	typeref:typename:void
invoke	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    void TestInvokerAsFunction::invoke() const {$/;"	f	class:Catch::TestInvokerAsFunction	typeref:typename:void
invoke	misc/deps/catch2/include/internal/catch_test_registry.h	/^    void invoke() const override {$/;"	f	class:Catch::TestInvokerAsMethod	typeref:typename:void
invoke	misc/deps/catch2/single_include/catch2/catch.hpp	/^    void invoke() const override {$/;"	f	class:Catch::TestInvokerAsMethod	typeref:typename:void
invoke	misc/deps/catch2/third_party/clara.hpp	/^        static auto invoke( L const &lambda, ArgType const &arg ) -> ParserResult {$/;"	f	struct:clara::detail::LambdaInvoker	typeref:typename:ParserResult
invokeActiveTestCase	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::invokeActiveTestCase() {$/;"	f	class:Catch::RunContext	typeref:typename:void
invokeLambda	misc/deps/catch2/include/external/clara.hpp	/^    inline auto invokeLambda( L const &lambda, std::string const &arg ) -> ParserResult {$/;"	f	namespace:Catch::clara::detail	typeref:typename:ParserResult
invokeLambda	misc/deps/catch2/third_party/clara.hpp	/^    inline auto invokeLambda( L const &lambda, std::string const &arg ) -> ParserResult {$/;"	f	namespace:clara::detail	typeref:typename:ParserResult
invoke_deoptimized	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^        inline auto invoke_deoptimized(Fn&& fn, Args&&... args) -> typename std::enable_if<!std:/;"	f	namespace:Catch::Benchmark	typeref:typename:std::enable_if<!std::is_same<void,decltype (fn (args...))>::value>::type
invoke_deoptimized	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^        inline auto invoke_deoptimized(Fn&& fn, Args&&... args) -> typename std::enable_if<std::/;"	f	namespace:Catch::Benchmark	typeref:typename:std::enable_if<std::is_same<void,decltype (fn (args...))>::value>::type
isBinaryExpression	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto isBinaryExpression() const -> bool { return m_isBinaryExpression; }$/;"	f	struct:Catch::ITransientExpression	typeref:typename:bool
isBoundary	misc/deps/catch2/include/external/clara.hpp	/^		auto isBoundary(size_t at) const -> bool {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:bool
isBoundary	misc/deps/catch2/third_party/clara.hpp	/^            auto isBoundary( size_t at ) const -> bool {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:bool
isBreakableAfter	misc/deps/catch2/include/external/clara.hpp	/^inline auto isBreakableAfter(char c) -> bool {$/;"	f	namespace:Catch::clara::TextFlow	typeref:typename:bool
isBreakableAfter	misc/deps/catch2/third_party/clara.hpp	/^    inline auto isBreakableAfter( char c ) -> bool {$/;"	f	namespace:clara::TextFlow	typeref:typename:bool
isBreakableBefore	misc/deps/catch2/include/external/clara.hpp	/^inline auto isBreakableBefore(char c) -> bool {$/;"	f	namespace:Catch::clara::TextFlow	typeref:typename:bool
isBreakableBefore	misc/deps/catch2/third_party/clara.hpp	/^    inline auto isBreakableBefore( char c ) -> bool {$/;"	f	namespace:clara::TextFlow	typeref:typename:bool
isComplete	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool SectionTracker::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::SectionTracker	typeref:typename:bool
isComplete	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool TrackerBase::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:bool
isContainer	misc/deps/catch2/include/external/clara.hpp	/^        virtual auto isContainer() const -> bool { return false; }$/;"	f	struct:Catch::clara::detail::BoundRef	typeref:typename:bool
isContainer	misc/deps/catch2/third_party/clara.hpp	/^        virtual auto isContainer() const -> bool { return false; }$/;"	f	struct:clara::detail::BoundRef	typeref:typename:bool
isControlChar	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::isControlChar( char c ) const {$/;"	f	class:Catch::TestSpecParser	typeref:typename:bool
isDebuggerActive	misc/deps/catch2/include/internal/catch_debugger.cpp	/^        bool isDebuggerActive() {$/;"	f	namespace:Catch	typeref:typename:bool
isDebuggerActive	misc/deps/catch2/include/internal/catch_debugger.cpp	/^        bool isDebuggerActive(){$/;"	f	namespace:Catch	typeref:typename:bool
isDebuggerActive	misc/deps/catch2/include/internal/catch_debugger.cpp	/^       bool isDebuggerActive() { return false; }$/;"	f	namespace:Catch	typeref:typename:bool
isFalse	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.h	/^-(BOOL) isFalse;$/;"	m	interface:TestObj
isFalse	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.m	/^-(BOOL) isFalse {$/;"	m	implementation:TestObj
isFalseTest	misc/deps/catch2/include/internal/catch_result_type.h	/^    inline bool isFalseTest( int flags ) { return ( flags & ResultDisposition::FalseTest ) != 0;/;"	f	namespace:Catch	typeref:typename:bool
isFalseTest	misc/deps/catch2/single_include/catch2/catch.hpp	/^    inline bool isFalseTest( int flags ) { return ( flags & ResultDisposition::FalseTest ) != 0;/;"	f	namespace:Catch	typeref:typename:bool
isFlag	misc/deps/catch2/include/external/clara.hpp	/^        virtual auto isFlag() const -> bool { return false; }$/;"	f	struct:Catch::clara::detail::BoundRef	typeref:typename:bool
isFlag	misc/deps/catch2/include/external/clara.hpp	/^        virtual auto isFlag() const -> bool { return true; }$/;"	f	struct:Catch::clara::detail::BoundFlagRefBase	typeref:typename:bool
isFlag	misc/deps/catch2/third_party/clara.hpp	/^        virtual auto isFlag() const -> bool { return false; }$/;"	f	struct:clara::detail::BoundRef	typeref:typename:bool
isFlag	misc/deps/catch2/third_party/clara.hpp	/^        virtual auto isFlag() const -> bool { return true; }$/;"	f	struct:clara::detail::BoundFlagRefBase	typeref:typename:bool
isGeneratorTracker	misc/deps/catch2/include/internal/catch_run_context.cpp	/^            bool isGeneratorTracker() const override { return true; }$/;"	f	struct:Catch::Generators::GeneratorTracker	typeref:typename:bool	file:
isGeneratorTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool TrackerBase::isGeneratorTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:bool
isHidden	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    bool TestCaseInfo::isHidden() const {$/;"	f	class:Catch::TestCaseInfo	typeref:typename:bool
isJustInfo	misc/deps/catch2/include/internal/catch_result_type.cpp	/^    bool isJustInfo( int flags ) {$/;"	f	namespace:Catch	typeref:typename:bool
isMatch	misc/deps/catch2/include/external/clara.hpp	/^        auto isMatch( std::string const &optToken ) const -> bool {$/;"	f	class:Catch::clara::detail::Opt	typeref:typename:bool
isMatch	misc/deps/catch2/third_party/clara.hpp	/^        auto isMatch( std::string const &optToken ) const -> bool {$/;"	f	class:clara::detail::Opt	typeref:typename:bool
isMulti	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    bool IStreamingReporter::isMulti() const { return false; }$/;"	f	class:Catch::IStreamingReporter	typeref:typename:bool
isMulti	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    bool ListeningReporter::isMulti() const {$/;"	f	class:Catch::ListeningReporter	typeref:typename:bool
isNullTerminated	misc/deps/catch2/include/internal/catch_stringref.h	/^        constexpr auto isNullTerminated() const noexcept -> bool {$/;"	f	class:Catch::StringRef	typeref:typename:auto
isOk	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    bool AssertionResult::isOk() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:bool
isOk	misc/deps/catch2/include/internal/catch_result_type.cpp	/^    bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch	typeref:typename:bool
isOpen	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool TrackerBase::isOpen() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:bool
isOptPrefix	misc/deps/catch2/include/external/clara.hpp	/^    inline auto isOptPrefix( char c ) -> bool {$/;"	f	namespace:Catch::clara::detail	typeref:typename:bool
isOptPrefix	misc/deps/catch2/third_party/clara.hpp	/^    inline auto isOptPrefix( char c ) -> bool {$/;"	f	namespace:clara::detail	typeref:typename:bool
isOptional	misc/deps/catch2/include/external/clara.hpp	/^        auto isOptional() const -> bool {$/;"	f	class:Catch::clara::detail::ParserRefImpl	typeref:typename:bool
isOptional	misc/deps/catch2/third_party/clara.hpp	/^        auto isOptional() const -> bool {$/;"	f	class:clara::detail::ParserRefImpl	typeref:typename:bool
isReleaseNotes	misc/deps/catch2/scripts/updateDocumentToC.py	/^def isReleaseNotes(f):$/;"	f
isReservedTag	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^        bool isReservedTag( std::string const& tag ) {$/;"	f	namespace:Catch::__anon539cc7770110	typeref:typename:bool
isSectionTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool SectionTracker::isSectionTracker() const { return true; }$/;"	f	class:Catch::TestCaseTracking::SectionTracker	typeref:typename:bool
isSectionTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool TrackerBase::isSectionTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:bool
isSet	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    bool FatalConditionHandler::isSet = false;$/;"	m	class:Catch::FatalConditionHandler	typeref:typename:bool
isSet	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^bool FatalConditionHandler::isSet = false;$/;"	m	class:Catch::FatalConditionHandler	typeref:typename:bool
isSet	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^        static bool isSet;$/;"	m	struct:Catch::FatalConditionHandler	typeref:typename:bool
isSourceFile	misc/deps/catch2/scripts/fixWhitespace.py	/^def isSourceFile( path ):$/;"	f
isSuccessfullyCompleted	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    bool TrackerBase::isSuccessfullyCompleted() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:bool
isThrowSafe	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    bool isThrowSafe( TestCase const& testCase, IConfig const& config ) {$/;"	f	namespace:Catch	typeref:typename:bool
isTrue	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.h	/^-(BOOL) isTrue;$/;"	m	interface:TestObj
isTrue	misc/deps/catch2/projects/XCode/OCTest/OCTest/TestObj.m	/^-(BOOL) isTrue {$/;"	m	implementation:TestObj
isValid	misc/deps/catch2/include/external/clara.hpp	/^        static const bool isValid = false;$/;"	m	struct:Catch::clara::detail::UnaryLambdaTraits	typeref:typename:const bool
isValid	misc/deps/catch2/include/external/clara.hpp	/^        static const bool isValid = true;$/;"	m	struct:Catch::clara::detail::UnaryLambdaTraits	typeref:typename:const bool
isValid	misc/deps/catch2/third_party/clara.hpp	/^        static const bool isValid = false;$/;"	m	struct:clara::detail::UnaryLambdaTraits	typeref:typename:const bool
isValid	misc/deps/catch2/third_party/clara.hpp	/^        static const bool isValid = true;$/;"	m	struct:clara::detail::UnaryLambdaTraits	typeref:typename:const bool
isWhitespace	misc/deps/catch2/include/external/clara.hpp	/^inline auto isWhitespace(char c) -> bool {$/;"	f	namespace:Catch::clara::TextFlow	typeref:typename:bool
isWhitespace	misc/deps/catch2/third_party/clara.hpp	/^    inline auto isWhitespace( char c ) -> bool {$/;"	f	namespace:clara::TextFlow	typeref:typename:bool
is_callable	misc/deps/catch2/include/internal/catch_meta.hpp	/^struct is_callable<Fun(Args...)> : decltype(is_callable_tester::test<Fun, Args...>(0)) {};$/;"	s	namespace:Catch
is_callable	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct is_callable<Fun(Args...)> : decltype(is_callable_tester::test<Fun, Args...>(0)) {};$/;"	s	namespace:Catch
is_callable_tester	misc/deps/catch2/include/internal/catch_meta.hpp	/^struct is_callable_tester {$/;"	s	namespace:Catch
is_callable_tester	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct is_callable_tester {$/;"	s	namespace:Catch
is_range	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct is_range {$/;"	s	namespace:Catch
is_range	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct is_range<T^> {$/;"	s	namespace:Catch
is_range	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct is_range<disabled_range> {$/;"	s	namespace:Catch	file:
is_range	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct is_range {$/;"	s	namespace:Catch
is_range	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct is_range<T^> {$/;"	s	namespace:Catch
is_related	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^            struct is_related$/;"	s	namespace:Catch::Benchmark::Detail
is_steady	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        enum { is_steady = true };$/;"	e	enum:__anon7f22177c0110::counting_clock::__anon7f22177c0303	file:
is_steady	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        enum { is_steady = true };$/;"	e	enum:__anon7f22177c0110::manual_clock::__anon7f22177c0203	file:
is_true	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^struct is_true$/;"	s	file:
isnan	misc/deps/catch2/include/internal/catch_polyfills.cpp	/^    bool isnan(double d) {$/;"	f	namespace:Catch	typeref:typename:bool
isnan	misc/deps/catch2/include/internal/catch_polyfills.cpp	/^    bool isnan(float f) {$/;"	f	namespace:Catch	typeref:typename:bool
issue	misc/deps/catch2/scripts/releaseNotes.py	/^            issue = '#{0} ("{1}")'.format( issueNumber, getIssueTitle( issueNumber ) )$/;"	v
issueNumber	misc/deps/catch2/scripts/releaseNotes.py	/^            issueNumber = match.group(2)$/;"	v
issueNumberRe	misc/deps/catch2/scripts/releaseNotes.py	/^issueNumberRe = re.compile( r'(.*?)#([0-9]*)([^0-9]?.*)' )$/;"	v
issues	misc/deps/catch2/scripts/releaseNotes.py	/^issues = {}$/;"	v
it	misc/deps/catch2/include/external/clara.hpp	/^        Iterator it;$/;"	m	class:Catch::clara::detail::TokenStream	typeref:typename:Iterator
it	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    using it = std::vector<double>::iterator;$/;"	t	typeref:typename:std::vector<double>::iterator	file:
it	misc/deps/catch2/third_party/clara.hpp	/^        Iterator it;$/;"	m	class:clara::detail::TokenStream	typeref:typename:Iterator
itDoesThat	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^    inline bool itDoesThat() { return true; }$/;"	f	namespace:__anon538088c40110::BDDTests	typeref:typename:bool
itDoesThis	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^    inline bool itDoesThis() { return true; }$/;"	f	namespace:__anon538088c40110::BDDTests	typeref:typename:bool
itEnd	misc/deps/catch2/include/external/clara.hpp	/^        Iterator itEnd;$/;"	m	class:Catch::clara::detail::TokenStream	typeref:typename:Iterator
itEnd	misc/deps/catch2/third_party/clara.hpp	/^        Iterator itEnd;$/;"	m	class:clara::detail::TokenStream	typeref:typename:Iterator
itMessage	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:std::vector<MessageInfo>::const_iterator	file:
itMessage	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::vector<MessageInfo>::const_iterator
itMessage	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::vector<MessageInfo>::const_iterator
item	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    has_maker item;$/;"	v	typeref:typename:has_maker
item	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    has_maker_and_operator item;$/;"	v	typeref:typename:has_maker_and_operator
item	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    has_neither item;$/;"	v	typeref:typename:has_neither
item	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    has_operator item;$/;"	v	typeref:typename:has_operator
item	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    has_template_operator item;$/;"	v	typeref:typename:has_template_operator
iterations	misc/deps/catch2/include/internal/benchmark/detail/catch_timing.hpp	/^            int iterations;$/;"	m	struct:Catch::Benchmark::Timing	typeref:typename:int
iterations	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        int iterations;$/;"	m	struct:Catch::BenchmarkInfo	typeref:typename:int
iterations	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto iterations = Catch::Benchmark::Detail::warmup<counting_clock>();$/;"	v	typeref:typename:auto
iterations_per_sample	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^            int iterations_per_sample;$/;"	m	struct:Catch::Benchmark::ExecutionPlan	typeref:typename:int
iterator	misc/deps/catch2/include/external/clara.hpp	/^		explicit iterator(Column const& column) : m_column(column) {$/;"	f	class:Catch::clara::TextFlow::Column::iterator
iterator	misc/deps/catch2/include/external/clara.hpp	/^		explicit iterator(Columns const& columns)$/;"	f	class:Catch::clara::TextFlow::Columns::iterator
iterator	misc/deps/catch2/include/external/clara.hpp	/^		iterator(Column const& column, size_t stringIndex)$/;"	f	class:Catch::clara::TextFlow::Column::iterator
iterator	misc/deps/catch2/include/external/clara.hpp	/^		iterator(Columns const& columns, EndTag)$/;"	f	class:Catch::clara::TextFlow::Columns::iterator
iterator	misc/deps/catch2/include/external/clara.hpp	/^	class iterator {$/;"	c	class:Catch::clara::TextFlow::Column
iterator	misc/deps/catch2/include/external/clara.hpp	/^	class iterator {$/;"	c	class:Catch::clara::TextFlow::Columns
iterator	misc/deps/catch2/third_party/clara.hpp	/^            explicit iterator( Column const& column ) : m_column( column ) {$/;"	f	class:clara::TextFlow::Column::iterator
iterator	misc/deps/catch2/third_party/clara.hpp	/^            explicit iterator( Columns const& columns )$/;"	f	class:clara::TextFlow::Columns::iterator
iterator	misc/deps/catch2/third_party/clara.hpp	/^            iterator( Column const& column, size_t stringIndex )$/;"	f	class:clara::TextFlow::Column::iterator
iterator	misc/deps/catch2/third_party/clara.hpp	/^            iterator( Columns const& columns, EndTag )$/;"	f	class:clara::TextFlow::Columns::iterator
iterator	misc/deps/catch2/third_party/clara.hpp	/^        class iterator {$/;"	c	class:clara::TextFlow::Column
iterator	misc/deps/catch2/third_party/clara.hpp	/^        class iterator {$/;"	c	class:clara::TextFlow::Columns
iterator_category	misc/deps/catch2/include/external/clara.hpp	/^		using iterator_category = std::forward_iterator_tag;$/;"	t	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:std::forward_iterator_tag
iterator_category	misc/deps/catch2/include/external/clara.hpp	/^		using iterator_category = std::forward_iterator_tag;$/;"	t	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:std::forward_iterator_tag
iterator_category	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    using iterator_category = std::input_iterator_tag;$/;"	t	struct:__anonfad788a70210::int_iterator	typeref:typename:std::input_iterator_tag	file:
iterator_category	misc/deps/catch2/third_party/clara.hpp	/^            using iterator_category = std::forward_iterator_tag;$/;"	t	class:clara::TextFlow::Column::iterator	typeref:typename:std::forward_iterator_tag
iterator_category	misc/deps/catch2/third_party/clara.hpp	/^            using iterator_category = std::forward_iterator_tag;$/;"	t	class:clara::TextFlow::Columns::iterator	typeref:typename:std::forward_iterator_tag
iters	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    int iters = 160000;$/;"	v	typeref:typename:int
j	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        auto j = GENERATE(repeat(2, values({ 1, 2, 3 })));$/;"	v	typeref:typename:auto
j	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        auto j = GENERATE(values({ -3, -2, -1 }));$/;"	v	typeref:typename:auto
j	misc/tests/ft_memory/memcpy.cpp	/^    	int i,j,k;$/;"	v	typeref:typename:int
j	misc/tests/ft_memory/memset.cpp	/^    int i,j;$/;"	v	typeref:typename:int
jackknife	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^            sample jackknife(Estimator&& estimator, Iterator first, Iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:sample
just_range	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct just_range {$/;"	s	namespace:__anonfad788a70310	file:
justification	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    Justification justification;$/;"	m	struct:Catch::__anon99a91d3f0110::ColumnInfo	typeref:typename:Justification	file:
k	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            int k;$/;"	m	struct:Catch::Benchmark::Chronometer	typeref:typename:int
k	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^                std::vector<int> k;$/;"	v	typeref:typename:std::vector<int>
k	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^                std::vector<int> k;$/;"	v	typeref:typename:std::vector<int>
k	misc/tests/ft_memory/memcpy.cpp	/^    	int i,j,k;$/;"	v	typeref:typename:int
keep_memory	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^        inline void keep_memory() {$/;"	f	namespace:Catch::Benchmark	typeref:typename:void
keep_memory	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^        inline void keep_memory(T* p) {$/;"	f	namespace:Catch::Benchmark	typeref:typename:void
killAll	misc/deps/ezbuild/async.sh	/^function killAll() {$/;"	f
killJob	misc/deps/ezbuild/async.sh	/^function killJob() {$/;"	f
l	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    long l = 3;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:long
l	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    long long l = std::numeric_limits<long long>::max();$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:long long
l	misc/tests/ft_string/count_occ.cpp	/^    char l = 'l';$/;"	v	typeref:typename:char
label	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::string label;$/;"	m	struct:Catch::SummaryColumn	typeref:typename:std::string	file:
langFilenameParser	misc/deps/catch2/scripts/approvalTests.py	/^langFilenameParser = re.compile(r'(.+\\.[ch]pp)')$/;"	v
large	misc/tests/ft_string/strnstr.cpp	/^	const char *large = "foo bar baz";$/;"	v	typeref:typename:const char *
lastAssertionPassed	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    bool RunContext::lastAssertionPassed() {$/;"	f	class:Catch::RunContext	typeref:typename:bool
lastMode	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        Mode lastMode = None;$/;"	m	class:Catch::TestSpecParser	typeref:typename:Mode
later	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto later = now + std::chrono::minutes(2);$/;"	v	typeref:typename:auto
later2	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto later2 = now2 + std::chrono::minutes(2);$/;"	v	typeref:typename:auto
lazyExpression	misc/deps/catch2/include/internal/catch_assertionresult.h	/^        LazyExpression lazyExpression;$/;"	m	struct:Catch::AssertionResultData	typeref:typename:LazyExpression
lazyPrint	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrint() {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
lazyPrintGroupInfo	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrintGroupInfo() {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
lazyPrintRunInfo	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrintRunInfo() {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
lazyPrintWithoutClosingBenchmarkTable	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrintWithoutClosingBenchmarkTable() {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
lcaseTags	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        std::vector<std::string> lcaseTags;$/;"	m	struct:Catch::TestCaseInfo	typeref:typename:std::vector<std::string>
lcov	misc/deps/catch2/CMake/FindLcov.cmake	/^		add_custom_target(lcov$/;"	t
lcov-capture	misc/deps/catch2/CMake/FindLcov.cmake	/^	add_custom_target(lcov-capture)$/;"	t
lcov-capture-init	misc/deps/catch2/CMake/FindLcov.cmake	/^	add_custom_target(lcov-capture-init)$/;"	t
lcov-genhtml	misc/deps/catch2/CMake/FindLcov.cmake	/^	add_custom_target(lcov-genhtml$/;"	t
lcov-geninfo	misc/deps/catch2/CMake/FindLcov.cmake	/^	add_custom_target(lcov-geninfo DEPENDS ${OUTFILE} lcov-capture)$/;"	t
lcov-geninfo-init	misc/deps/catch2/CMake/FindLcov.cmake	/^	add_custom_target(lcov-geninfo-init ALL	DEPENDS ${OUTFILE}$/;"	t
lcov_capture	misc/deps/catch2/CMake/FindLcov.cmake	/^function (lcov_capture)$/;"	f
lcov_capture_initial	misc/deps/catch2/CMake/FindLcov.cmake	/^function (lcov_capture_initial)$/;"	f
lcov_capture_initial_tgt	misc/deps/catch2/CMake/FindLcov.cmake	/^function (lcov_capture_initial_tgt TNAME)$/;"	f
lcov_capture_tgt	misc/deps/catch2/CMake/FindLcov.cmake	/^function (lcov_capture_tgt TNAME)$/;"	f
lcov_merge_files	misc/deps/catch2/CMake/FindLcov.cmake	/^function (lcov_merge_files OUTFILE ...)$/;"	f
leading_whitespace	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^static const char * const leading_whitespace = " \\r \\t\\n There is no extra whitespace here";$/;"	v	typeref:typename:const char * const	file:
leakDetector	misc/deps/catch2/include/internal/catch_impl.hpp	/^    LeakDetector leakDetector;$/;"	v	namespace:Catch	typeref:typename:LeakDetector
left	misc/deps/catch2/include/external/clara.hpp	/^        std::string left;$/;"	m	struct:Catch::clara::detail::HelpColumns	typeref:typename:std::string
left	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringPair.tests.cpp	/^    left_t  left( 42, "Arthur" );$/;"	v	typeref:typename:left_t
left	misc/deps/catch2/third_party/clara.hpp	/^        std::string left;$/;"	m	struct:clara::detail::HelpColumns	typeref:typename:std::string
left_t	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringPair.tests.cpp	/^    typedef std::pair<int,const char *> left_t;$/;"	t	typeref:typename:std::pair<int,const char * >	file:
len	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^struct Data { std::string str; size_t len; };$/;"	m	struct:Data	typeref:typename:size_t	file:
lessthan	misc/tests/ft_memory/memcmp.cpp	/^	int greater, lessthan, equal, greater2, lessthan2, equal2;$/;"	v	typeref:typename:int
lessthan2	misc/tests/ft_memory/memcmp.cpp	/^	int greater, lessthan, equal, greater2, lessthan2, equal2;$/;"	v	typeref:typename:int
letters	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^    std::string letters = "abcdefcg";$/;"	v	typeref:typename:std::string
lex	misc/deps/catch2/docs/command-line.md	/^### lex$/;"	S
libIdentify	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool libIdentify = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
libIdentify	misc/deps/catch2/include/internal/catch_session.cpp	/^    void Session::libIdentify() {$/;"	f	class:Catch::Session	typeref:typename:void
libft@42	README.md	/^# libft@42$/;"	c
libraryVersion	misc/deps/catch2/include/internal/catch_version.cpp	/^    Version const& libraryVersion() {$/;"	f	namespace:Catch	typeref:typename:Version const &
libstdc++, `_GLIBCXX_DEBUG` macro and random ordering of tests	misc/deps/catch2/docs/limitations.md	/^### libstdc++, `_GLIBCXX_DEBUG` macro and random ordering of tests$/;"	S
license	misc/deps/catch2/conanfile.py	/^    license = "BSL-1.0"$/;"	v	class:CatchConan
line	misc/deps/catch2/include/external/clara.hpp	/^		auto line() const -> std::string const& { return m_column.m_strings[m_stringIndex]; }$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:std::string const &
line	misc/deps/catch2/include/internal/catch_common.h	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo	typeref:typename:std::size_t
line	misc/deps/catch2/single_include/catch2/catch.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo	typeref:typename:std::size_t
line	misc/deps/catch2/third_party/clara.hpp	/^            auto line() const -> std::string const& { return m_column.m_strings[m_stringIndex]; /;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:std::string const &
line2	misc/deps/catch2/scripts/releaseNotes.py	/^            line2 = line2 + match.group(1) + issue$/;"	v
line2	misc/deps/catch2/scripts/releaseNotes.py	/^        line2 = ""$/;"	v
lineInfo	misc/deps/catch2/include/internal/catch_assertioninfo.h	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:SourceLineInfo
lineInfo	misc/deps/catch2/include/internal/catch_message.h	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::MessageInfo	typeref:typename:SourceLineInfo
lineInfo	misc/deps/catch2/include/internal/catch_section_info.h	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::SectionInfo	typeref:typename:SourceLineInfo
lineInfo	misc/deps/catch2/include/internal/catch_tag_alias.h	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::TagAlias	typeref:typename:SourceLineInfo
lineInfo	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::TestCaseInfo	typeref:typename:SourceLineInfo
lineInfo	misc/deps/catch2/single_include/catch2/catch.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:SourceLineInfo
lineNumberParser	misc/deps/catch2/scripts/approvalTests.py	/^lineNumberParser = re.compile(r' line="[0-9]*"')$/;"	v
lines	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^Catch::Generators::GeneratorWrapper<std::string> lines(std::string \/* ignored for example *\/) /;"	f	typeref:typename:Catch::Generators::GeneratorWrapper<std::string>
lines	misc/deps/catch2/scripts/releaseNotes.py	/^lines = runAndCapture( ['git', 'log', hashes[1] + ".." + hashes[0], catchPath] )$/;"	v
link_files	misc/deps/catch2/scripts/benchmarkCompile.py	/^def link_files():$/;"	f
link_to_changes_in_release	misc/deps/catch2/scripts/extractFeaturesFromReleaseNotes.py	/^def link_to_changes_in_release(release, releases):$/;"	f
list	misc/deps/catch2/include/internal/catch_list.cpp	/^    Option<std::size_t> list( std::shared_ptr<Config> const& config ) {$/;"	f	namespace:Catch	typeref:typename:Option<std::size_t>
listReporters	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::listReporters() const      { return m_data.listReporters; }$/;"	f	class:Catch::Config	typeref:typename:bool
listReporters	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool listReporters = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
listReporters	misc/deps/catch2/include/internal/catch_list.cpp	/^    std::size_t listReporters() {$/;"	f	namespace:Catch	typeref:typename:std::size_t
listTags	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::listTags() const           { return m_data.listTags; }$/;"	f	class:Catch::Config	typeref:typename:bool
listTags	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool listTags = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
listTags	misc/deps/catch2/include/internal/catch_list.cpp	/^    std::size_t listTags( Config const& config ) {$/;"	f	namespace:Catch	typeref:typename:std::size_t
listTestNamesOnly	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::listTestNamesOnly() const  { return m_data.listTestNamesOnly; }$/;"	f	class:Catch::Config	typeref:typename:bool
listTestNamesOnly	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool listTestNamesOnly = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
listTests	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::listTests() const          { return m_data.listTests; }$/;"	f	class:Catch::Config	typeref:typename:bool
listTests	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool listTests = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
listTests	misc/deps/catch2/include/internal/catch_list.cpp	/^    std::size_t listTests( Config const& config ) {$/;"	f	namespace:Catch	typeref:typename:std::size_t
listTestsNamesOnly	misc/deps/catch2/include/internal/catch_list.cpp	/^    std::size_t listTestsNamesOnly( Config const& config ) {$/;"	f	namespace:Catch	typeref:typename:std::size_t
literals	misc/deps/catch2/include/internal/catch_approx.cpp	/^namespace literals {$/;"	n	namespace:Catch	file:
literals	misc/deps/catch2/include/internal/catch_approx.h	/^namespace literals {$/;"	n	namespace:Catch
loadBuffer	misc/deps/catch2/include/external/clara.hpp	/^        void loadBuffer() {$/;"	f	class:Catch::clara::detail::TokenStream	typeref:typename:void
loadBuffer	misc/deps/catch2/third_party/clara.hpp	/^        void loadBuffer() {$/;"	f	class:clara::detail::TokenStream	typeref:typename:void
location	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        SourceLineInfo location;$/;"	m	struct:Catch::TestCaseTracking::NameAndLocation	typeref:typename:SourceLineInfo
logfile_prefix	misc/deps/catch2/misc/coverage-helper.cpp	/^const std::string logfile_prefix = "--log-file=";$/;"	v	typeref:typename:const std::string
logicError	misc/deps/catch2/include/external/clara.hpp	/^        static auto logicError( std::string const &message ) -> BasicResult { return { ResultBas/;"	f	class:Catch::clara::detail::BasicResult	typeref:typename:BasicResult
logicError	misc/deps/catch2/third_party/clara.hpp	/^        static auto logicError( std::string const &message ) -> BasicResult { return { ResultBas/;"	f	class:clara::detail::BasicResult	typeref:typename:BasicResult
logic_t	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct logic_t {$/;"	s	namespace:__anonb1aeb3b90110::CompilationTests	file:
login_username	misc/deps/catch2/.conan/build.py	/^    def login_username(self):$/;"	m	class:BuilderSettings
long_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    long            long_var = 1L;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:long
lookup	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^        StringRef EnumInfo::lookup( int value ) const {$/;"	f	class:Catch::Detail::EnumInfo	typeref:typename:StringRef
low_mild	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^            int low_mild = 0;       \/\/ 1.5 to 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification	typeref:typename:int
low_severe	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^            int low_severe = 0;     \/\/ more than 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification	typeref:typename:int
lower_bound	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^            Duration lower_bound;$/;"	m	struct:Catch::Benchmark::Estimate	typeref:typename:Duration
m	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^    std::map<int, int> m;$/;"	v	typeref:typename:std::map<int,int>
m	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto m = Catch::Benchmark::Detail::mean(x.begin(), x.end());$/;"	v	typeref:typename:auto
m	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^    std::map<int, int> m;$/;"	v	typeref:typename:std::map<int,int>
m	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    MF m = &S::f;$/;"	v	typeref:typename:MF
m_a	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    T m_a;$/;"	m	struct:__anon27b7d6900110::ClassTests::Template_Fixture	typeref:typename:T	file:
m_a	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    T m_a;$/;"	m	struct:__anon27b7d6900110::ClassTests::Template_Fixture_2	typeref:typename:T	file:
m_a	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    int m_a;$/;"	m	struct:__anon27b7d6900110::ClassTests::Fixture	typeref:typename:int	file:
m_activeIterators	misc/deps/catch2/include/external/clara.hpp	/^		size_t m_activeIterators;$/;"	m	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:size_t
m_activeIterators	misc/deps/catch2/third_party/clara.hpp	/^            size_t m_activeIterators;$/;"	m	class:clara::TextFlow::Columns::iterator	typeref:typename:size_t
m_activeSections	misc/deps/catch2/include/internal/catch_run_context.h	/^        std::vector<ITracker*> m_activeSections;$/;"	m	class:Catch::RunContext	typeref:typename:std::vector<ITracker * >
m_activeTestCase	misc/deps/catch2/include/internal/catch_run_context.h	/^        TestCase const* m_activeTestCase = nullptr;$/;"	m	class:Catch::RunContext	typeref:typename:TestCase const *
m_arg	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^        ArgT const& m_arg;$/;"	m	class:Catch::MatchExpr	typeref:typename:ArgT const &
m_arg	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        std::string m_arg;$/;"	m	class:Catch::TestSpecParser	typeref:typename:std::string
m_args	misc/deps/catch2/include/external/clara.hpp	/^        std::vector<Arg> m_args;$/;"	m	struct:Catch::clara::detail::Parser	typeref:typename:std::vector<Arg>
m_args	misc/deps/catch2/include/external/clara.hpp	/^        std::vector<std::string> m_args;$/;"	m	class:Catch::clara::detail::Args	typeref:typename:std::vector<std::string>
m_args	misc/deps/catch2/third_party/clara.hpp	/^        std::vector<Arg> m_args;$/;"	m	struct:clara::detail::Parser	typeref:typename:std::vector<Arg>
m_args	misc/deps/catch2/third_party/clara.hpp	/^        std::vector<std::string> m_args;$/;"	m	class:clara::detail::Args	typeref:typename:std::vector<std::string>
m_assertionInfo	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::AssertionHandler	typeref:typename:AssertionInfo
m_assertions	misc/deps/catch2/include/internal/catch_section.h	/^        Counts m_assertions;$/;"	m	class:Catch::Section	typeref:typename:Counts
m_assertions	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::vector<AssertionStats> m_assertions;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::vector<AssertionStats>
m_cache	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        T m_cache;$/;"	m	class:Catch::Generators::MapGenerator	typeref:typename:T
m_cachedToString	misc/deps/catch2/include/internal/catch_matchers.h	/^            mutable std::string m_cachedToString;$/;"	m	class:Catch::Matchers::Impl::MatcherUntypedBase	typeref:typename:std::string
m_captured	misc/deps/catch2/include/internal/catch_message.h	/^        size_t m_captured = 0;$/;"	m	class:Catch::Capturer	typeref:typename:size_t
m_caseSensitivity	misc/deps/catch2/include/internal/catch_matchers_string.h	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::StdString::CasedString	typeref:typename:CaseSensitive::Choice
m_caseSensitivity	misc/deps/catch2/include/internal/catch_matchers_string.h	/^            CaseSensitive::Choice m_caseSensitivity;$/;"	m	struct:Catch::Matchers::StdString::RegexMatcher	typeref:typename:CaseSensitive::Choice
m_caseSensitivity	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^        CaseSensitive::Choice m_caseSensitivity;$/;"	m	class:Catch::WildcardPattern	typeref:typename:CaseSensitive::Choice
m_cerr	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        RedirectedStream m_cerr;$/;"	m	class:Catch::RedirectedStdErr	typeref:typename:RedirectedStream
m_children	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        Children m_children;$/;"	m	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:Children
m_chunk	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        std::vector<T> m_chunk;$/;"	m	class:Catch::Generators::ChunkGenerator	typeref:typename:std::vector<T>
m_chunk_size	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        size_t m_chunk_size;$/;"	m	class:Catch::Generators::ChunkGenerator	typeref:typename:size_t
m_cli	misc/deps/catch2/include/internal/catch_session.h	/^        clara::Parser m_cli;$/;"	m	class:Catch::Session	typeref:typename:clara::Parser
m_clog	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        RedirectedStream m_clog;$/;"	m	class:Catch::RedirectedStdErr	typeref:typename:RedirectedStream
m_cls	misc/deps/catch2/include/internal/catch_objc.hpp	/^        Class m_cls;$/;"	m	class:Catch::OcMethod	typeref:typename:Class
m_column	misc/deps/catch2/include/external/clara.hpp	/^		Column const& m_column;$/;"	m	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:Column const &
m_column	misc/deps/catch2/third_party/clara.hpp	/^            Column const& m_column;$/;"	m	class:clara::TextFlow::Column::iterator	typeref:typename:Column const &
m_columnInfos	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::vector<ColumnInfo> m_columnInfos;$/;"	m	class:Catch::TablePrinter	typeref:typename:std::vector<ColumnInfo>	file:
m_columns	misc/deps/catch2/include/external/clara.hpp	/^		std::vector<Column> const& m_columns;$/;"	m	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:std::vector<Column> const &
m_columns	misc/deps/catch2/include/external/clara.hpp	/^	std::vector<Column> m_columns;$/;"	m	class:Catch::clara::TextFlow::Columns	typeref:typename:std::vector<Column>
m_columns	misc/deps/catch2/third_party/clara.hpp	/^            std::vector<Column> const& m_columns;$/;"	m	class:clara::TextFlow::Columns::iterator	typeref:typename:std::vector<Column> const &
m_columns	misc/deps/catch2/third_party/clara.hpp	/^        std::vector<Column> m_columns;$/;"	m	class:clara::TextFlow::Columns	typeref:typename:std::vector<Column>
m_comparator	misc/deps/catch2/include/internal/catch_matchers_string.h	/^            CasedString m_comparator;$/;"	m	struct:Catch::Matchers::StdString::StringMatcherBase	typeref:typename:CasedString
m_comparator	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            T const& m_comparator;$/;"	m	struct:Catch::Matchers::Vector::ContainsElementMatcher	typeref:typename:T const &
m_comparator	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::vector<T> const& m_comparator;$/;"	m	struct:Catch::Matchers::Vector::ApproxMatcher	typeref:typename:std::vector<T> const &
m_comparator	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::vector<T> const& m_comparator;$/;"	m	struct:Catch::Matchers::Vector::ContainsMatcher	typeref:typename:std::vector<T> const &
m_comparator	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::vector<T> const& m_comparator;$/;"	m	struct:Catch::Matchers::Vector::EqualsMatcher	typeref:typename:std::vector<T> const &
m_completed	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        bool m_completed = false;$/;"	m	class:Catch::AssertionHandler	typeref:typename:bool
m_config	misc/deps/catch2/include/internal/catch_context.cpp	/^        IConfigPtr m_config;$/;"	m	class:Catch::Context	typeref:typename:IConfigPtr	file:
m_config	misc/deps/catch2/include/internal/catch_run_context.h	/^        IConfigPtr m_config;$/;"	m	class:Catch::RunContext	typeref:typename:IConfigPtr
m_config	misc/deps/catch2/include/internal/catch_session.cpp	/^            std::shared_ptr<Config> m_config;$/;"	m	class:Catch::__anon2e423b750110::TestGroup	typeref:typename:std::shared_ptr<Config>	file:
m_config	misc/deps/catch2/include/internal/catch_session.h	/^        std::shared_ptr<Config> m_config;$/;"	m	class:Catch::Session	typeref:typename:std::shared_ptr<Config>
m_config	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        IConfigPtr m_config;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:IConfigPtr
m_config	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        IConfigPtr m_config;$/;"	m	struct:Catch::StreamingReporterBase	typeref:typename:IConfigPtr
m_configData	misc/deps/catch2/include/internal/catch_session.h	/^        ConfigData m_configData;$/;"	m	class:Catch::Session	typeref:typename:ConfigData
m_context	misc/deps/catch2/include/internal/catch_run_context.h	/^        IMutableContext& m_context;$/;"	m	class:Catch::RunContext	typeref:typename:IMutableContext &
m_context	misc/deps/catch2/include/internal/catch_session.cpp	/^            RunContext m_context;$/;"	m	class:Catch::__anon2e423b750110::TestGroup	typeref:typename:RunContext	file:
m_count	misc/deps/catch2/include/internal/catch_string_manip.h	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise	typeref:typename:std::size_t
m_cout	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        RedirectedStream m_cout;$/;"	m	class:Catch::RedirectedStdOut	typeref:typename:RedirectedStream
m_ctx	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        TrackerContext& m_ctx;$/;"	m	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:TrackerContext &
m_current	misc/deps/catch2/include/internal/catch_generators.hpp	/^        size_t m_current = 0;$/;"	m	class:Catch::Generators::Generators	typeref:typename:size_t
m_current	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    T m_current;$/;"	m	class:Catch::Generators::RangeGenerator	typeref:typename:T
m_current	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    size_t m_current = 0;$/;"	m	class:Catch::Generators::IteratorGenerator	typeref:typename:size_t
m_currentColumn	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    int m_currentColumn = -1;$/;"	m	class:Catch::TablePrinter	typeref:typename:int	file:
m_currentFilter	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        TestSpec::Filter m_currentFilter;$/;"	m	class:Catch::TestSpecParser	typeref:typename:TestSpec::Filter
m_currentSortOrder	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^        mutable RunTests::InWhatOrder m_currentSortOrder = RunTests::InDeclarationOrder;$/;"	m	class:Catch::TestRegistry	typeref:typename:RunTests::InWhatOrder
m_currentTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        ITracker* m_currentTracker = nullptr;$/;"	m	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:ITracker *
m_current_number	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    Float m_current_number;$/;"	m	class:Catch::Generators::RandomFloatingGenerator	typeref:typename:Float
m_current_number	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    Integer m_current_number;$/;"	m	class:Catch::Generators::RandomIntegerGenerator	typeref:typename:Integer
m_current_repeat	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        size_t m_current_repeat = 0;$/;"	m	class:Catch::Generators::RepeatGenerator	typeref:typename:size_t
m_data	misc/deps/catch2/include/internal/catch_config.hpp	/^        ConfigData m_data;$/;"	m	class:Catch::Config	typeref:typename:ConfigData
m_data	misc/deps/catch2/single_include/catch2/catch.hpp	/^        char* m_data = nullptr;$/;"	m	class:Catch::StringRef	typeref:typename:char *
m_deepestSection	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::shared_ptr<SectionNode> m_deepestSection;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::shared_ptr<SectionNode>
m_description	misc/deps/catch2/include/external/clara.hpp	/^        std::string m_description;$/;"	m	class:Catch::clara::detail::ParserRefImpl	typeref:typename:std::string
m_description	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^    std::string m_description;$/;"	m	class:Catch::Matchers::Generic::PredicateMatcher	typeref:typename:std::string
m_description	misc/deps/catch2/third_party/clara.hpp	/^        std::string m_description;$/;"	m	class:clara::detail::ParserRefImpl	typeref:typename:std::string
m_dist	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^    std::uniform_int_distribution<> m_dist;$/;"	m	class:RandomIntGenerator	typeref:typename:std::uniform_int_distribution<>	file:
m_dist	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    std::uniform_int_distribution<Integer> m_dist;$/;"	m	class:Catch::Generators::RandomIntegerGenerator	typeref:typename:std::uniform_int_distribution<Integer>
m_dist	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    std::uniform_real_distribution<Float> m_dist;$/;"	m	class:Catch::Generators::RandomFloatingGenerator	typeref:typename:std::uniform_real_distribution<Float>
m_elems	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    std::vector<T> m_elems;$/;"	m	class:Catch::Generators::IteratorGenerator	typeref:typename:std::vector<T>
m_end	misc/deps/catch2/include/external/clara.hpp	/^		size_t m_end = 0;$/;"	m	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:size_t
m_end	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    T m_end;$/;"	m	class:Catch::Generators::RangeGenerator	typeref:typename:T
m_end	misc/deps/catch2/third_party/clara.hpp	/^            size_t m_end = 0;$/;"	m	class:clara::TextFlow::Column::iterator	typeref:typename:size_t
m_enumInfos	misc/deps/catch2/include/internal/catch_enum_values_registry.h	/^            std::vector<std::unique_ptr<EnumInfo>> m_enumInfos;$/;"	m	class:Catch::Detail::EnumValuesRegistry	typeref:typename:std::vector<std::unique_ptr<EnumInfo>>
m_enumValuesRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            Detail::EnumValuesRegistry m_enumValuesRegistry;$/;"	m	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:Detail::EnumValuesRegistry	file:
m_epsilon	misc/deps/catch2/include/internal/catch_approx.h	/^        double m_epsilon;$/;"	m	class:Catch::Detail::Approx	typeref:typename:double
m_epsilon	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^            double m_epsilon;$/;"	m	struct:Catch::Matchers::Floating::WithinRelMatcher	typeref:typename:double
m_errorMessage	misc/deps/catch2/include/external/clara.hpp	/^        std::string m_errorMessage; \/\/ Only populated if resultType is an error$/;"	m	class:Catch::clara::detail::BasicResult	typeref:typename:std::string
m_errorMessage	misc/deps/catch2/third_party/clara.hpp	/^        std::string m_errorMessage; \/\/ Only populated if resultType is an error$/;"	m	class:clara::detail::BasicResult	typeref:typename:std::string
m_escapeChars	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        std::vector<std::size_t> m_escapeChars;$/;"	m	class:Catch::TestSpecParser	typeref:typename:std::vector<std::size_t>
m_exceptionRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            StartupExceptionRegistry m_exceptionRegistry;$/;"	m	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:StartupExceptionRegistry	file:
m_exceptionTranslatorRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            ExceptionTranslatorRegistry m_exceptionTranslatorRegistry;$/;"	m	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:ExceptionTranslatorRegistry	file:
m_exceptions	misc/deps/catch2/include/internal/catch_startup_exception_registry.h	/^        std::vector<std::exception_ptr> m_exceptions;$/;"	m	class:Catch::StartupExceptionRegistry	typeref:typename:std::vector<std::exception_ptr>
m_exclusion	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        bool m_exclusion = false;$/;"	m	class:Catch::TestSpecParser	typeref:typename:bool
m_exeName	misc/deps/catch2/include/external/clara.hpp	/^        mutable ExeName m_exeName;$/;"	m	struct:Catch::clara::detail::Parser	typeref:typename:ExeName
m_exeName	misc/deps/catch2/include/external/clara.hpp	/^        std::string m_exeName;$/;"	m	class:Catch::clara::detail::Args	typeref:typename:std::string
m_exeName	misc/deps/catch2/third_party/clara.hpp	/^        mutable ExeName m_exeName;$/;"	m	struct:clara::detail::Parser	typeref:typename:ExeName
m_exeName	misc/deps/catch2/third_party/clara.hpp	/^        std::string m_exeName;$/;"	m	class:clara::detail::Args	typeref:typename:std::string
m_expected	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^        int m_expected;$/;"	m	class:__anon96897c110110::MatchersTests::ExceptionMatcher	typeref:typename:int	file:
m_factories	misc/deps/catch2/include/internal/catch_reporter_registry.h	/^        FactoryMap m_factories;$/;"	m	class:Catch::ReporterRegistry	typeref:typename:FactoryMap
m_file	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        std::FILE* m_file = nullptr;$/;"	m	class:Catch::TempFile	typeref:typename:std::FILE *
m_filters	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        std::vector<std::string> m_filters;$/;"	m	class:Catch::TestCaseTracking::SectionTracker	typeref:typename:std::vector<std::string>
m_filters	misc/deps/catch2/include/internal/catch_test_spec.h	/^        std::vector<Filter> m_filters;$/;"	m	class:Catch::TestSpec	typeref:typename:std::vector<Filter>
m_forWhat	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        ForWhat m_forWhat;$/;"	m	class:Catch::XmlEncode	typeref:typename:ForWhat
m_fullConfig	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        IConfigPtr m_fullConfig;$/;"	m	struct:Catch::ReporterConfig	typeref:typename:IConfigPtr
m_function	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        Func m_function;$/;"	m	class:Catch::Generators::MapGenerator	typeref:typename:Func
m_functions	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^        std::vector<TestCase> m_functions;$/;"	m	class:Catch::TestRegistry	typeref:typename:std::vector<TestCase>
m_generator	misc/deps/catch2/include/internal/catch_generators.hpp	/^        std::unique_ptr<IGenerator<T>> m_generator;$/;"	m	class:Catch::Generators::GeneratorWrapper	typeref:typename:std::unique_ptr<IGenerator<T>>
m_generator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::ChunkGenerator	typeref:typename:GeneratorWrapper<T>
m_generator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::FilterGenerator	typeref:typename:GeneratorWrapper<T>
m_generator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::RepeatGenerator	typeref:typename:GeneratorWrapper<T>
m_generator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::TakeGenerator	typeref:typename:GeneratorWrapper<T>
m_generator	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        GeneratorWrapper<U> m_generator;$/;"	m	class:Catch::Generators::MapGenerator	typeref:typename:GeneratorWrapper<U>
m_generator	misc/deps/catch2/include/internal/catch_run_context.cpp	/^            GeneratorBasePtr m_generator;$/;"	m	struct:Catch::Generators::GeneratorTracker	typeref:typename:GeneratorBasePtr	file:
m_generators	misc/deps/catch2/include/internal/catch_generators.hpp	/^        std::vector<GeneratorWrapper<T>> m_generators;$/;"	m	class:Catch::Generators::Generators	typeref:typename:std::vector<GeneratorWrapper<T>>
m_hasTestFilters	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool m_hasTestFilters = false;$/;"	m	class:Catch::Config	typeref:typename:bool
m_headerPrinted	misc/deps/catch2/include/reporters/catch_reporter_console.h	/^        bool m_headerPrinted = false;$/;"	m	struct:Catch::ConsoleReporter	typeref:typename:bool
m_headerPrintedForThisSection	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        bool m_headerPrintedForThisSection = false;$/;"	m	struct:Catch::TeamCityReporter	typeref:typename:bool
m_headerPrintedForThisSection	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        bool m_headerPrintedForThisSection = false;$/;"	m	struct:Catch::TeamCityReporter	typeref:typename:bool
m_hint	misc/deps/catch2/include/external/clara.hpp	/^        std::string m_hint;$/;"	m	class:Catch::clara::detail::ParserRefImpl	typeref:typename:std::string
m_hint	misc/deps/catch2/third_party/clara.hpp	/^        std::string m_hint;$/;"	m	class:clara::detail::ParserRefImpl	typeref:typename:std::string
m_idx	misc/deps/catch2/include/internal/catch_generators.hpp	/^        size_t m_idx = 0;$/;"	m	class:Catch::Generators::FixedValuesGenerator	typeref:typename:size_t
m_inNanoseconds	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    uint64_t m_inNanoseconds;$/;"	m	class:Catch::__anon99a91d3f0110::Duration	typeref:typename:uint64_t	file:
m_includeSuccessfulResults	misc/deps/catch2/include/internal/catch_run_context.h	/^        bool m_includeSuccessfulResults;$/;"	m	class:Catch::RunContext	typeref:typename:bool
m_indent	misc/deps/catch2/include/external/clara.hpp	/^	size_t m_indent = 0;$/;"	m	class:Catch::clara::TextFlow::Column	typeref:typename:size_t
m_indent	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        std::string m_indent;$/;"	m	class:Catch::XmlWriter	typeref:typename:std::string
m_indent	misc/deps/catch2/third_party/clara.hpp	/^        size_t m_indent = 0;$/;"	m	class:clara::TextFlow::Column	typeref:typename:size_t
m_index	misc/deps/catch2/include/internal/catch_stream.h	/^        std::size_t m_index;$/;"	m	class:Catch::ReusableStringStream	typeref:typename:std::size_t
m_index	misc/deps/catch2/single_include/catch2/catch.hpp	/^        std::size_t m_index;$/;"	m	class:Catch::ReusableStringStream	typeref:typename:std::size_t
m_info	misc/deps/catch2/include/internal/catch_assertionresult.h	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult	typeref:typename:AssertionInfo
m_info	misc/deps/catch2/include/internal/catch_message.h	/^        MessageInfo m_info;$/;"	m	class:Catch::ScopedMessage	typeref:typename:MessageInfo
m_info	misc/deps/catch2/include/internal/catch_message.h	/^        MessageInfo m_info;$/;"	m	struct:Catch::MessageBuilder	typeref:typename:MessageInfo
m_info	misc/deps/catch2/include/internal/catch_section.h	/^        SectionInfo m_info;$/;"	m	class:Catch::Section	typeref:typename:SectionInfo
m_initialIndent	misc/deps/catch2/include/external/clara.hpp	/^	size_t m_initialIndent = std::string::npos;$/;"	m	class:Catch::clara::TextFlow::Column	typeref:typename:size_t
m_initialIndent	misc/deps/catch2/third_party/clara.hpp	/^        size_t m_initialIndent = std::string::npos;$/;"	m	class:clara::TextFlow::Column	typeref:typename:size_t
m_invalidArgs	misc/deps/catch2/include/internal/catch_test_spec.h	/^        std::vector<std::string> m_invalidArgs;$/;"	m	class:Catch::TestSpec	typeref:typename:std::vector<std::string>
m_isBinaryExpression	misc/deps/catch2/include/internal/catch_decomposer.h	/^        bool m_isBinaryExpression;$/;"	m	struct:Catch::ITransientExpression	typeref:typename:bool
m_isNegated	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        bool m_isNegated;$/;"	m	class:Catch::LazyExpression	typeref:typename:bool
m_isOpen	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    bool m_isOpen = false;$/;"	m	class:Catch::TablePrinter	typeref:typename:bool	file:
m_iterators	misc/deps/catch2/include/external/clara.hpp	/^		std::vector<Column::iterator> m_iterators;$/;"	m	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:std::vector<Column::iterator>
m_iterators	misc/deps/catch2/third_party/clara.hpp	/^            std::vector<Column::iterator> m_iterators;$/;"	m	class:clara::TextFlow::Columns::iterator	typeref:typename:std::vector<Column::iterator>
m_label	misc/deps/catch2/include/internal/catch_string_manip.h	/^        std::string m_label;$/;"	m	struct:Catch::pluralise	typeref:typename:std::string
m_lambda	misc/deps/catch2/include/external/clara.hpp	/^        L m_lambda;$/;"	m	struct:Catch::clara::detail::BoundFlagLambda	typeref:typename:L
m_lambda	misc/deps/catch2/include/external/clara.hpp	/^        L m_lambda;$/;"	m	struct:Catch::clara::detail::BoundLambda	typeref:typename:L
m_lambda	misc/deps/catch2/third_party/clara.hpp	/^        L m_lambda;$/;"	m	struct:clara::detail::BoundFlagLambda	typeref:typename:L
m_lambda	misc/deps/catch2/third_party/clara.hpp	/^        L m_lambda;$/;"	m	struct:clara::detail::BoundLambda	typeref:typename:L
m_lastAssertionInfo	misc/deps/catch2/include/internal/catch_run_context.h	/^        AssertionInfo m_lastAssertionInfo;$/;"	m	class:Catch::RunContext	typeref:typename:AssertionInfo
m_lastAssertionPassed	misc/deps/catch2/include/internal/catch_run_context.h	/^        bool m_lastAssertionPassed = false;$/;"	m	class:Catch::RunContext	typeref:typename:bool
m_lastResult	misc/deps/catch2/include/internal/catch_run_context.h	/^        Option<AssertionResult> m_lastResult;$/;"	m	class:Catch::RunContext	typeref:typename:Option<AssertionResult>
m_len	misc/deps/catch2/include/external/clara.hpp	/^		size_t m_len = 0;$/;"	m	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:size_t
m_len	misc/deps/catch2/third_party/clara.hpp	/^            size_t m_len = 0;$/;"	m	class:clara::TextFlow::Column::iterator	typeref:typename:size_t
m_lhs	misc/deps/catch2/include/internal/catch_decomposer.h	/^        LhsT m_lhs;$/;"	m	class:Catch::BinaryExpr	typeref:typename:LhsT
m_lhs	misc/deps/catch2/include/internal/catch_decomposer.h	/^        LhsT m_lhs;$/;"	m	class:Catch::ExprLhs	typeref:typename:LhsT
m_lhs	misc/deps/catch2/include/internal/catch_decomposer.h	/^        LhsT m_lhs;$/;"	m	class:Catch::UnaryExpr	typeref:typename:LhsT
m_line	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^    std::string m_line;$/;"	m	class:LineGenerator	typeref:typename:std::string	file:
m_listeners	misc/deps/catch2/include/internal/catch_reporter_registry.h	/^        Listeners m_listeners;$/;"	m	class:Catch::ReporterRegistry	typeref:typename:Listeners
m_listeners	misc/deps/catch2/include/reporters/catch_reporter_listening.h	/^        Reporters m_listeners;$/;"	m	class:Catch::ListeningReporter	typeref:typename:Reporters
m_margin	misc/deps/catch2/include/internal/catch_approx.h	/^        double m_margin;$/;"	m	class:Catch::Detail::Approx	typeref:typename:double
m_margin	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^            double m_margin;$/;"	m	struct:Catch::Matchers::Floating::WithinAbsMatcher	typeref:typename:double
m_matcher	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^        MatcherT m_matcher;$/;"	m	class:Catch::MatchExpr	typeref:typename:MatcherT
m_matcherString	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^        StringRef m_matcherString;$/;"	m	class:Catch::MatchExpr	typeref:typename:StringRef
m_matchers	misc/deps/catch2/include/internal/catch_matchers.h	/^            std::vector<MatcherBase<ArgT> const*> m_matchers;$/;"	m	struct:Catch::Matchers::Impl::MatchAllOf	typeref:typename:std::vector<MatcherBase<ArgT> const * >
m_matchers	misc/deps/catch2/include/internal/catch_matchers.h	/^            std::vector<MatcherBase<ArgT> const*> m_matchers;$/;"	m	struct:Catch::Matchers::Impl::MatchAnyOf	typeref:typename:std::vector<MatcherBase<ArgT> const * >
m_matches	misc/deps/catch2/include/internal/catch_session.cpp	/^            TestSpec::Matches m_matches;$/;"	m	class:Catch::__anon2e423b750110::TestGroup	typeref:typename:TestSpec::Matches	file:
m_message	misc/deps/catch2/include/internal/catch_matchers_exception.hpp	/^    std::string m_message;$/;"	m	class:Catch::Matchers::Exception::ExceptionMessageMatcher	typeref:typename:std::string
m_messageScopes	misc/deps/catch2/include/internal/catch_run_context.h	/^        std::vector<ScopedMessage> m_messageScopes; \/* Keeps owners of so-called unscoped messa/;"	m	class:Catch::RunContext	typeref:typename:std::vector<ScopedMessage>
m_messages	misc/deps/catch2/include/internal/catch_message.h	/^        std::vector<MessageInfo> m_messages;$/;"	m	class:Catch::Capturer	typeref:typename:std::vector<MessageInfo>
m_messages	misc/deps/catch2/include/internal/catch_run_context.h	/^        std::vector<MessageInfo> m_messages;$/;"	m	class:Catch::RunContext	typeref:typename:std::vector<MessageInfo>
m_mode	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        Mode m_mode = None;$/;"	m	class:Catch::TestSpecParser	typeref:typename:Mode
m_moved	misc/deps/catch2/include/internal/catch_console_colour.h	/^        bool m_moved = false;$/;"	m	struct:Catch::Colour	typeref:typename:bool
m_moved	misc/deps/catch2/include/internal/catch_message.h	/^        bool m_moved;$/;"	m	class:Catch::ScopedMessage	typeref:typename:bool
m_msg	misc/deps/catch2/include/internal/catch_generators.hpp	/^    const char* const m_msg = "";$/;"	m	class:Catch::GeneratorException	typeref:typename:const char * const
m_msg	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^    std::string m_msg;$/;"	m	class:__anon7fc805e90110::ExceptionTests::CustomException	typeref:typename:std::string	file:
m_msg	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^    std::string m_msg;$/;"	m	class:__anon7fc805e90110::ExceptionTests::CustomStdException	typeref:typename:std::string	file:
m_name	misc/deps/catch2/include/external/clara.hpp	/^        std::shared_ptr<std::string> m_name;$/;"	m	class:Catch::clara::detail::ExeName	typeref:typename:std::shared_ptr<std::string>
m_name	misc/deps/catch2/include/internal/catch_interfaces_enum_values_registry.h	/^            StringRef m_name;$/;"	m	struct:Catch::Detail::EnumInfo	typeref:typename:StringRef
m_name	misc/deps/catch2/include/internal/catch_section.h	/^        std::string m_name;$/;"	m	class:Catch::Section	typeref:typename:std::string
m_name	misc/deps/catch2/include/internal/catch_test_spec.h	/^            std::string const m_name;$/;"	m	class:Catch::TestSpec::Pattern	typeref:typename:std::string const
m_name	misc/deps/catch2/single_include/catch2/catch.hpp	/^            StringRef m_name;$/;"	m	struct:Catch::Detail::EnumInfo	typeref:typename:StringRef
m_name	misc/deps/catch2/third_party/clara.hpp	/^        std::shared_ptr<std::string> m_name;$/;"	m	class:clara::detail::ExeName	typeref:typename:std::shared_ptr<std::string>
m_nameAndLocation	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        NameAndLocation m_nameAndLocation;$/;"	m	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:NameAndLocation
m_nanoseconds	misc/deps/catch2/include/internal/catch_timer.h	/^        uint64_t m_nanoseconds = 0;$/;"	m	class:Catch::Timer	typeref:typename:uint64_t
m_needsNewline	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        bool m_needsNewline = false;$/;"	m	class:Catch::XmlWriter	typeref:typename:bool
m_ofs	misc/deps/catch2/include/internal/catch_stream.cpp	/^            mutable std::ofstream m_ofs;$/;"	m	class:Catch::Detail::__anond61e3add0110::FileStream	typeref:typename:std::ofstream	file:
m_okToFail	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^        bool m_okToFail = false;$/;"	m	class:Catch::JunitReporter	typeref:typename:bool
m_oldErrno	misc/deps/catch2/include/internal/catch_errno_guard.h	/^        int m_oldErrno;$/;"	m	class:Catch::ErrnoGuard	typeref:typename:int
m_op	misc/deps/catch2/include/internal/catch_decomposer.h	/^        StringRef m_op;$/;"	m	class:Catch::BinaryExpr	typeref:typename:StringRef
m_operation	misc/deps/catch2/include/internal/catch_matchers_string.h	/^            std::string m_operation;$/;"	m	struct:Catch::Matchers::StdString::StringMatcherBase	typeref:typename:std::string
m_optNames	misc/deps/catch2/include/external/clara.hpp	/^        std::vector<std::string> m_optNames;$/;"	m	class:Catch::clara::detail::Opt	typeref:typename:std::vector<std::string>
m_optNames	misc/deps/catch2/third_party/clara.hpp	/^        std::vector<std::string> m_optNames;$/;"	m	class:clara::detail::Opt	typeref:typename:std::vector<std::string>
m_optionality	misc/deps/catch2/include/external/clara.hpp	/^        Optionality m_optionality = Optionality::Optional;$/;"	m	class:Catch::clara::detail::ParserRefImpl	typeref:typename:Optionality
m_optionality	misc/deps/catch2/third_party/clara.hpp	/^        Optionality m_optionality = Optionality::Optional;$/;"	m	class:clara::detail::ParserRefImpl	typeref:typename:Optionality
m_options	misc/deps/catch2/include/external/clara.hpp	/^        std::vector<Opt> m_options;$/;"	m	struct:Catch::clara::detail::Parser	typeref:typename:std::vector<Opt>
m_options	misc/deps/catch2/third_party/clara.hpp	/^        std::vector<Opt> m_options;$/;"	m	struct:clara::detail::Parser	typeref:typename:std::vector<Opt>
m_originalStderr	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        int m_originalStderr = -1;$/;"	m	class:Catch::OutputRedirect	typeref:typename:int
m_originalStdout	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        int m_originalStdout = -1;$/;"	m	class:Catch::OutputRedirect	typeref:typename:int
m_originalStream	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        std::ostream& m_originalStream;$/;"	m	class:Catch::RedirectedStream	typeref:typename:std::ostream &
m_os	misc/deps/catch2/include/internal/catch_stream.cpp	/^            mutable std::ostream m_os;$/;"	m	class:Catch::Detail::__anond61e3add0110::CoutStream	typeref:typename:std::ostream	file:
m_os	misc/deps/catch2/include/internal/catch_stream.cpp	/^            mutable std::ostream m_os;$/;"	m	class:Catch::Detail::__anond61e3add0110::DebugOutStream	typeref:typename:std::ostream	file:
m_os	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        std::ostream& m_os;$/;"	m	class:Catch::XmlWriter	typeref:typename:std::ostream &
m_os	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::ostream& m_os;$/;"	m	class:Catch::TablePrinter	typeref:typename:std::ostream &	file:
m_oss	misc/deps/catch2/include/internal/catch_stream.h	/^        std::ostream* m_oss;$/;"	m	class:Catch::ReusableStringStream	typeref:typename:std::ostream *
m_oss	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::ostringstream m_oss;$/;"	m	class:Catch::TablePrinter	typeref:typename:std::ostringstream	file:
m_oss	misc/deps/catch2/single_include/catch2/catch.hpp	/^        std::ostream* m_oss;$/;"	m	class:Catch::ReusableStringStream	typeref:typename:std::ostream *
m_ostreamInit	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^        std::ios_base::Init m_ostreamInit; \/\/ Forces cout\/ cerr to be initialised$/;"	m	class:Catch::TestRegistry	typeref:typename:std::ios_base::Init
m_other	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            SectionInfo const& m_other;$/;"	m	struct:Catch::CumulativeReporterBase::BySectionInfo	typeref:typename:SectionInfo const &
m_parent	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        ITracker* m_parent;$/;"	m	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:ITracker *
m_pattern	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^        std::string m_pattern;$/;"	m	class:Catch::WildcardPattern	typeref:typename:std::string
m_patternName	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        std::string m_patternName;$/;"	m	class:Catch::TestSpecParser	typeref:typename:std::string
m_patterns	misc/deps/catch2/include/internal/catch_test_spec.h	/^            std::vector<PatternPtr> m_patterns;$/;"	m	struct:Catch::TestSpec::Filter	typeref:typename:std::vector<PatternPtr>
m_pos	misc/deps/catch2/include/external/clara.hpp	/^		size_t m_pos = 0;$/;"	m	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:size_t
m_pos	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        std::size_t m_pos = 0;$/;"	m	class:Catch::TestSpecParser	typeref:typename:std::size_t
m_pos	misc/deps/catch2/third_party/clara.hpp	/^            size_t m_pos = 0;$/;"	m	class:clara::TextFlow::Column::iterator	typeref:typename:size_t
m_positive	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    bool m_positive;$/;"	m	class:Catch::Generators::RangeGenerator	typeref:typename:bool
m_predicate	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        Predicate m_predicate;$/;"	m	class:Catch::Generators::FilterGenerator	typeref:typename:Predicate
m_predicate	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^    std::function<bool(T const&)> m_predicate;$/;"	m	class:Catch::Matchers::Generic::PredicateMatcher	typeref:typename:std::function<bool (T const &)>
m_preferences	misc/deps/catch2/include/reporters/catch_reporter_listening.h	/^        ReporterPreferences m_preferences;$/;"	m	class:Catch::ListeningReporter	typeref:typename:ReporterPreferences
m_prevBuf	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        std::streambuf* m_prevBuf;$/;"	m	class:Catch::RedirectedStream	typeref:typename:std::streambuf *
m_rand	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^    std::minstd_rand m_rand;$/;"	m	class:RandomIntGenerator	typeref:typename:std::minstd_rand	file:
m_reaction	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        AssertionReaction m_reaction;$/;"	m	class:Catch::AssertionHandler	typeref:typename:AssertionReaction
m_realPatternPos	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        std::size_t m_realPatternPos = 0;$/;"	m	class:Catch::TestSpecParser	typeref:typename:std::size_t
m_redirectedCerr	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        std::string& m_redirectedCerr;$/;"	m	class:Catch::RedirectedStreams	typeref:typename:std::string &
m_redirectedCout	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        std::string& m_redirectedCout;$/;"	m	class:Catch::RedirectedStreams	typeref:typename:std::string &
m_redirectedStdErr	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        RedirectedStdErr m_redirectedStdErr;$/;"	m	class:Catch::RedirectedStreams	typeref:typename:RedirectedStdErr
m_redirectedStdOut	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        RedirectedStdOut m_redirectedStdOut;$/;"	m	class:Catch::RedirectedStreams	typeref:typename:RedirectedStdOut
m_redirectionStream	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        std::ostream& m_redirectionStream;$/;"	m	class:Catch::RedirectedStream	typeref:typename:std::ostream &
m_ref	misc/deps/catch2/include/external/clara.hpp	/^        T &m_ref;$/;"	m	struct:Catch::clara::detail::BoundValueRef	typeref:typename:T &
m_ref	misc/deps/catch2/include/external/clara.hpp	/^        bool &m_ref;$/;"	m	struct:Catch::clara::detail::BoundFlagRef	typeref:typename:bool &
m_ref	misc/deps/catch2/include/external/clara.hpp	/^        std::shared_ptr<BoundRef> m_ref;$/;"	m	class:Catch::clara::detail::ParserRefImpl	typeref:typename:std::shared_ptr<BoundRef>
m_ref	misc/deps/catch2/include/external/clara.hpp	/^        std::shared_ptr<BoundValueRefBase> m_ref;$/;"	m	class:Catch::clara::detail::ExeName	typeref:typename:std::shared_ptr<BoundValueRefBase>
m_ref	misc/deps/catch2/third_party/clara.hpp	/^        T &m_ref;$/;"	m	struct:clara::detail::BoundValueRef	typeref:typename:T &
m_ref	misc/deps/catch2/third_party/clara.hpp	/^        bool &m_ref;$/;"	m	struct:clara::detail::BoundFlagRef	typeref:typename:bool &
m_ref	misc/deps/catch2/third_party/clara.hpp	/^        std::shared_ptr<BoundRef> m_ref;$/;"	m	class:clara::detail::ParserRefImpl	typeref:typename:std::shared_ptr<BoundRef>
m_ref	misc/deps/catch2/third_party/clara.hpp	/^        std::shared_ptr<BoundValueRefBase> m_ref;$/;"	m	class:clara::detail::ExeName	typeref:typename:std::shared_ptr<BoundValueRefBase>
m_referenceStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^        std::ostringstream m_referenceStream; \/\/ Used for copy state\/ flags from$/;"	m	struct:Catch::StringStreams	typeref:typename:std::ostringstream	file:
m_regex	misc/deps/catch2/include/internal/catch_matchers_string.h	/^            std::string m_regex;$/;"	m	struct:Catch::Matchers::StdString::RegexMatcher	typeref:typename:std::string
m_registry	misc/deps/catch2/include/internal/catch_tag_alias_registry.h	/^        std::map<std::string, TagAlias> m_registry;$/;"	m	class:Catch::TagAliasRegistry	typeref:typename:std::map<std::string,TagAlias>
m_remainingTokens	misc/deps/catch2/include/external/clara.hpp	/^        TokenStream m_remainingTokens;$/;"	m	class:Catch::clara::detail::ParseState	typeref:typename:TokenStream
m_remainingTokens	misc/deps/catch2/third_party/clara.hpp	/^        TokenStream m_remainingTokens;$/;"	m	class:clara::detail::ParseState	typeref:typename:TokenStream
m_repeat_index	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        size_t m_repeat_index = 0;$/;"	m	class:Catch::Generators::RepeatGenerator	typeref:typename:size_t
m_reporter	misc/deps/catch2/include/internal/catch_run_context.h	/^        IStreamingReporterPtr m_reporter;$/;"	m	class:Catch::RunContext	typeref:typename:IStreamingReporterPtr
m_reporter	misc/deps/catch2/include/reporters/catch_reporter_listening.h	/^        IStreamingReporterPtr m_reporter = nullptr;$/;"	m	class:Catch::ListeningReporter	typeref:typename:IStreamingReporterPtr
m_reporterPrefs	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        ReporterPreferences m_reporterPrefs;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:ReporterPreferences
m_reporterPrefs	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        ReporterPreferences m_reporterPrefs;$/;"	m	struct:Catch::StreamingReporterBase	typeref:typename:ReporterPreferences
m_reporterRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            ReporterRegistry m_reporterRegistry;$/;"	m	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:ReporterRegistry	file:
m_result	misc/deps/catch2/include/internal/catch_decomposer.h	/^        bool m_result;$/;"	m	struct:Catch::ITransientExpression	typeref:typename:bool
m_resultCapture	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        IResultCapture& m_resultCapture;$/;"	m	class:Catch::AssertionHandler	typeref:typename:IResultCapture &
m_resultCapture	misc/deps/catch2/include/internal/catch_context.cpp	/^        IResultCapture* m_resultCapture = nullptr;$/;"	m	class:Catch::Context	typeref:typename:IResultCapture *	file:
m_resultCapture	misc/deps/catch2/include/internal/catch_message.h	/^        IResultCapture& m_resultCapture = getResultCapture();$/;"	m	class:Catch::Capturer	typeref:typename:IResultCapture &
m_resultData	misc/deps/catch2/include/internal/catch_assertionresult.h	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult	typeref:typename:AssertionResultData
m_returned	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        mutable std::vector<T> m_returned;$/;"	m	class:Catch::Generators::RepeatGenerator	typeref:typename:std::vector<T>
m_returned	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        size_t m_returned = 0;$/;"	m	class:Catch::Generators::TakeGenerator	typeref:typename:size_t
m_rhs	misc/deps/catch2/include/internal/catch_decomposer.h	/^        RhsT m_rhs;$/;"	m	class:Catch::BinaryExpr	typeref:typename:RhsT
m_rng	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    Catch::SimplePcg32& m_rng;$/;"	m	class:Catch::Generators::RandomFloatingGenerator	typeref:typename:Catch::SimplePcg32 &
m_rng	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    Catch::SimplePcg32& m_rng;$/;"	m	class:Catch::Generators::RandomIntegerGenerator	typeref:typename:Catch::SimplePcg32 &
m_rootSection	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::shared_ptr<SectionNode> m_rootSection;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::shared_ptr<SectionNode>
m_rootTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        ITrackerPtr m_rootTracker;$/;"	m	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:ITrackerPtr
m_rss	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        ReusableStringStream m_rss;$/;"	m	class:Catch::RedirectedStdErr	typeref:typename:ReusableStringStream
m_rss	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        ReusableStringStream m_rss;$/;"	m	class:Catch::RedirectedStdOut	typeref:typename:ReusableStringStream
m_runInfo	misc/deps/catch2/include/internal/catch_run_context.h	/^        TestRunInfo m_runInfo;$/;"	m	class:Catch::RunContext	typeref:typename:TestRunInfo
m_runState	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        CycleState m_runState = NotStarted;$/;"	m	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:CycleState
m_runState	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        RunState m_runState = NotStarted;$/;"	m	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:RunState
m_runner	misc/deps/catch2/include/internal/catch_context.cpp	/^        IRunner* m_runner = nullptr;$/;"	m	class:Catch::Context	typeref:typename:IRunner *	file:
m_scale	misc/deps/catch2/include/internal/catch_approx.h	/^        double m_scale;$/;"	m	class:Catch::Detail::Approx	typeref:typename:double
m_sectionDepth	misc/deps/catch2/include/reporters/catch_reporter_xml.h	/^        int m_sectionDepth = 0;$/;"	m	class:Catch::XmlReporter	typeref:typename:int
m_sectionIncluded	misc/deps/catch2/include/internal/catch_section.h	/^        bool m_sectionIncluded;$/;"	m	class:Catch::Section	typeref:typename:bool
m_sectionStack	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::vector<SectionInfo> m_sectionStack;$/;"	m	struct:Catch::StreamingReporterBase	typeref:typename:std::vector<SectionInfo>
m_sectionStack	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::vector<std::shared_ptr<SectionNode>> m_sectionStack;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::vector<std::shared_ptr<SectionNode>>
m_sections	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::vector<std::vector<std::shared_ptr<SectionNode>>> m_sections;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::vector<std::vector<std::shared_ptr<SectionNode>>>
m_sel	misc/deps/catch2/include/internal/catch_objc.hpp	/^        SEL m_sel;$/;"	m	class:Catch::OcMethod	typeref:typename:SEL
m_shouldReportUnexpected	misc/deps/catch2/include/internal/catch_run_context.h	/^        bool m_shouldReportUnexpected = true;$/;"	m	class:Catch::RunContext	typeref:typename:bool
m_size	misc/deps/catch2/include/internal/catch_stringref.h	/^        size_type m_size = 0;$/;"	m	class:Catch::StringRef	typeref:typename:size_type
m_size	misc/deps/catch2/single_include/catch2/catch.hpp	/^        size_type m_size;$/;"	m	class:Catch::StringRef	typeref:typename:size_type
m_sortedFunctions	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^        mutable std::vector<TestCase> m_sortedFunctions;$/;"	m	class:Catch::TestRegistry	typeref:typename:std::vector<TestCase>
m_start	misc/deps/catch2/include/internal/catch_stringref.h	/^        char const* m_start = s_empty;$/;"	m	class:Catch::StringRef	typeref:typename:char const *
m_start	misc/deps/catch2/single_include/catch2/catch.hpp	/^        char const* m_start;$/;"	m	class:Catch::StringRef	typeref:typename:char const *
m_startupExceptions	misc/deps/catch2/include/internal/catch_session.h	/^        bool m_startupExceptions = false;$/;"	m	class:Catch::Session	typeref:typename:bool
m_state	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^        std::uint64_t m_state;$/;"	m	class:Catch::SimplePcg32	typeref:typename:std::uint64_t
m_stderrDest	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        std::string& m_stderrDest;$/;"	m	class:Catch::OutputRedirect	typeref:typename:std::string &
m_stderrFile	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        TempFile m_stderrFile;$/;"	m	class:Catch::OutputRedirect	typeref:typename:TempFile
m_stdoutDest	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        std::string& m_stdoutDest;$/;"	m	class:Catch::OutputRedirect	typeref:typename:std::string &
m_stdoutFile	misc/deps/catch2/include/internal/catch_output_redirect.h	/^        TempFile m_stdoutFile;$/;"	m	class:Catch::OutputRedirect	typeref:typename:TempFile
m_step	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    T m_step;$/;"	m	class:Catch::Generators::RangeGenerator	typeref:typename:T
m_str	misc/deps/catch2/include/internal/catch_matchers_string.h	/^            std::string m_str;$/;"	m	struct:Catch::Matchers::StdString::CasedString	typeref:typename:std::string
m_str	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        std::string m_str;$/;"	m	class:Catch::XmlEncode	typeref:typename:std::string
m_stream	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^    std::FILE* m_stream;$/;"	m	class:out_buff	typeref:typename:std::FILE *	file:
m_stream	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^    std::stringstream m_stream;$/;"	m	class:LineGenerator	typeref:typename:std::stringstream	file:
m_stream	misc/deps/catch2/include/internal/catch_config.hpp	/^        std::unique_ptr<IStream const> m_stream;$/;"	m	class:Catch::Config	typeref:typename:std::unique_ptr<IStream const>
m_stream	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::ostream* m_stream;$/;"	m	struct:Catch::ReporterConfig	typeref:typename:std::ostream *
m_stream	misc/deps/catch2/include/internal/catch_message.h	/^        ReusableStringStream m_stream;$/;"	m	struct:Catch::MessageStream	typeref:typename:ReusableStringStream
m_streamBuf	misc/deps/catch2/include/internal/catch_stream.cpp	/^            std::unique_ptr<StreamBufImpl<OutputDebugWriter>> m_streamBuf;$/;"	m	class:Catch::Detail::__anond61e3add0110::DebugOutStream	typeref:typename:std::unique_ptr<StreamBufImpl<OutputDebugWriter>>	file:
m_streams	misc/deps/catch2/include/internal/catch_stream.cpp	/^        std::vector<std::unique_ptr<std::ostringstream>> m_streams;$/;"	m	struct:Catch::StringStreams	typeref:typename:std::vector<std::unique_ptr<std::ostringstream>>	file:
m_stringIndex	misc/deps/catch2/include/external/clara.hpp	/^		size_t m_stringIndex = 0;$/;"	m	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:size_t
m_stringIndex	misc/deps/catch2/third_party/clara.hpp	/^            size_t m_stringIndex = 0;$/;"	m	class:clara::TextFlow::Column::iterator	typeref:typename:size_t
m_strings	misc/deps/catch2/include/external/clara.hpp	/^	std::vector<std::string> m_strings;$/;"	m	class:Catch::clara::TextFlow::Column	typeref:typename:std::vector<std::string>
m_strings	misc/deps/catch2/third_party/clara.hpp	/^        std::vector<std::string> m_strings;$/;"	m	class:clara::TextFlow::Column	typeref:typename:std::vector<std::string>
m_substr	misc/deps/catch2/include/internal/catch_objc.hpp	/^                NSString* CATCH_ARC_STRONG m_substr;$/;"	m	struct:Catch::Matchers::Impl::NSStringMatchers::StringHolder	typeref:typename:NSString * CATCH_ARC_STRONG
m_substring	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        std::string m_substring;$/;"	m	class:Catch::TestSpecParser	typeref:typename:std::string
m_suffix	misc/deps/catch2/include/external/clara.hpp	/^		bool m_suffix = false;$/;"	m	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:bool
m_suffix	misc/deps/catch2/third_party/clara.hpp	/^            bool m_suffix = false;$/;"	m	class:clara::TextFlow::Column::iterator	typeref:typename:bool
m_tablePrinter	misc/deps/catch2/include/reporters/catch_reporter_console.h	/^        std::unique_ptr<TablePrinter> m_tablePrinter;$/;"	m	struct:Catch::ConsoleReporter	typeref:typename:std::unique_ptr<TablePrinter>
m_tag	misc/deps/catch2/include/internal/catch_test_spec.h	/^            std::string m_tag;$/;"	m	class:Catch::TestSpec::TagPattern	typeref:typename:std::string
m_tagAliasRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            TagAliasRegistry m_tagAliasRegistry;$/;"	m	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:TagAliasRegistry	file:
m_tagAliases	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        ITagAliasRegistry const* m_tagAliases = nullptr;$/;"	m	class:Catch::TestSpecParser	typeref:typename:ITagAliasRegistry const *
m_tagIsOpen	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        bool m_tagIsOpen = false;$/;"	m	class:Catch::XmlWriter	typeref:typename:bool
m_tags	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        std::vector<std::string> m_tags;$/;"	m	class:Catch::XmlWriter	typeref:typename:std::vector<std::string>
m_target	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        size_t m_target;$/;"	m	class:Catch::Generators::TakeGenerator	typeref:typename:size_t
m_target	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^            double m_target;$/;"	m	struct:Catch::Matchers::Floating::WithinAbsMatcher	typeref:typename:double
m_target	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^            double m_target;$/;"	m	struct:Catch::Matchers::Floating::WithinRelMatcher	typeref:typename:double
m_target	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^            double m_target;$/;"	m	struct:Catch::Matchers::Floating::WithinUlpsMatcher	typeref:typename:double
m_target	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            std::vector<T> const& m_target;$/;"	m	struct:Catch::Matchers::Vector::UnorderedEqualsMatcher	typeref:typename:std::vector<T> const &
m_target_repeats	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        size_t m_target_repeats;$/;"	m	class:Catch::Generators::RepeatGenerator	typeref:typename:size_t
m_testAsFunction	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^        void(*m_testAsFunction)();$/;"	m	class:Catch::TestInvokerAsFunction	typeref:typename:void (*)()
m_testAsMethod	misc/deps/catch2/include/internal/catch_test_registry.h	/^    void (C::*m_testAsMethod)();$/;"	m	class:Catch::TestInvokerAsMethod	typeref:typename:void (C::*)()
m_testAsMethod	misc/deps/catch2/single_include/catch2/catch.hpp	/^    void (C::*m_testAsMethod)();$/;"	m	class:Catch::TestInvokerAsMethod	typeref:typename:void (C::*)()
m_testCaseRegistry	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            TestRegistry m_testCaseRegistry;$/;"	m	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:TestRegistry	file:
m_testCaseTimer	misc/deps/catch2/include/reporters/catch_reporter_xml.h	/^        Timer m_testCaseTimer;$/;"	m	class:Catch::XmlReporter	typeref:typename:Timer
m_testCaseTracker	misc/deps/catch2/include/internal/catch_run_context.h	/^        ITracker* m_testCaseTracker = nullptr;$/;"	m	class:Catch::RunContext	typeref:typename:ITracker *
m_testCases	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::vector<std::shared_ptr<TestCaseNode>> m_testCases;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::vector<std::shared_ptr<TestCaseNode>>
m_testGroups	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::vector<std::shared_ptr<TestGroupNode>> m_testGroups;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::vector<std::shared_ptr<TestGroupNode>>
m_testRuns	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::vector<std::shared_ptr<TestRunNode>> m_testRuns;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::vector<std::shared_ptr<TestRunNode>>
m_testSpec	misc/deps/catch2/include/internal/catch_config.hpp	/^        TestSpec m_testSpec;$/;"	m	class:Catch::Config	typeref:typename:TestSpec
m_testSpec	misc/deps/catch2/include/internal/catch_test_spec_parser.h	/^        TestSpec m_testSpec;$/;"	m	class:Catch::TestSpecParser	typeref:typename:TestSpec
m_testTimer	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        Timer m_testTimer;$/;"	m	struct:Catch::TeamCityReporter	typeref:typename:Timer
m_testTimer	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        Timer m_testTimer;$/;"	m	struct:Catch::TeamCityReporter	typeref:typename:Timer
m_tests	misc/deps/catch2/include/internal/catch_session.cpp	/^            Tests m_tests;$/;"	m	class:Catch::__anon2e423b750110::TestGroup	typeref:typename:Tests	file:
m_text	misc/deps/catch2/examples/207-Rpt-TeamCityReporter.cpp	/^    std::string m_text;$/;"	m	struct:MyExceptionMatcher	typeref:typename:std::string	file:
m_timer	misc/deps/catch2/include/internal/catch_section.h	/^        Timer m_timer;$/;"	m	class:Catch::Section	typeref:typename:Timer
m_tokenBuffer	misc/deps/catch2/include/external/clara.hpp	/^        std::vector<Token> m_tokenBuffer;$/;"	m	class:Catch::clara::detail::TokenStream	typeref:typename:std::vector<Token>
m_tokenBuffer	misc/deps/catch2/third_party/clara.hpp	/^        std::vector<Token> m_tokenBuffer;$/;"	m	class:clara::detail::TokenStream	typeref:typename:std::vector<Token>
m_totals	misc/deps/catch2/include/internal/catch_run_context.h	/^        Totals m_totals;$/;"	m	class:Catch::RunContext	typeref:typename:Totals
m_trackerContext	misc/deps/catch2/include/internal/catch_run_context.h	/^        TrackerContext m_trackerContext;$/;"	m	class:Catch::RunContext	typeref:typename:TrackerContext
m_transientExpression	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        ITransientExpression const* m_transientExpression = nullptr;$/;"	m	class:Catch::LazyExpression	typeref:typename:ITransientExpression const *
m_translateFunction	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^            std::string(*m_translateFunction)( T& );$/;"	m	class:Catch::ExceptionTranslatorRegistrar::ExceptionTranslator	typeref:typename:std::string (*)(T &)
m_translators	misc/deps/catch2/include/internal/catch_exception_translator_registry.h	/^        std::vector<std::unique_ptr<IExceptionTranslator const>> m_translators;$/;"	m	class:Catch::ExceptionTranslatorRegistry	typeref:typename:std::vector<std::unique_ptr<IExceptionTranslator const>>
m_trimmed_name	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        std::string m_trimmed_name;$/;"	m	class:Catch::TestCaseTracking::SectionTracker	typeref:typename:std::string
m_type	misc/deps/catch2/include/external/clara.hpp	/^        ParseResultType m_type;$/;"	m	class:Catch::clara::detail::ParseState	typeref:typename:ParseResultType
m_type	misc/deps/catch2/include/external/clara.hpp	/^        Type m_type;$/;"	m	class:Catch::clara::detail::ResultBase	typeref:typename:Type
m_type	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^            FloatingPointKind m_type;$/;"	m	struct:Catch::Matchers::Floating::WithinUlpsMatcher	typeref:typename:FloatingPointKind
m_type	misc/deps/catch2/third_party/clara.hpp	/^        ParseResultType m_type;$/;"	m	class:clara::detail::ParseState	typeref:typename:ParseResultType
m_type	misc/deps/catch2/third_party/clara.hpp	/^        Type m_type;$/;"	m	class:clara::detail::ResultBase	typeref:typename:Type
m_ulps	misc/deps/catch2/include/internal/catch_matchers_floating.h	/^            uint64_t m_ulps;$/;"	m	struct:Catch::Matchers::Floating::WithinUlpsMatcher	typeref:typename:uint64_t
m_underlyingMatcher	misc/deps/catch2/include/internal/catch_matchers.h	/^            MatcherBase<ArgT> const& m_underlyingMatcher;$/;"	m	struct:Catch::Matchers::Impl::MatchNotOf	typeref:typename:MatcherBase<ArgT> const &
m_underlyingPattern	misc/deps/catch2/include/internal/catch_test_spec.h	/^            PatternPtr m_underlyingPattern;$/;"	m	class:Catch::TestSpec::ExcludedPattern	typeref:typename:PatternPtr
m_unfinishedSections	misc/deps/catch2/include/internal/catch_run_context.h	/^        std::vector<SectionEndInfo> m_unfinishedSections;$/;"	m	class:Catch::RunContext	typeref:typename:std::vector<SectionEndInfo>
m_units	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    Unit m_units;$/;"	m	class:Catch::__anon99a91d3f0110::Duration	typeref:typename:Unit	file:
m_unnamedCount	misc/deps/catch2/include/internal/catch_test_case_registry_impl.h	/^        std::size_t m_unnamedCount = 0;$/;"	m	class:Catch::TestRegistry	typeref:typename:std::size_t
m_unused	misc/deps/catch2/include/internal/catch_stream.cpp	/^        std::vector<std::size_t> m_unused;$/;"	m	struct:Catch::StringStreams	typeref:typename:std::vector<std::size_t>	file:
m_used_up	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        bool m_used_up = false;$/;"	m	class:Catch::Generators::ChunkGenerator	typeref:typename:bool
m_value	misc/deps/catch2/include/external/clara.hpp	/^            T m_value;$/;"	m	union:Catch::clara::detail::ResultValueBase::__anonf1cbda5d010a	typeref:typename:T
m_value	misc/deps/catch2/include/internal/catch_approx.h	/^        double m_value;$/;"	m	class:Catch::Detail::Approx	typeref:typename:double
m_value	misc/deps/catch2/include/internal/catch_generators.hpp	/^        T m_value;$/;"	m	class:Catch::Generators::SingleValueGenerator	typeref:typename:T
m_value	misc/deps/catch2/projects/SelfTest/UsageTests/Decomposition.tests.cpp	/^    bool m_value;$/;"	m	struct:__anonf21a15d70110::truthy	typeref:typename:bool	file:
m_value	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    bool m_value;$/;"	m	struct:Boolable	typeref:typename:bool	file:
m_value	misc/deps/catch2/third_party/clara.hpp	/^            T m_value;$/;"	m	union:clara::detail::ResultValueBase::__anon1a231c31010a	typeref:typename:T
m_values	misc/deps/catch2/include/internal/catch_generators.hpp	/^        std::vector<T> m_values;$/;"	m	class:Catch::Generators::FixedValuesGenerator	typeref:typename:std::vector<T>
m_values	misc/deps/catch2/include/internal/catch_interfaces_enum_values_registry.h	/^            std::vector<std::pair<int, StringRef>> m_values;$/;"	m	struct:Catch::Detail::EnumInfo	typeref:typename:std::vector<std::pair<int,StringRef>>
m_values	misc/deps/catch2/single_include/catch2/catch.hpp	/^            std::vector<std::pair<int, StringRef>> m_values;$/;"	m	struct:Catch::Detail::EnumInfo	typeref:typename:std::vector<std::pair<int,StringRef>>
m_width	misc/deps/catch2/include/external/clara.hpp	/^	size_t m_width = CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH;$/;"	m	class:Catch::clara::TextFlow::Column	typeref:typename:size_t
m_width	misc/deps/catch2/third_party/clara.hpp	/^        size_t m_width = CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH;$/;"	m	class:clara::TextFlow::Column	typeref:typename:size_t
m_wildcard	misc/deps/catch2/include/internal/catch_wildcard_pattern.h	/^        WildcardPosition m_wildcard = NoWildcard;$/;"	m	class:Catch::WildcardPattern	typeref:typename:WildcardPosition
m_wildcardPattern	misc/deps/catch2/include/internal/catch_test_spec.h	/^            WildcardPattern m_wildcardPattern;$/;"	m	class:Catch::TestSpec::NamePattern	typeref:typename:WildcardPattern
m_writer	misc/deps/catch2/include/internal/catch_stream.cpp	/^            WriterF m_writer;$/;"	m	class:Catch::Detail::__anond61e3add0110::StreamBufImpl	typeref:typename:WriterF	file:
m_writer	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^            mutable XmlWriter* m_writer = nullptr;$/;"	m	class:Catch::XmlWriter::ScopedElement	typeref:typename:XmlWriter *
m_xml	misc/deps/catch2/include/reporters/catch_reporter_xml.h	/^        XmlWriter m_xml;$/;"	m	class:Catch::XmlReporter	typeref:typename:XmlWriter
macroName	misc/deps/catch2/include/internal/catch_assertioninfo.h	/^        StringRef macroName;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:StringRef
macroName	misc/deps/catch2/include/internal/catch_message.h	/^        StringRef macroName;$/;"	m	struct:Catch::MessageInfo	typeref:typename:StringRef
macroName	misc/deps/catch2/single_include/catch2/catch.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:StringRef
main	misc/deps/catch2/include/internal/catch_default_main.hpp	/^int main (int argc, char * const argv[]) {$/;"	f	typeref:typename:int
main	misc/deps/catch2/misc/coverage-helper.cpp	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
main()/ implementation	misc/deps/catch2/docs/configuration.md	/^## main()\/ implementation$/;"	s
main_file	misc/deps/catch2/scripts/benchmarkCompile.py	/^main_file = r'''$/;"	v
main_file	misc/deps/catch2/scripts/updateWandbox.py	/^main_file = '''$/;"	v
main_name	misc/deps/catch2/scripts/benchmarkCompile.py	/^main_name = 'catch-main.cpp'$/;"	v
majorVersion	misc/deps/catch2/include/internal/catch_version.h	/^        unsigned int const majorVersion;$/;"	m	struct:Catch::Version	typeref:typename:unsigned int const
make	Makefile	/^make:$/;"	t
make	misc/Makefile	/^make:$/;"	t
make	misc/deps/ezbuild/Makefile	/^make:$/;"	t
makeCommandLineParser	misc/deps/catch2/include/internal/catch_commandline.cpp	/^    clara::Parser makeCommandLineParser( ConfigData& config ) {$/;"	f	namespace:Catch	typeref:typename:clara::Parser
makeEnumInfo	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^        std::unique_ptr<EnumInfo> makeEnumInfo( StringRef enumName, StringRef allValueNames, std/;"	f	namespace:Catch::Detail	typeref:typename:std::unique_ptr<EnumInfo>
makeGenerators	misc/deps/catch2/include/internal/catch_generators.hpp	/^    auto makeGenerators( GeneratorWrapper<T>&& generator ) -> Generators<T> {$/;"	f	namespace:Catch::Generators	typeref:typename:Generators<T>
makeGenerators	misc/deps/catch2/include/internal/catch_generators.hpp	/^    auto makeGenerators( GeneratorWrapper<T>&& generator, Gs... moreGenerators ) -> Generators<T/;"	f	namespace:Catch::Generators	typeref:typename:Generators<T>
makeGenerators	misc/deps/catch2/include/internal/catch_generators.hpp	/^    auto makeGenerators( T&& val, Gs... moreGenerators ) -> Generators<T> {$/;"	f	namespace:Catch::Generators	typeref:typename:Generators<T>
makeGenerators	misc/deps/catch2/include/internal/catch_generators.hpp	/^    auto makeGenerators( as<T>, U&& val, Gs... moreGenerators ) -> Generators<T> {$/;"	f	namespace:Catch::Generators	typeref:typename:Generators<T>
makeMatchExpr	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^    auto makeMatchExpr( ArgT const& arg, MatcherT const& matcher, StringRef const& matcherString/;"	f	namespace:Catch	typeref:typename:MatchExpr<ArgT,MatcherT>
makeNAL	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^Catch::TestCaseTracking::NameAndLocation makeNAL( std::string const& name ) {$/;"	f	namespace:__anon93dc02b70110	typeref:typename:Catch::TestCaseTracking::NameAndLocation
makeRatio	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^std::size_t makeRatio(std::size_t number, std::size_t total) {$/;"	f	namespace:Catch::__anon99a91d3f0110	typeref:typename:std::size_t
makeRef	misc/deps/catch2/include/external/clara.hpp	/^        static auto makeRef(LambdaT const &lambda) -> std::shared_ptr<BoundValueRefBase> {$/;"	f	class:Catch::clara::detail::ExeName	typeref:typename:std::shared_ptr<BoundValueRefBase>
makeRef	misc/deps/catch2/third_party/clara.hpp	/^        static auto makeRef(LambdaT const &lambda) -> std::shared_ptr<BoundValueRefBase> {$/;"	f	class:clara::detail::ExeName	typeref:typename:std::shared_ptr<BoundValueRefBase>
makeReporter	misc/deps/catch2/include/internal/catch_session.cpp	/^        IStreamingReporterPtr makeReporter(std::shared_ptr<Config> const& config) {$/;"	f	namespace:Catch::__anon2e423b750110	typeref:typename:IStreamingReporterPtr
makeStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^    auto makeStream( StringRef const &filename ) -> IStream const* {$/;"	f	namespace:Catch	typeref:typename:IStream const *
makeString	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^inline const char* makeString( bool makeNull ) {$/;"	f	namespace:__anone7dbb1860110::MiscTests	typeref:typename:const char *
makeTestCase	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    TestCase makeTestCase(  ITestInvoker* _testCase,$/;"	f	namespace:Catch	typeref:typename:TestCase
makeTestInvoker	misc/deps/catch2/include/internal/catch_test_registry.cpp	/^    auto makeTestInvoker( void(*testAsFunction)() ) noexcept -> ITestInvoker* {$/;"	f	namespace:Catch	typeref:typename:auto
makeTestInvoker	misc/deps/catch2/include/internal/catch_test_registry.h	/^auto makeTestInvoker( void (C::*testAsMethod)() ) noexcept -> ITestInvoker* {$/;"	f	namespace:Catch	typeref:typename:auto
makeTestInvoker	misc/deps/catch2/single_include/catch2/catch.hpp	/^auto makeTestInvoker( void (C::*testAsMethod)() ) noexcept -> ITestInvoker* {$/;"	f	namespace:Catch	typeref:typename:auto
makeUnaryExpr	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto makeUnaryExpr() const -> UnaryExpr<LhsT> {$/;"	f	class:Catch::ExprLhs	typeref:typename:UnaryExpr<LhsT>
make_data	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    std::vector<int> make_data() {$/;"	f	namespace:__anonee6a7c340610	typeref:typename:std::vector<int>
make_data_counted	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    std::vector<int> make_data_counted() {$/;"	f	namespace:__anonee6a7c340610	typeref:typename:std::vector<int>
make_unique	misc/deps/catch2/include/internal/catch_generators.hpp	/^        std::unique_ptr<T> make_unique( Args&&... args ) {$/;"	f	namespace:Catch::Generators::pf	typeref:typename:std::unique_ptr<T>
manual_clock	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    struct manual_clock {$/;"	s	namespace:__anon7f22177c0110	file:
manuallyRegisteredTestFunction	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^inline void manuallyRegisteredTestFunction() {$/;"	f	namespace:__anone7dbb1860110::MiscTests	typeref:typename:void
map	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    GeneratorWrapper<T> map(Func&& function, GeneratorWrapper<U>&& generator) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<T>
map	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        std::map<std::string, int> map = { { "one", 1 } };$/;"	v	typeref:typename:std::map<std::string,int>
map	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        std::map<std::string, int> map = {$/;"	v	typeref:typename:std::map<std::string,int>
mapFile	misc/deps/catch2/scripts/embed.py	/^    def mapFile(self, filenameIn, filenameOut ):$/;"	m	class:LineMapper
mapLine	misc/deps/catch2/scripts/embed.py	/^    def mapLine( self, lineNo, line ):$/;"	m	class:LineMapper
mapper	misc/deps/catch2/scripts/embedClara.py	/^mapper = embed.LineMapper( idMap, outerNamespace )$/;"	v
margin	misc/deps/catch2/include/internal/catch_approx.h	/^        Approx& margin( T const& newMargin ) {$/;"	f	class:Catch::Detail::Approx	typeref:typename:Approx &
margin	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            ApproxMatcher& margin( T const& newMargin ) {$/;"	f	struct:Catch::Matchers::Vector::ApproxMatcher	typeref:typename:ApproxMatcher &
margin example	misc/deps/catch2/docs/assertions.md	/^#### margin example$/;"	t
marginComparison	misc/deps/catch2/include/internal/catch_approx.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:__anoned0ef4eb0110	typeref:typename:bool
marginComparison	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:Catch::__anon3ab11d7b0210	typeref:typename:bool
markAsNeedingAnotherRun	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::markAsNeedingAnotherRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:void
markdownToclify	misc/deps/catch2/scripts/updateDocumentToC.py	/^def markdownToclify($/;"	f
match	misc/deps/catch2/examples/207-Rpt-TeamCityReporter.cpp	/^    bool match( std::runtime_error const & arg ) const override$/;"	f	struct:MyExceptionMatcher	typeref:typename:bool	file:
match	misc/deps/catch2/include/internal/catch_matchers.h	/^            bool match( ArgT const& arg ) const override {$/;"	f	struct:Catch::Matchers::Impl::MatchAllOf	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers.h	/^            bool match( ArgT const& arg ) const override {$/;"	f	struct:Catch::Matchers::Impl::MatchAnyOf	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers.h	/^            bool match( ArgT const& arg ) const override {$/;"	f	struct:Catch::Matchers::Impl::MatchNotOf	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_exception.cpp	/^bool ExceptionMessageMatcher::match(std::exception const& ex) const {$/;"	f	class:Catch::Matchers::Exception::ExceptionMessageMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    bool WithinAbsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::Floating::WithinAbsMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    bool WithinRelMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::Floating::WithinRelMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    bool WithinUlpsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::Floating::WithinUlpsMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_generic.hpp	/^    bool match( T const& item ) const override {$/;"	f	class:Catch::Matchers::Generic::PredicateMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        bool ContainsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StdString::ContainsMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        bool EndsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StdString::EndsWithMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        bool EqualsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StdString::EqualsMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        bool RegexMatcher::match(std::string const& matchee) const {$/;"	f	class:Catch::Matchers::StdString::RegexMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_string.cpp	/^        bool StartsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StdString::StartsWithMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            bool match(std::vector<T> const &v) const override {$/;"	f	struct:Catch::Matchers::Vector::ApproxMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            bool match(std::vector<T> const &v) const override {$/;"	f	struct:Catch::Matchers::Vector::ContainsElementMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            bool match(std::vector<T> const &v) const override {$/;"	f	struct:Catch::Matchers::Vector::ContainsMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            bool match(std::vector<T> const &v) const override {$/;"	f	struct:Catch::Matchers::Vector::EqualsMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            bool match(std::vector<T> const& vec) const override {$/;"	f	struct:Catch::Matchers::Vector::UnorderedEqualsMatcher	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_objc.hpp	/^                bool match( NSString* str ) const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::Contains	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_objc.hpp	/^                bool match( NSString* str ) const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::EndsWith	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_objc.hpp	/^                bool match( NSString* str ) const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::Equals	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_objc.hpp	/^                bool match( NSString* str ) const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::StartsWith	typeref:typename:bool
match	misc/deps/catch2/include/internal/catch_objc.hpp	/^                bool match( NSString* str ) const override {$/;"	f	struct:Catch::Matchers::Impl::NSStringMatchers::StringHolder	typeref:typename:bool
match	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^        bool match(SpecialException const &se) const override {$/;"	f	class:__anon96897c110110::MatchersTests::ExceptionMatcher	typeref:typename:bool	file:
match	misc/deps/catch2/scripts/releaseNotes.py	/^            match = issueNumberRe.match( match.group(3) )$/;"	v
match	misc/deps/catch2/scripts/releaseNotes.py	/^        match = issueNumberRe.match( line )$/;"	v
matchTest	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    bool matchTest( TestCase const& testCase, TestSpec const& testSpec, IConfig const& config ) /;"	f	namespace:Catch	typeref:typename:bool
matches	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    bool TestSpec::ExcludedPattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::ExcludedPattern	typeref:typename:bool
matches	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    bool TestSpec::Filter::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::Filter	typeref:typename:bool
matches	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    bool TestSpec::NamePattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::NamePattern	typeref:typename:bool
matches	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    bool TestSpec::TagPattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::TagPattern	typeref:typename:bool
matches	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    bool TestSpec::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec	typeref:typename:bool
matches	misc/deps/catch2/include/internal/catch_wildcard_pattern.cpp	/^    bool WildcardPattern::matches( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern	typeref:typename:bool
matchesByFilter	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    TestSpec::Matches TestSpec::matchesByFilter( std::vector<TestCase> const& testCases, IConfig/;"	f	class:Catch::TestSpec	typeref:typename:TestSpec::Matches
mean	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^            Duration mean;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate	typeref:typename:Duration
mean	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^            Estimate<Duration> mean;$/;"	m	struct:Catch::Benchmark::SampleAnalysis	typeref:typename:Estimate<Duration>
mean	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                Estimate<double> mean;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis	typeref:typename:Estimate<double>
mean	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^            double mean(Iterator first, Iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:double
mean	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        Benchmark::Estimate<Duration> mean;$/;"	m	struct:Catch::BenchmarkStats	typeref:typename:Benchmark::Estimate<Duration>
mean	misc/deps/catch2/scripts/benchmarkCompile.py	/^def mean(lst):$/;"	f
measure	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            void measure(Fun&& fun) { measure(std::forward<Fun>(fun), is_callable<Fun(int)>()); /;"	f	struct:Catch::Benchmark::Chronometer	typeref:typename:void
measure	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            void measure(Fun&& fun, std::false_type) {$/;"	f	struct:Catch::Benchmark::Chronometer	typeref:typename:void
measure	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            void measure(Fun&& fun, std::true_type) {$/;"	f	struct:Catch::Benchmark::Chronometer	typeref:typename:void
measure	misc/deps/catch2/include/internal/benchmark/detail/catch_measure.hpp	/^            TimingOf<Clock, Fun(Args...)> measure(Fun&& fun, Args&&... args) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:TimingOf<Clock,Fun (Args...)>
measure_environment	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            Environment<FloatDuration<Clock>> measure_environment() {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:Environment<FloatDuration<Clock>>
measure_one	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^            TimingOf<Clock, Fun(Chronometer)> measure_one(Fun&& fun, int iters, std::true_type) /;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:TimingOf<Clock,Fun (Chronometer)>
measure_one	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^            TimingOf<Clock, Fun(int)> measure_one(Fun&& fun, int iters, std::false_type) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:TimingOf<Clock,Fun (int)>
med	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto med = Catch::Benchmark::Detail::weighted_average_quantile(1, 2, x.begin(), x.end());$/;"	v	typeref:typename:auto
median	misc/deps/catch2/scripts/benchmarkCompile.py	/^def median(lst):$/;"	f
message	misc/deps/catch2/include/internal/catch_assertionresult.h	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData	typeref:typename:std::string
message	misc/deps/catch2/include/internal/catch_message.h	/^        std::string message;$/;"	m	struct:Catch::MessageInfo	typeref:typename:std::string
message	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::string message;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:std::string	file:
messageLabel	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::string messageLabel;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:std::string	file:
messages	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    std::vector<MessageInfo> messages;$/;"	m	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:std::vector<MessageInfo>	file:
messages	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::vector<MessageInfo> messages;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:std::vector<MessageInfo>	file:
messages	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            std::vector<MessageInfo> messages;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::vector<MessageInfo>
messages	misc/deps/catch2/scripts/releaseNotes.py	/^messages = []$/;"	v
messages	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            std::vector<MessageInfo> messages;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::vector<MessageInfo>
micro	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto micro = std::chrono::microseconds(1);$/;"	v	typeref:typename:auto
milli	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto milli = std::chrono::milliseconds(1);$/;"	v	typeref:typename:auto
minInt	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    const int minInt = (std::numeric_limits<int>::min)();$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:const int
minTocEntries	misc/deps/catch2/scripts/updateDocumentToC.py	/^minTocEntries = 4$/;"	v
minimal_allocator	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        minimal_allocator(const minimal_allocator<U>&) {}$/;"	f	struct:__anon8bbeb4870110::minimal_allocator	file:
minimal_allocator	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    struct minimal_allocator {$/;"	s	namespace:__anon8bbeb4870110	file:
minimum_ticks	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto minimum_ticks = 1000;$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
minorVersion	misc/deps/catch2/include/internal/catch_version.h	/^        unsigned int const minorVersion;$/;"	m	struct:Catch::Version	typeref:typename:unsigned int const
minute	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto minute = std::chrono::minutes(1);$/;"	v	typeref:typename:auto
missingAssertions	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        bool missingAssertions;$/;"	m	struct:Catch::SectionStats	typeref:typename:bool
mmax	misc/tests/utils/vmfill.cpp	/^static size_t mmax(int fd, size_t *start)$/;"	f	typeref:typename:size_t	file:
model	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                    model(Fun const& fun) : fun(fun) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
model	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                    model(Fun&& fun) : fun(std::move(fun)) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
model	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                struct model : public callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
moveToParent	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::moveToParent() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:void
moveToThis	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::moveToThis() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:void
mpl_	misc/deps/catch2/include/internal/catch_meta.hpp	/^namespace mpl_{$/;"	n
mpl_	misc/deps/catch2/single_include/catch2/catch.hpp	/^namespace mpl_{$/;"	n
n	misc/tests/ft_string/substr.cpp	/^    int n = 6;$/;"	v	typeref:typename:int
name	misc/deps/catch2/conanfile.py	/^    name = "Catch2"$/;"	v	class:CatchConan
name	misc/deps/catch2/include/external/clara.hpp	/^        auto name() const -> std::string { return *m_name; }$/;"	f	class:Catch::clara::detail::ExeName	typeref:typename:std::string
name	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^            std::string name;$/;"	m	struct:Catch::Benchmark::Benchmark	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_config.cpp	/^    std::string Config::name() const                   { return m_data.name.empty() ? m_data.pro/;"	f	class:Catch::Config	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_config.hpp	/^        std::string name;$/;"	m	struct:Catch::ConfigData	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^        const char* name;$/;"	m	struct:Catch::SignalDefs	typeref:typename:const char *	file:
name	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	typeref:typename:const char *	file:
name	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::string name;$/;"	m	struct:Catch::BenchmarkInfo	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::string name;$/;"	m	struct:Catch::GroupInfo	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::string name;$/;"	m	struct:Catch::TestRunInfo	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_section_info.h	/^        std::string name;$/;"	m	struct:Catch::SectionInfo	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        std::string name;$/;"	m	struct:Catch::TestCaseInfo	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_test_case_tracker.h	/^        std::string name;$/;"	m	struct:Catch::TestCaseTracking::NameAndLocation	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_test_registry.h	/^    StringRef name;$/;"	m	struct:Catch::NameAndTags	typeref:typename:StringRef
name	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    std::string TestSpec::Filter::name() const {$/;"	f	class:Catch::TestSpec::Filter	typeref:typename:std::string
name	misc/deps/catch2/include/internal/catch_test_spec.cpp	/^    std::string const& TestSpec::Pattern::name() const {$/;"	f	class:Catch::TestSpec::Pattern	typeref:typename:std::string const &
name	misc/deps/catch2/include/internal/catch_test_spec.h	/^            std::string name;$/;"	m	struct:Catch::TestSpec::FilterMatch	typeref:typename:std::string
name	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::string name;$/;"	m	struct:Catch::__anon99a91d3f0110::ColumnInfo	typeref:typename:std::string	file:
name	misc/deps/catch2/single_include/catch2/catch.hpp	/^    StringRef name;$/;"	m	struct:Catch::NameAndTags	typeref:typename:StringRef
name	misc/deps/catch2/third_party/clara.hpp	/^        auto name() const -> std::string { return *m_name; }$/;"	f	class:clara::detail::ExeName	typeref:typename:std::string
nameAndLocation	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    NameAndLocation const& TrackerBase::nameAndLocation() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:NameAndLocation const &
nanParser	misc/deps/catch2/scripts/approvalTests.py	/^nanParser = re.compile(r'''$/;"	v
nano	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto nano = std::chrono::nanoseconds(1);$/;"	v	typeref:typename:auto
nanosecondsInSecond	misc/deps/catch2/include/internal/catch_timer.cpp	/^static const uint64_t nanosecondsInSecond = 1000000000;$/;"	v	typeref:typename:const uint64_t	file:
nc	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    non_copyable nc; nc.value = value;$/;"	v	typeref:typename:non_copyable
newline	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        char newline = '\\n';$/;"	v	typeref:typename:char
newlineIfNecessary	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    void XmlWriter::newlineIfNecessary() {$/;"	f	class:Catch::XmlWriter	typeref:typename:void
next	inc/ft_list.h	/^    struct s_list   *next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^    bool next() override {$/;"	f	class:RandomIntGenerator	typeref:typename:bool	file:
next	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^    bool next() override {$/;"	f	class:LineGenerator	typeref:typename:bool	file:
next	misc/deps/catch2/include/internal/catch_generators.hpp	/^        bool next() override {$/;"	f	class:Catch::Generators::FixedValuesGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators.hpp	/^        bool next() override {$/;"	f	class:Catch::Generators::Generators	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators.hpp	/^        bool next() override {$/;"	f	class:Catch::Generators::SingleValueGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators.hpp	/^        bool next() {$/;"	f	class:Catch::Generators::GeneratorWrapper	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        bool next() override {$/;"	f	class:Catch::Generators::ChunkGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        bool next() override {$/;"	f	class:Catch::Generators::FilterGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        bool next() override {$/;"	f	class:Catch::Generators::MapGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        bool next() override {$/;"	f	class:Catch::Generators::RepeatGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^        bool next() override {$/;"	f	class:Catch::Generators::TakeGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    bool next() override {$/;"	f	class:Catch::Generators::IteratorGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    bool next() override {$/;"	f	class:Catch::Generators::RandomFloatingGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    bool next() override {$/;"	f	class:Catch::Generators::RandomIntegerGenerator	typeref:typename:bool
next	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^    bool next() override {$/;"	f	class:Catch::Generators::RangeGenerator	typeref:typename:bool
next	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    bool next() override {$/;"	f	class:__anon78e517e00510::TestGen	typeref:typename:bool	file:
nextafter	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    double nextafter(double x, double y) {$/;"	f	namespace:Catch	typeref:typename:double
nextafter	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    float nextafter(float x, float y) {$/;"	f	namespace:Catch	typeref:typename:float
nextafter	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^    long double nextafter(long double x, long double y) {$/;"	f	namespace:Catch	typeref:typename:long double
nextafter	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    double nextafter(double from, double to)$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:double
nextafter	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    float nextafter(float from, float to)$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:float
noMatchingTestCases	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void noMatchingTestCases(std::string const&) override {}$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::noMatchingTestCases( std::string const& spec ) {$/;"	f	class:Catch::CompactReporter	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::noMatchingTestCases(std::string const& spec) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::noMatchingTestCases( std::string const& \/*spec*\/ ) {}$/;"	f	class:Catch::JunitReporter	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::noMatchingTestCases( std::string const& spec ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        void noMatchingTestCases( std::string const& spec ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void noMatchingTestCases( std::string const& \/* spec *\/ ) override {}$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::noMatchingTestCases( std::string const& s ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        void noMatchingTestCases( std::string const& spec ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
noMatchingTestCases	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void noMatchingTestCases( std::string const& \/* spec *\/ ) override {}$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
noThrow	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool noThrow = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
no_whitespace	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^static const char * const no_whitespace = "There is no extra whitespace here";$/;"	v	typeref:typename:const char * const	file:
nonDevelopRelease	misc/deps/catch2/scripts/releaseCommon.py	/^    def nonDevelopRelease(self):$/;"	m	class:Version
non_copyable	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^struct non_copyable {$/;"	s	namespace:__anon78e517e00510	file:
none	misc/deps/catch2/include/internal/catch_option.hpp	/^        bool none() const { return nullableValue == nullptr; }$/;"	f	class:Catch::Option	typeref:typename:bool
normal_cdf	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^            inline double normal_cdf(double x) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:double
normal_quantile	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^            double normal_quantile(double p) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:double
normaliseOpt	misc/deps/catch2/include/external/clara.hpp	/^    inline auto normaliseOpt( std::string const &optName ) -> std::string {$/;"	f	namespace:Catch::clara::detail	typeref:typename:std::string
normaliseOpt	misc/deps/catch2/third_party/clara.hpp	/^    inline auto normaliseOpt( std::string const &optName ) -> std::string {$/;"	f	namespace:clara::detail	typeref:typename:std::string
normaliseString	misc/deps/catch2/include/internal/catch_wildcard_pattern.cpp	/^    std::string WildcardPattern::normaliseString( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern	typeref:typename:std::string
normalizeFilepath	misc/deps/catch2/scripts/approvalTests.py	/^def normalizeFilepath(line):$/;"	f
norme	Makefile	/^norme:$/;"	t
norme	misc/Makefile	/^norme:$/;"	t
norme	misc/deps/ezbuild/Makefile	/^norme:$/;"	t
not_this_one	misc/deps/catch2/include/internal/catch_tostring.h	/^    struct not_this_one {}; \/\/ Tag type for detecting which begin\/ end are being selected$/;"	s	namespace:Catch
not_this_one	misc/deps/catch2/single_include/catch2/catch.hpp	/^    struct not_this_one {}; \/\/ Tag type for detecting which begin\/ end are being selected$/;"	s	namespace:Catch
now	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^        struct now {$/;"	s	namespace:Catch::Benchmark
now	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static time_point now() {$/;"	f	struct:__anon7f22177c0110::counting_clock	typeref:typename:time_point	file:
now	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static time_point now() {$/;"	f	struct:__anon7f22177c0110::manual_clock	typeref:typename:time_point	file:
now	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto now = std::chrono::high_resolution_clock::now();$/;"	v	typeref:typename:auto
now	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto now = std::chrono::system_clock::now();$/;"	v	typeref:typename:auto
now2	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto now2 = std::chrono::steady_clock::now();$/;"	v	typeref:typename:auto
nsCloseRe	misc/deps/catch2/scripts/embed.py	/^nsCloseRe = re.compile( r'(.*\\s*})(\\s*\\\/\\\/\\s*namespace\\s+)(\\w+)(\\s*)(.*)' )$/;"	v
nsRe	misc/deps/catch2/scripts/embed.py	/^nsRe = re.compile( r'(.*?\\s*\\s*namespace\\s+)(\\w+)(\\s*{?)(.*)' )$/;"	v
nullParser	misc/deps/catch2/scripts/approvalTests.py	/^nullParser = re.compile(r'\\b(__null|nullptr)\\b')$/;"	v
null_terminator	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        char null_terminator = '\\0';$/;"	v	typeref:typename:char
null_test	misc/tests/ft_memory/calloc.cpp	/^null_test (void)$/;"	f	typeref:typename:void	file:
nullableValue	misc/deps/catch2/include/internal/catch_option.hpp	/^        T *nullableValue;$/;"	m	class:Catch::Option	typeref:typename:T *
num	misc/deps/catch2/examples/301-Gen-MapTypeConversion.cpp	/^    auto num = GENERATE(map<int>([](std::string const& line) { return std::stoi(line); },$/;"	v	typeref:typename:auto
num_runs	misc/deps/catch2/scripts/benchmarkRunner.py	/^num_runs = 10$/;"	v
number	misc/deps/catch2/examples/310-Gen-VariablesInGenerators.cpp	/^    auto number = GENERATE_COPY(take(50, random(std::get<0>(r), std::get<1>(r))));$/;"	v	typeref:typename:auto
number	misc/deps/catch2/examples/311-Gen-CustomCapture.cpp	/^    auto number = Catch::Generators::generate( CATCH_INTERNAL_LINEINFO,$/;"	v	typeref:typename:auto
o	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        auto o = Catch::Benchmark::Detail::classify_outliers(x.begin(), x.end());$/;"	v	typeref:typename:auto
o	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^        Object o;$/;"	v	namespace:ObjectWithConversions	typeref:typename:Object
o	misc/tests/ft_string/split.cpp	/^    char    **o = ft_split(s1, s);$/;"	v	typeref:typename:char **
o	misc/tests/ft_string/substr.cpp	/^    char *o = ft_substr(s1, 6, 4);$/;"	v	typeref:typename:char *
o	misc/tests/ft_string/substr.cpp	/^    char *o = ft_substr(s1, 6, 5);$/;"	v	typeref:typename:char *
o	misc/tests/ft_string/substr.cpp	/^    char *o = ft_substr(s1, 6, 6);$/;"	v	typeref:typename:char *
o1	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    Opaque o1, o2;$/;"	v	typeref:typename:Opaque
o2	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    Opaque o1, o2;$/;"	v	typeref:typename:Opaque
ob	src/ft_io/ft_ob.c	/^char	*ob(void	(*callback)())$/;"	f	typeref:typename:char *
obj	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    Obj obj;$/;"	v	typeref:typename:Obj
obj	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.h	/^    TestObj* obj;$/;"	E	interface:TestFixture
obj	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    CHECK( [obj isFalse] == YES );$/;"	C	implementation:TestFixture
obj	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    CHECK( [obj isTrue] == NO );$/;"	C	implementation:TestFixture
obj	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE( obj.int_val == 0 );$/;"	C	implementation:TestFixture
obj	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE( obj.int_val == 1 );$/;"	C	implementation:TestFixture
obj	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    REQUIRE( obj.int_val == 2 );$/;"	C	implementation:TestFixture
ok	misc/deps/catch2/include/external/clara.hpp	/^        static auto ok( U const &value ) -> BasicResult { return { ResultBase::Ok, value }; }$/;"	f	class:Catch::clara::detail::BasicResult	typeref:typename:BasicResult
ok	misc/deps/catch2/include/external/clara.hpp	/^        static auto ok() -> BasicResult { return { ResultBase::Ok }; }$/;"	f	class:Catch::clara::detail::BasicResult	typeref:typename:BasicResult
ok	misc/deps/catch2/third_party/clara.hpp	/^        static auto ok( U const &value ) -> BasicResult { return { ResultBase::Ok, value }; }$/;"	f	class:clara::detail::BasicResult	typeref:typename:BasicResult
ok	misc/deps/catch2/third_party/clara.hpp	/^        static auto ok() -> BasicResult { return { ResultBase::Ok }; }$/;"	f	class:clara::detail::BasicResult	typeref:typename:BasicResult
okToFail	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    bool TestCaseInfo::okToFail() const {$/;"	f	class:Catch::TestCaseInfo	typeref:typename:bool
oldPrecision	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        const auto oldPrecision = sm::precision;$/;"	v	typeref:typename:const auto
oldSigActions	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    struct sigaction FatalConditionHandler::oldSigActions[sizeof(signalDefs)\/sizeof(SignalDefs)/;"	m	class:Catch::FatalConditionHandler	typeref:struct:sigaction[]
oldSigActions	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^        static struct sigaction oldSigActions[];$/;"	m	struct:Catch::FatalConditionHandler	typeref:struct:sigaction[]
oldSigStack	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    stack_t FatalConditionHandler::oldSigStack = {};$/;"	m	class:Catch::FatalConditionHandler	typeref:typename:stack_t
oldSigStack	misc/deps/catch2/include/internal/catch_fatal_condition.h	/^        static stack_t oldSigStack;$/;"	m	struct:Catch::FatalConditionHandler	typeref:typename:stack_t
old_runs	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    int old_runs = 1;$/;"	v	typeref:typename:int
old_x	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    int old_x = 1;$/;"	v	typeref:typename:int
one	misc/deps/catch2/examples/030-Asn-Require-Check.cpp	/^std::string one() {$/;"	f	typeref:typename:std::string
oneValue	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    std::array<int, 1> oneValue = {{ 42 }};$/;"	v	typeref:typename:std::array<int,1>
open	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::open() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:void
open	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    void open() {$/;"	f	class:Catch::TablePrinter	typeref:typename:void	file:
openChild	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::openChild() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:void
openStream	misc/deps/catch2/include/internal/catch_config.cpp	/^    IStream const* Config::openStream() {$/;"	f	class:Catch::Config	typeref:typename:IStream const *
operator !	misc/deps/catch2/include/internal/catch_matchers.h	/^        MatchNotOf<T> MatcherBase<T>::operator ! () const {$/;"	f	class:Catch::Matchers::Impl::MatcherBase	typeref:typename:MatchNotOf<T>
operator !	misc/deps/catch2/include/internal/catch_option.hpp	/^        bool operator !() const { return nullableValue == nullptr; }$/;"	f	class:Catch::Option	typeref:typename:bool
operator !=	misc/deps/catch2/include/external/clara.hpp	/^		auto operator !=(iterator const& other) const -> bool {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:bool
operator !=	misc/deps/catch2/include/external/clara.hpp	/^		auto operator !=(iterator const& other) const -> bool {$/;"	f	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:bool
operator !=	misc/deps/catch2/include/internal/catch_approx.h	/^        friend bool operator != ( Approx const& lhs, T const& rhs ) {$/;"	f	namespace:Catch::Detail	typeref:typename:bool
operator !=	misc/deps/catch2/include/internal/catch_approx.h	/^        friend bool operator != ( T const& lhs, Approx const& rhs ) {$/;"	f	namespace:Catch::Detail	typeref:typename:bool
operator !=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator != ( RhsT const& rhs ) -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator !=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator != ( T ) const -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::BinaryExpr	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator !=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator != ( bool rhs ) -> BinaryExpr<LhsT, bool> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,bool> const
operator !=	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^    bool operator!=(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch	typeref:typename:bool
operator !=	misc/deps/catch2/include/internal/catch_stringref.h	/^        auto operator != (StringRef const& other) const noexcept -> bool {$/;"	f	class:Catch::StringRef	typeref:typename:auto
operator !=	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        logic_t operator!=(logic_t) const { return {}; }$/;"	f	struct:__anonb1aeb3b90110::CompilationTests::logic_t	typeref:typename:logic_t	file:
operator !=	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        bool operator!=( const minimal_allocator<U>& ) const { return false; }$/;"	f	struct:__anon8bbeb4870110::minimal_allocator	typeref:typename:bool	file:
operator !=	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    bool operator!=(int_iterator rhs) const { return val != rhs.val; }$/;"	f	struct:__anonfad788a70210::int_iterator	typeref:typename:bool	file:
operator !=	misc/deps/catch2/third_party/clara.hpp	/^            auto operator !=( iterator const& other ) const -> bool {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:bool
operator !=	misc/deps/catch2/third_party/clara.hpp	/^            auto operator !=( iterator const& other ) const -> bool {$/;"	f	class:clara::TextFlow::Columns::iterator	typeref:typename:bool
operator &&	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator && ( RhsT const& ) -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator &&	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator && ( T ) const -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::BinaryExpr	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator &&	misc/deps/catch2/include/internal/catch_matchers.h	/^            MatchAllOf<ArgT>& operator && ( MatcherBase<ArgT> const& other ) {$/;"	f	struct:Catch::Matchers::Impl::MatchAllOf	typeref:typename:MatchAllOf<ArgT> &
operator &&	misc/deps/catch2/include/internal/catch_matchers.h	/^        MatchAllOf<T> MatcherBase<T>::operator && ( MatcherBase const& other ) const {$/;"	f	class:Catch::Matchers::Impl::MatcherBase	typeref:typename:MatchAllOf<T>
operator ()	misc/deps/catch2/include/external/clara.hpp	/^        auto operator()( std::string const &description ) -> DerivedT & {$/;"	f	class:Catch::clara::detail::ParserRefImpl	typeref:typename:DerivedT &
operator ()	misc/deps/catch2/include/internal/benchmark/catch_clock.hpp	/^            TimePoint<Clock> operator()() const {$/;"	f	struct:Catch::Benchmark::now	typeref:typename:TimePoint<Clock>
operator ()	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::do_nothing	typeref:typename:void
operator ()	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                void operator()(Chronometer meter) const { f->call(meter); }$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction	typeref:typename:void
operator ()	misc/deps/catch2/include/internal/benchmark/detail/catch_repeat.hpp	/^                void operator()(int k) const {$/;"	f	struct:Catch::Benchmark::Detail::repeater	typeref:typename:void
operator ()	misc/deps/catch2/include/internal/catch_approx.h	/^        Approx operator()( T const& value ) {$/;"	f	class:Catch::Detail::Approx	typeref:typename:Approx
operator ()	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^    SimplePcg32::result_type SimplePcg32::operator()() {$/;"	f	class:Catch::SimplePcg32	typeref:typename:SimplePcg32::result_type
operator ()	misc/deps/catch2/include/internal/catch_stream.cpp	/^            void operator()( std::string const&str ) {$/;"	f	struct:Catch::Detail::__anond61e3add0110::OutputDebugWriter	typeref:typename:void	file:
operator ()	misc/deps/catch2/third_party/clara.hpp	/^        auto operator()( std::string const &description ) -> DerivedT & {$/;"	f	class:clara::detail::ParserRefImpl	typeref:typename:DerivedT &
operator () 	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            bool operator() (std::shared_ptr<SectionNode> const& node) const {$/;"	f	struct:Catch::CumulativeReporterBase::BySectionInfo	typeref:typename:bool
operator *	misc/deps/catch2/include/external/clara.hpp	/^		auto operator *() const -> std::string {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:std::string
operator *	misc/deps/catch2/include/external/clara.hpp	/^		auto operator *() const -> std::string {$/;"	f	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:std::string
operator *	misc/deps/catch2/include/external/clara.hpp	/^        auto operator*() const -> Token {$/;"	f	class:Catch::clara::detail::TokenStream	typeref:typename:Token
operator *	misc/deps/catch2/include/internal/catch_option.hpp	/^        T const& operator*() const { return *nullableValue; }$/;"	f	class:Catch::Option	typeref:typename:T const &
operator *	misc/deps/catch2/include/internal/catch_option.hpp	/^        T& operator*() { return *nullableValue; }$/;"	f	class:Catch::Option	typeref:typename:T &
operator *	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    value_type operator*() const { return val; }$/;"	f	struct:__anonfad788a70210::int_iterator	typeref:typename:value_type	file:
operator *	misc/deps/catch2/third_party/clara.hpp	/^            auto operator *() const -> std::string {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:std::string
operator *	misc/deps/catch2/third_party/clara.hpp	/^            auto operator *() const -> std::string {$/;"	f	class:clara::TextFlow::Columns::iterator	typeref:typename:std::string
operator *	misc/deps/catch2/third_party/clara.hpp	/^        auto operator*() const -> Token {$/;"	f	class:clara::detail::TokenStream	typeref:typename:Token
operator +	misc/deps/catch2/include/external/clara.hpp	/^	auto operator + (Column const& col) -> Columns {$/;"	f	class:Catch::clara::TextFlow::Columns	typeref:typename:Columns
operator +	misc/deps/catch2/include/external/clara.hpp	/^        auto operator+( T const &other ) const -> Parser { return operator|( other ); }$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:Parser
operator +	misc/deps/catch2/include/external/clara.hpp	/^inline auto Column::operator + (Column const& other) -> Columns {$/;"	f	class:Catch::clara::TextFlow::Column	typeref:typename:Columns
operator +	misc/deps/catch2/include/internal/catch_common.cpp	/^    std::string StreamEndStop::operator+() const {$/;"	f	class:Catch::StreamEndStop	typeref:typename:std::string
operator +	misc/deps/catch2/include/internal/catch_common.h	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch	typeref:typename:T const &
operator +	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    TestDef& operator + ( const std::string& ) {$/;"	f	struct:__anon8b7f96210110::ConditionTests::TestDef	typeref:typename:TestDef &	file:
operator +	misc/deps/catch2/single_include/catch2/catch.hpp	/^    T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	namespace:Catch	typeref:typename:T const &
operator +	misc/deps/catch2/third_party/clara.hpp	/^        auto operator + ( Column const& col ) -> Columns {$/;"	f	class:clara::TextFlow::Columns	typeref:typename:Columns
operator +	misc/deps/catch2/third_party/clara.hpp	/^        auto operator+( T const &other ) const -> Parser { return operator|( other ); }$/;"	f	struct:clara::detail::Parser	typeref:typename:Parser
operator +	misc/deps/catch2/third_party/clara.hpp	/^    inline auto Column::operator + ( Column const& other ) -> Columns {$/;"	f	class:clara::TextFlow::Column	typeref:typename:Columns
operator ++	misc/deps/catch2/include/external/clara.hpp	/^		auto operator ++() -> iterator& {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:iterator &
operator ++	misc/deps/catch2/include/external/clara.hpp	/^		auto operator ++() -> iterator& {$/;"	f	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:iterator &
operator ++	misc/deps/catch2/include/external/clara.hpp	/^		auto operator ++(int) -> iterator {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:iterator
operator ++	misc/deps/catch2/include/external/clara.hpp	/^		auto operator ++(int) -> iterator {$/;"	f	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:iterator
operator ++	misc/deps/catch2/include/external/clara.hpp	/^        auto operator++() -> TokenStream & {$/;"	f	class:Catch::clara::detail::TokenStream	typeref:typename:TokenStream &
operator ++	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator operator++() { ++val; return *this; }$/;"	f	struct:__anonfad788a70210::int_iterator	typeref:typename:int_iterator	file:
operator ++	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator operator++(int) {$/;"	f	struct:__anonfad788a70210::int_iterator	typeref:typename:int_iterator	file:
operator ++	misc/deps/catch2/third_party/clara.hpp	/^            auto operator ++() -> iterator& {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:iterator &
operator ++	misc/deps/catch2/third_party/clara.hpp	/^            auto operator ++() -> iterator& {$/;"	f	class:clara::TextFlow::Columns::iterator	typeref:typename:iterator &
operator ++	misc/deps/catch2/third_party/clara.hpp	/^            auto operator ++(int) -> iterator {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:iterator
operator ++	misc/deps/catch2/third_party/clara.hpp	/^            auto operator ++(int) -> iterator {$/;"	f	class:clara::TextFlow::Columns::iterator	typeref:typename:iterator
operator ++	misc/deps/catch2/third_party/clara.hpp	/^        auto operator++() -> TokenStream & {$/;"	f	class:clara::detail::TokenStream	typeref:typename:TokenStream &
operator +=	misc/deps/catch2/include/external/clara.hpp	/^	auto operator += (Column const& col) -> Columns& {$/;"	f	class:Catch::clara::TextFlow::Columns	typeref:typename:Columns &
operator +=	misc/deps/catch2/include/external/clara.hpp	/^        auto operator+=( T const &other ) -> Parser & { return operator|=( other ); }$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:Parser &
operator +=	misc/deps/catch2/include/internal/catch_stringref.cpp	/^    auto operator+=( std::string& lhs, StringRef const& rhs ) -> std::string& {$/;"	f	namespace:Catch	typeref:typename:std::string &
operator +=	misc/deps/catch2/include/internal/catch_totals.cpp	/^    Counts& Counts::operator += ( Counts const& other ) {$/;"	f	class:Catch::Counts	typeref:typename:Counts &
operator +=	misc/deps/catch2/include/internal/catch_totals.cpp	/^    Totals& Totals::operator += ( Totals const& other ) {$/;"	f	class:Catch::Totals	typeref:typename:Totals &
operator +=	misc/deps/catch2/third_party/clara.hpp	/^        auto operator += ( Column const& col ) -> Columns& {$/;"	f	class:clara::TextFlow::Columns	typeref:typename:Columns &
operator +=	misc/deps/catch2/third_party/clara.hpp	/^        auto operator+=( T const &other ) -> Parser & { return operator|=( other ); }$/;"	f	struct:clara::detail::Parser	typeref:typename:Parser &
operator -	misc/deps/catch2/include/internal/catch_approx.cpp	/^    Approx Approx::operator-() const {$/;"	f	class:Catch::Detail::Approx	typeref:typename:Approx
operator -	misc/deps/catch2/include/internal/catch_totals.cpp	/^    Counts Counts::operator - ( Counts const& other ) const {$/;"	f	class:Catch::Counts	typeref:typename:Counts
operator -	misc/deps/catch2/include/internal/catch_totals.cpp	/^    Totals Totals::operator - ( Totals const& other ) const {$/;"	f	class:Catch::Totals	typeref:typename:Totals
operator ->	misc/deps/catch2/include/external/clara.hpp	/^        auto operator->() const -> Token const * {$/;"	f	class:Catch::clara::detail::TokenStream	typeref:typename:Token const *
operator ->	misc/deps/catch2/include/internal/catch_option.hpp	/^        T* operator->() { return nullableValue; }$/;"	f	class:Catch::Option	typeref:typename:T *
operator ->	misc/deps/catch2/include/internal/catch_option.hpp	/^        const T* operator->() const { return nullableValue; }$/;"	f	class:Catch::Option	typeref:typename:const T *
operator ->	misc/deps/catch2/third_party/clara.hpp	/^        auto operator->() const -> Token const * {$/;"	f	class:clara::detail::TokenStream	typeref:typename:Token const *
operator <	misc/deps/catch2/include/internal/catch_common.cpp	/^    bool SourceLineInfo::operator < ( SourceLineInfo const& other ) const noexcept {$/;"	f	class:Catch::SourceLineInfo	typeref:typename:bool
operator <	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator < ( RhsT const& rhs ) -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator <	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator < ( T ) const -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::BinaryExpr	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator <	misc/deps/catch2/include/internal/catch_message.cpp	/^    bool MessageInfo::operator<( MessageInfo const& other ) const {$/;"	f	class:Catch::MessageInfo	typeref:typename:bool
operator <	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    bool TestCase::operator < ( TestCase const& other ) const {$/;"	f	class:Catch::TestCase	typeref:typename:bool
operator <	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        logic_t operator< (logic_t) const { return {}; }$/;"	f	struct:__anonb1aeb3b90110::CompilationTests::logic_t	typeref:typename:logic_t	file:
operator <<	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^std::ostream& operator<<( std::ostream& os, std::vector<T> const& v ) {$/;"	f	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/external/clara.hpp	/^	inline friend std::ostream& operator << (std::ostream& os, Column const& col) {$/;"	f	namespace:Catch::clara::TextFlow	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/external/clara.hpp	/^	inline friend std::ostream& operator << (std::ostream& os, Columns const& cols) {$/;"	f	namespace:Catch::clara::TextFlow	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/external/clara.hpp	/^        friend auto operator<<( std::ostream &os, Parser const &parser ) -> std::ostream& {$/;"	f	namespace:Catch::clara::detail	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^        auto operator <<( std::ostream& os, ITransientExpression const& expr ) -> std::ostream& /;"	f	namespace:Catch::__anonfea7b9670110	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    auto operator << ( std::ostream& os, LazyExpression const& lazyExpr ) -> std::ostream& {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/internal/catch_common.cpp	/^    std::ostream& operator << ( std::ostream& os, SourceLineInfo const& info ) {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    std::ostream& operator << ( std::ostream& os, Colour const& ) {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/internal/catch_message.h	/^        MessageBuilder& operator << ( T const& value ) {$/;"	f	struct:Catch::MessageBuilder	typeref:typename:MessageBuilder &
operator <<	misc/deps/catch2/include/internal/catch_message.h	/^        MessageStream& operator << ( T const& value ) {$/;"	f	struct:Catch::MessageStream	typeref:typename:MessageStream &
operator <<	misc/deps/catch2/include/internal/catch_stream.h	/^        auto operator << ( T const& value ) -> ReusableStringStream& {$/;"	f	class:Catch::ReusableStringStream	typeref:typename:ReusableStringStream &
operator <<	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    std::ostream& operator << ( std::ostream& os, pluralise const& pluraliser ) {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/internal/catch_stringref.cpp	/^    auto operator << ( std::ostream& os, StringRef const& str ) -> std::ostream& {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/internal/catch_version.cpp	/^    std::ostream& operator << ( std::ostream& os, Version const& version ) {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    std::ostream& operator << ( std::ostream& os, XmlEncode const& xmlEncode ) {$/;"	f	namespace:Catch	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, ColumnBreak) {$/;"	f	namespace:Catch	typeref:typename:TablePrinter &	file:
operator <<	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, RowBreak) {$/;"	f	namespace:Catch	typeref:typename:TablePrinter &	file:
operator <<	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, T const& value) {$/;"	f	namespace:Catch	typeref:typename:TablePrinter &	file:
operator <<	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    friend auto operator << (std::ostream& os, Duration const& duration) -> std::ostream& {$/;"	f	namespace:Catch::__anon99a91d3f0110	typeref:typename:std::ostream &	file:
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^    inline std::ostream& operator<<( std::ostream& os, StrongDoubleTypedef td ) {$/;"	f	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    std::ostream &operator<<(std::ostream &o, const A &) { return o << 0; }$/;"	f	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^std::ostream& operator<<(std::ostream& out, foo::helper_1403 const&) {$/;"	f	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/Decomposition.tests.cpp	/^std::ostream& operator<<(std::ostream& o, truthy) {$/;"	f	namespace:__anonf21a15d70110	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^std::ostream& operator<<( std::ostream& os, Enum2 v ) {$/;"	f	namespace:__anonc1e781690110	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/EnumToString.tests.cpp	/^std::ostream& operator<<( std::ostream& os, EnumClass2 e2 ) {$/;"	f	namespace:__anonc1e781690210	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^std::ostream& operator<<(std::ostream& out, helper_1436<T1, T2> const& helper) {$/;"	f	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^std::ostream& operator<<(std::ostream& out, OperatorException const&) {$/;"	f	namespace:__anon7572b8720110	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^StreamT& operator<<(StreamT& os, const has_template_operator&) {$/;"	f	namespace:__anonfad788a70110	typeref:typename:StreamT &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^std::ostream& operator<<(std::ostream& os, const has_maker_and_operator&) {$/;"	f	namespace:__anonfad788a70110	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^std::ostream& operator<<(std::ostream& os, const has_operator&) {$/;"	f	namespace:__anonfad788a70110	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^std::ostream& operator<<(std::ostream& os, const streamable_range&) {$/;"	f	namespace:__anonfad788a70210	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/single_include/catch2/catch.hpp	/^        auto operator << ( T const& value ) -> ReusableStringStream& {$/;"	f	class:Catch::ReusableStringStream	typeref:typename:ReusableStringStream &
operator <<	misc/deps/catch2/third_party/clara.hpp	/^        friend auto operator<<( std::ostream &os, Parser const &parser ) -> std::ostream& {$/;"	f	namespace:clara::detail	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/third_party/clara.hpp	/^        inline friend std::ostream& operator << ( std::ostream& os, Column const& col ) {$/;"	f	namespace:clara::TextFlow	typeref:typename:std::ostream &
operator <<	misc/deps/catch2/third_party/clara.hpp	/^        inline friend std::ostream& operator << ( std::ostream& os, Columns const& cols ) {$/;"	f	namespace:clara::TextFlow	typeref:typename:std::ostream &
operator << overload for std::ostream	misc/deps/catch2/docs/tostring.md	/^## operator << overload for std::ostream$/;"	s
operator <=	misc/deps/catch2/include/internal/catch_approx.h	/^        friend bool operator <= ( Approx const& lhs, T const& rhs ) {$/;"	f	namespace:Catch::Detail	typeref:typename:bool
operator <=	misc/deps/catch2/include/internal/catch_approx.h	/^        friend bool operator <= ( T const& lhs, Approx const& rhs ) {$/;"	f	namespace:Catch::Detail	typeref:typename:bool
operator <=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator <= ( RhsT const& rhs ) -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator <=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator <= ( T ) const -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::BinaryExpr	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator <=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator <= ( T const& lhs ) -> ExprLhs<T const&> {$/;"	f	struct:Catch::Decomposer	typeref:typename:ExprLhs<T const &>
operator <=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator <=( bool value ) -> ExprLhs<bool> {$/;"	f	struct:Catch::Decomposer	typeref:typename:ExprLhs<bool>
operator <=	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        logic_t operator<=(logic_t) const { return {}; }$/;"	f	struct:__anonb1aeb3b90110::CompilationTests::logic_t	typeref:typename:logic_t	file:
operator =	misc/deps/catch2/include/external/clara.hpp	/^        auto operator=( ResultValueBase const &other ) -> ResultValueBase & {$/;"	f	class:Catch::clara::detail::ResultValueBase	typeref:typename:ResultValueBase &
operator =	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction& operator=(BenchmarkFunction const& that) {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction	typeref:typename:BenchmarkFunction &
operator =	misc/deps/catch2/include/internal/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction& operator=(BenchmarkFunction&& that) {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction	typeref:typename:BenchmarkFunction &
operator =	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    Colour& Colour::operator=( Colour&& rhs ) noexcept {$/;"	f	class:Catch::Colour	typeref:typename:Colour &
operator =	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        LazyStat& operator=( T const& _value ) {$/;"	f	struct:Catch::LazyStat	typeref:typename:LazyStat &
operator =	misc/deps/catch2/include/internal/catch_option.hpp	/^        Option& operator = ( T const& _value ) {$/;"	f	class:Catch::Option	typeref:typename:Option &
operator =	misc/deps/catch2/include/internal/catch_option.hpp	/^        Option& operator= ( Option const& _other ) {$/;"	f	class:Catch::Option	typeref:typename:Option &
operator =	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement& XmlWriter::ScopedElement::operator=( ScopedElement&& other ) noexc/;"	f	class:Catch::XmlWriter::ScopedElement	typeref:typename:XmlWriter::ScopedElement &
operator =	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    MyType1& operator=(MyType1 const&) { throw 3; }$/;"	f	struct:MyType1	typeref:typename:MyType1 &	file:
operator =	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    MyType2& operator=(MyType2 const&) { throw 4; }$/;"	f	struct:MyType2	typeref:typename:MyType2 &	file:
operator =	misc/deps/catch2/single_include/catch2/catch.hpp	/^        auto operator = ( StringRef const &other ) noexcept -> StringRef& {$/;"	f	class:Catch::StringRef	typeref:typename:auto
operator =	misc/deps/catch2/third_party/clara.hpp	/^        auto operator=( ResultValueBase const &other ) -> ResultValueBase & {$/;"	f	class:clara::detail::ResultValueBase	typeref:typename:ResultValueBase &
operator ==	misc/deps/catch2/include/external/clara.hpp	/^		auto operator ==(iterator const& other) const -> bool {$/;"	f	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:bool
operator ==	misc/deps/catch2/include/external/clara.hpp	/^		auto operator ==(iterator const& other) const -> bool {$/;"	f	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:bool
operator ==	misc/deps/catch2/include/internal/catch_approx.h	/^        friend bool operator == ( Approx const& lhs, const T& rhs ) {$/;"	f	namespace:Catch::Detail	typeref:typename:bool
operator ==	misc/deps/catch2/include/internal/catch_approx.h	/^        friend bool operator == ( const T& lhs, Approx const& rhs ) {$/;"	f	namespace:Catch::Detail	typeref:typename:bool
operator ==	misc/deps/catch2/include/internal/catch_common.cpp	/^    bool SourceLineInfo::operator == ( SourceLineInfo const& other ) const noexcept {$/;"	f	class:Catch::SourceLineInfo	typeref:typename:bool
operator ==	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator == ( RhsT const& rhs ) -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator ==	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator == ( T ) const -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::BinaryExpr	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator ==	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator == ( bool rhs ) -> BinaryExpr<LhsT, bool> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,bool> const
operator ==	misc/deps/catch2/include/internal/catch_message.cpp	/^    bool MessageInfo::operator==( MessageInfo const& other ) const {$/;"	f	class:Catch::MessageInfo	typeref:typename:bool
operator ==	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^    bool operator==(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch	typeref:typename:bool
operator ==	misc/deps/catch2/include/internal/catch_stringref.cpp	/^    auto StringRef::operator == ( StringRef const& other ) const noexcept -> bool {$/;"	f	class:Catch::StringRef	typeref:typename:auto
operator ==	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    bool TestCase::operator == ( TestCase const& other ) const {$/;"	f	class:Catch::TestCase	typeref:typename:bool
operator ==	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            bool operator == (SectionNode const& other) const {$/;"	f	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:bool
operator ==	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            bool operator == (std::shared_ptr<SectionNode> const& other) const {$/;"	f	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:bool
operator ==	misc/deps/catch2/projects/ExtraTests/X11-DisableStringification.cpp	/^bool operator==(Hidden, Hidden) { return true; }$/;"	f	typeref:typename:bool
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator==(helper_1403) const { return true; }$/;"	f	struct:foo::helper_1403	typeref:typename:bool	file:
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator==(int) const { return true; }$/;"	f	struct:__anonb1aeb3b90110::CompilationTests::B	typeref:typename:bool	file:
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        logic_t operator==(logic_t) const { return {}; }$/;"	f	struct:__anonb1aeb3b90110::CompilationTests::logic_t	typeref:typename:logic_t	file:
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    bool operator==(const T &val, foo f) {$/;"	f	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:bool
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        bool operator==( const minimal_allocator<U>& ) const { return true; }$/;"	f	struct:__anon8bbeb4870110::minimal_allocator	typeref:typename:bool	file:
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    bool operator==(int_iterator rhs) const { return val == rhs.val; }$/;"	f	struct:__anonfad788a70210::int_iterator	typeref:typename:bool	file:
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    bool operator ==( const Opaque& o ) const$/;"	f	struct:Opaque	typeref:typename:bool	file:
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^inline bool operator==(const A::X& lhs, const B::Y& rhs)$/;"	f	typeref:typename:bool
operator ==	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^inline bool operator==(const B::Y& lhs, const A::X& rhs)$/;"	f	typeref:typename:bool
operator ==	misc/deps/catch2/third_party/clara.hpp	/^            auto operator ==( iterator const& other ) const -> bool {$/;"	f	class:clara::TextFlow::Column::iterator	typeref:typename:bool
operator ==	misc/deps/catch2/third_party/clara.hpp	/^            auto operator ==( iterator const& other ) const -> bool {$/;"	f	class:clara::TextFlow::Columns::iterator	typeref:typename:bool
operator >	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator > ( RhsT const& rhs ) -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator >	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator > ( T ) const -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::BinaryExpr	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator >	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        logic_t operator> (logic_t) const { return {}; }$/;"	f	struct:__anonb1aeb3b90110::CompilationTests::logic_t	typeref:typename:logic_t	file:
operator >=	misc/deps/catch2/include/internal/catch_approx.h	/^        friend bool operator >= ( Approx const& lhs, T const& rhs ) {$/;"	f	namespace:Catch::Detail	typeref:typename:bool
operator >=	misc/deps/catch2/include/internal/catch_approx.h	/^        friend bool operator >= ( T const& lhs, Approx const& rhs ) {$/;"	f	namespace:Catch::Detail	typeref:typename:bool
operator >=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator >= ( RhsT const& rhs ) -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator >=	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator >= ( T ) const -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::BinaryExpr	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator >=	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        logic_t operator>=(logic_t) const { return {}; }$/;"	f	struct:__anonb1aeb3b90110::CompilationTests::logic_t	typeref:typename:logic_t	file:
operator BenchmarkStats<Duration2>	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        operator BenchmarkStats<Duration2>() const {$/;"	f	struct:Catch::BenchmarkStats
operator EnvironmentEstimate<Duration2>	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^            operator EnvironmentEstimate<Duration2>() const {$/;"	f	struct:Catch::Benchmark::EnvironmentEstimate
operator Estimate<Duration2>	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^            operator Estimate<Duration2>() const {$/;"	f	struct:Catch::Benchmark::Estimate
operator ExecutionPlan<Duration2>	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^            operator ExecutionPlan<Duration2>() const {$/;"	f	struct:Catch::Benchmark::ExecutionPlan
operator SampleAnalysis<Duration2>	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^            operator SampleAnalysis<Duration2>() const {$/;"	f	struct:Catch::Benchmark::SampleAnalysis
operator []	misc/deps/catch2/include/external/clara.hpp	/^        auto operator[]( std::string const &optName ) -> Opt & {$/;"	f	class:Catch::clara::detail::Opt	typeref:typename:Opt &
operator []	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    TestDef& operator[]( const std::string& ) {$/;"	f	struct:__anon8b7f96210110::ConditionTests::TestDef	typeref:typename:TestDef &	file:
operator []	misc/deps/catch2/third_party/clara.hpp	/^        auto operator[]( std::string const &optName ) -> Opt & {$/;"	f	class:clara::detail::Opt	typeref:typename:Opt &
operator [] 	misc/deps/catch2/include/internal/catch_stringref.h	/^        auto operator[] ( size_type index ) const noexcept -> char {$/;"	f	class:Catch::StringRef	typeref:typename:auto
operator [] 	misc/deps/catch2/single_include/catch2/catch.hpp	/^        auto operator[] ( size_type index ) const noexcept -> char {$/;"	f	class:Catch::StringRef	typeref:typename:auto
operator std::string	misc/deps/catch2/include/internal/catch_stringref.h	/^        explicit operator std::string() const {$/;"	f	class:Catch::StringRef
operator std::string	misc/deps/catch2/single_include/catch2/catch.hpp	/^        explicit operator std::string() const {$/;"	f	class:Catch::StringRef
operator |	misc/deps/catch2/include/external/clara.hpp	/^        auto operator|( T const &other ) const -> Parser {$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:Parser
operator |	misc/deps/catch2/include/external/clara.hpp	/^    auto ComposableParserImpl<DerivedT>::operator|( T const &other ) const -> Parser {$/;"	f	class:Catch::clara::detail::ComposableParserImpl	typeref:typename:Parser
operator |	misc/deps/catch2/include/internal/catch_result_type.cpp	/^    ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags/;"	f	namespace:Catch	typeref:typename:ResultDisposition::Flags
operator |	misc/deps/catch2/third_party/clara.hpp	/^        auto operator|( T const &other ) const -> Parser {$/;"	f	struct:clara::detail::Parser	typeref:typename:Parser
operator |	misc/deps/catch2/third_party/clara.hpp	/^    auto ComposableParserImpl<DerivedT>::operator|( T const &other ) const -> Parser {$/;"	f	class:clara::detail::ComposableParserImpl	typeref:typename:Parser
operator |=	misc/deps/catch2/include/external/clara.hpp	/^        auto operator|=( Arg const &arg ) -> Parser & {$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:Parser &
operator |=	misc/deps/catch2/include/external/clara.hpp	/^        auto operator|=( ExeName const &exeName ) -> Parser & {$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:Parser &
operator |=	misc/deps/catch2/include/external/clara.hpp	/^        auto operator|=( Opt const &opt ) -> Parser & {$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:Parser &
operator |=	misc/deps/catch2/include/external/clara.hpp	/^        auto operator|=( Parser const &other ) -> Parser & {$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:Parser &
operator |=	misc/deps/catch2/third_party/clara.hpp	/^        auto operator|=( Arg const &arg ) -> Parser & {$/;"	f	struct:clara::detail::Parser	typeref:typename:Parser &
operator |=	misc/deps/catch2/third_party/clara.hpp	/^        auto operator|=( ExeName const &exeName ) -> Parser & {$/;"	f	struct:clara::detail::Parser	typeref:typename:Parser &
operator |=	misc/deps/catch2/third_party/clara.hpp	/^        auto operator|=( Opt const &opt ) -> Parser & {$/;"	f	struct:clara::detail::Parser	typeref:typename:Parser &
operator |=	misc/deps/catch2/third_party/clara.hpp	/^        auto operator|=( Parser const &other ) -> Parser & {$/;"	f	struct:clara::detail::Parser	typeref:typename:Parser &
operator ||	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator || ( RhsT const& ) -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::ExprLhs	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator ||	misc/deps/catch2/include/internal/catch_decomposer.h	/^        auto operator || ( T ) const -> BinaryExpr<LhsT, RhsT const&> const {$/;"	f	class:Catch::BinaryExpr	typeref:typename:BinaryExpr<LhsT,RhsT const &> const
operator ||	misc/deps/catch2/include/internal/catch_matchers.h	/^            MatchAnyOf<ArgT>& operator || ( MatcherBase<ArgT> const& other ) {$/;"	f	struct:Catch::Matchers::Impl::MatchAnyOf	typeref:typename:MatchAnyOf<ArgT> &
operator ||	misc/deps/catch2/include/internal/catch_matchers.h	/^        MatchAnyOf<T> MatcherBase<T>::operator || ( MatcherBase const& other ) const {$/;"	f	class:Catch::Matchers::Impl::MatcherBase	typeref:typename:MatchAnyOf<T>
optimized_away_error	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^            struct optimized_away_error : std::exception {$/;"	s	namespace:Catch::Benchmark::Detail
optimizer_barrier	misc/deps/catch2/include/internal/benchmark/catch_optimizer.hpp	/^            inline void optimizer_barrier() { keep_memory(); }$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:void
optional	misc/deps/catch2/include/external/clara.hpp	/^        auto optional() -> DerivedT & {$/;"	f	class:Catch::clara::detail::ParserRefImpl	typeref:typename:DerivedT &
optional	misc/deps/catch2/third_party/clara.hpp	/^        auto optional() -> DerivedT & {$/;"	f	class:clara::detail::ParserRefImpl	typeref:typename:DerivedT &
options	misc/deps/catch2/scripts/benchmarkCompile.py	/^options = ['all', 'main', 'files', 'link']$/;"	v
original	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        StringRef original = StringRef( "original string" ).substr(0, 8);$/;"	v	typeref:typename:StringRef
originalBackgroundAttributes	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        WORD originalBackgroundAttributes;$/;"	m	class:Catch::__anonabe5bc570210::Win32ColourImpl	typeref:typename:WORD	file:
originalForegroundAttributes	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        WORD originalForegroundAttributes;$/;"	m	class:Catch::__anonabe5bc570210::Win32ColourImpl	typeref:typename:WORD	file:
out	misc/tests/ft_string/strmapi.cpp	/^    char    *out;$/;"	v	typeref:typename:char *
out_buff	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^    out_buff(std::FILE* stream) :m_stream(stream) {}$/;"	f	class:out_buff	file:
out_buff	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^class out_buff : public std::stringbuf {$/;"	c	file:
outerNamespace	misc/deps/catch2/scripts/embedClara.py	/^outerNamespace = { "clara": ("Catch", "clara") }$/;"	v
outfilename	misc/deps/catch2/scripts/embedClara.py	/^outfilename = os.path.join( rootPath, "include", "external", "clara.hpp" )$/;"	v
outlierVariance	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        double outlierVariance;$/;"	m	struct:Catch::BenchmarkStats	typeref:typename:double
outlier_variance	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^            double outlier_variance;$/;"	m	struct:Catch::Benchmark::SampleAnalysis	typeref:typename:double
outlier_variance	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^            double outlier_variance(Estimate<double> mean, Estimate<double> stddev, int n) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:double
outlier_variance	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                double outlier_variance;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis	typeref:typename:double
outliers	misc/deps/catch2/include/internal/benchmark/catch_environment.hpp	/^            OutlierClassification outliers;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate	typeref:typename:OutlierClassification
outliers	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^            OutlierClassification outliers;$/;"	m	struct:Catch::Benchmark::SampleAnalysis	typeref:typename:OutlierClassification
outliers	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        Benchmark::OutlierClassification outliers;$/;"	m	struct:Catch::BenchmarkStats	typeref:typename:Benchmark::OutlierClassification
outputFilename	misc/deps/catch2/include/internal/catch_config.hpp	/^        std::string outputFilename;$/;"	m	struct:Catch::ConfigData	typeref:typename:std::string
outputMarkdown	misc/deps/catch2/scripts/updateDocumentToC.py	/^def outputMarkdown(markdown_cont, output_file):$/;"	f
overallResult	misc/deps/catch2/scripts/approvalTests.py	/^overallResult = 0$/;"	v
overflow	misc/deps/catch2/include/internal/catch_stream.cpp	/^            int overflow( int c ) override {$/;"	f	class:Catch::Detail::__anond61e3add0110::StreamBufImpl	typeref:typename:int	file:
p	misc/deps/catch2/include/internal/catch_tostring.h	/^            cli::pin_ptr<System::Byte> p = &bytes[0];$/;"	v	namespace:Catch::Detail	typeref:typename:cli::pin_ptr<System::Byte>
p	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    TestData* p = nullptr;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:TestData *
p	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    int p;$/;"	v	typeref:typename:int
p	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    int p;$/;"	m	struct:Obj	typeref:typename:int	file:
p	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^   ClassName *p = 0;$/;"	v	typeref:typename:ClassName *
p	misc/deps/catch2/single_include/catch2/catch.hpp	/^            cli::pin_ptr<System::Byte> p = &bytes[0];$/;"	v	namespace:Catch::Detail	typeref:typename:cli::pin_ptr<System::Byte>
pNULL	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    TestData* pNULL = nullptr;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:TestData *
package	misc/deps/catch2/conanfile.py	/^    def package(self):$/;"	m	class:CatchConan
package_id	misc/deps/catch2/conanfile.py	/^    def package_id(self):$/;"	m	class:CatchConan
parent	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    ITracker& TrackerBase::parent() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase	typeref:typename:ITracker &
parse	misc/deps/catch2/include/external/clara.hpp	/^        auto parse( Args const &args ) const -> InternalParseResult {$/;"	f	class:Catch::clara::detail::ParserBase	typeref:typename:InternalParseResult
parse	misc/deps/catch2/include/external/clara.hpp	/^        auto parse( std::string const &, TokenStream const &tokens ) const -> InternalParseResul/;"	f	class:Catch::clara::detail::Arg	typeref:typename:InternalParseResult override
parse	misc/deps/catch2/include/external/clara.hpp	/^        auto parse( std::string const& exeName, TokenStream const &tokens ) const -> InternalPar/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:InternalParseResult override
parse	misc/deps/catch2/include/external/clara.hpp	/^        auto parse( std::string const&, TokenStream const &tokens ) const -> InternalParseResult/;"	f	class:Catch::clara::detail::ExeName	typeref:typename:InternalParseResult override
parse	misc/deps/catch2/include/external/clara.hpp	/^        auto parse( std::string const&, TokenStream const &tokens ) const -> InternalParseResult/;"	f	class:Catch::clara::detail::Opt	typeref:typename:InternalParseResult override
parse	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    TestSpecParser& TestSpecParser::parse( std::string const& arg ) {$/;"	f	class:Catch::TestSpecParser	typeref:typename:TestSpecParser &
parse	misc/deps/catch2/third_party/clara.hpp	/^        auto parse( Args const &args ) const -> InternalParseResult {$/;"	f	class:clara::detail::ParserBase	typeref:typename:InternalParseResult
parse	misc/deps/catch2/third_party/clara.hpp	/^        auto parse( std::string const &, TokenStream const &tokens ) const -> InternalParseResul/;"	f	class:clara::detail::Arg	typeref:typename:InternalParseResult override
parse	misc/deps/catch2/third_party/clara.hpp	/^        auto parse( std::string const& exeName, TokenStream const &tokens ) const -> InternalPar/;"	f	struct:clara::detail::Parser	typeref:typename:InternalParseResult override
parse	misc/deps/catch2/third_party/clara.hpp	/^        auto parse( std::string const&, TokenStream const &tokens ) const -> InternalParseResult/;"	f	class:clara::detail::ExeName	typeref:typename:InternalParseResult override
parse	misc/deps/catch2/third_party/clara.hpp	/^        auto parse( std::string const&, TokenStream const &tokens ) const -> InternalParseResult/;"	f	class:clara::detail::Opt	typeref:typename:InternalParseResult override
parseEnums	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^        std::vector<StringRef> parseEnums( StringRef enums ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::vector<StringRef>
parseFile	misc/deps/catch2/scripts/generateSingleHeader.py	/^    def parseFile( path, filename ):$/;"	f	function:generate	file:
parseSpecialTag	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^        TestCaseInfo::SpecialProperties parseSpecialTag( std::string const& tag ) {$/;"	f	namespace:Catch::__anon539cc7770110	typeref:typename:TestCaseInfo::SpecialProperties
parseTestSpec	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    TestSpec parseTestSpec( std::string const& arg ) {$/;"	f	namespace:Catch	typeref:typename:TestSpec
parse_file	misc/deps/catch2/scripts/benchmarkRunner.py	/^def parse_file(file):$/;"	f
parse_log_file_arg	misc/deps/catch2/misc/coverage-helper.cpp	/^int parse_log_file_arg(std::string const& arg) {$/;"	f	typeref:typename:int
parser	misc/deps/catch2/include/external/clara.hpp	/^                ParserBase const* parser = nullptr;$/;"	m	struct:Catch::clara::detail::Parser::parse::ParserInfo	typeref:typename:ParserBase const *
parser	misc/deps/catch2/scripts/benchmarkCompile.py	/^parser = argparse.ArgumentParser(description='Benchmarks Catch\\'s compile times against some sy/;"	v
parser	misc/deps/catch2/third_party/clara.hpp	/^                ParserBase const* parser = nullptr;$/;"	m	struct:clara::detail::Parser::parse::ParserInfo	typeref:typename:ParserBase const *
passOrFail	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::string passOrFail;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:std::string	file:
passed	misc/deps/catch2/include/internal/catch_totals.h	/^        std::size_t passed = 0;$/;"	m	struct:Catch::Counts	typeref:typename:std::size_t
passedString	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    const char* passedString() { return "PASSED"; }$/;"	f	namespace:__anon16c8dcf30110	typeref:typename:const char *
passedString	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            static const char* passedString() { return "ok"; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:const char *
passedString	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            static const char* passedString() { return "ok"; }$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:const char *
patchNumber	misc/deps/catch2/include/internal/catch_version.h	/^        unsigned int const patchNumber;$/;"	m	struct:Catch::Version	typeref:typename:unsigned int const
performOptionalSelector	misc/deps/catch2/include/internal/catch_objc_arc.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f	typeref:typename:id
performOptionalSelector	misc/deps/catch2/single_include/catch2/catch.hpp	/^inline id performOptionalSelector( id obj, SEL sel ) {$/;"	f	typeref:typename:id
performUpdates	misc/deps/catch2/scripts/releaseCommon.py	/^def performUpdates(version):$/;"	f
period	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        using period = duration::period;$/;"	t	struct:__anon7f22177c0110::counting_clock	typeref:typename:duration::period	file:
period	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        using period = duration::period;$/;"	t	struct:__anon7f22177c0110::manual_clock	typeref:typename:duration::period	file:
permuted	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                auto permuted = v;$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:auto
pf	misc/deps/catch2/include/internal/catch_generators.hpp	/^    namespace pf{$/;"	n	namespace:Catch::Generators
pico_second	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    std::chrono::duration<int64_t, std::ratio<1, 1000000000000>> pico_second(1);$/;"	v	typeref:typename:std::chrono::duration<int64_t,std::ratio<1,1000000000000>>
pkg-config	misc/deps/catch2/docs/ci-and-misc.md	/^### pkg-config$/;"	S
platformColourInstance	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    IColourImpl* platformColourInstance() {$/;"	f	namespace:Catch::__anonabe5bc570210	typeref:typename:IColourImpl *
platformColourInstance	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    IColourImpl* platformColourInstance() {$/;"	f	namespace:Catch::__anonabe5bc570310	typeref:typename:IColourImpl *
platformColourInstance	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    static IColourImpl* platformColourInstance() { return NoColourImpl::instance(); }$/;"	f	namespace:Catch	typeref:typename:IColourImpl *	file:
pluralise	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    pluralise::pluralise( std::size_t count, std::string const& label )$/;"	f	class:Catch::pluralise
pluralise	misc/deps/catch2/include/internal/catch_string_manip.h	/^    struct pluralise {$/;"	s	namespace:Catch
pmemcpy	misc/tests/ft_memory/memcpy.cpp	/^static void     *(*volatile pmemcpy)(void *, const void *, size_t);$/;"	v	typeref:typename:void * (* volatile)(void *,const void *,size_t)	file:
pmemset	misc/tests/ft_memory/memset.cpp	/^static void *(*volatile pmemset)(void *, int, size_t);$/;"	v	typeref:typename:void * (* volatile)(void *,int,size_t)	file:
point	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^            Duration point;$/;"	m	struct:Catch::Benchmark::Estimate	typeref:typename:Duration
pointer	misc/deps/catch2/include/external/clara.hpp	/^		using pointer = value_type * ;$/;"	t	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:value_type *
pointer	misc/deps/catch2/include/external/clara.hpp	/^		using pointer = value_type * ;$/;"	t	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:value_type *
pointer	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    using pointer = int*;$/;"	t	struct:__anonfad788a70210::int_iterator	typeref:typename:int *	file:
pointer	misc/deps/catch2/third_party/clara.hpp	/^            using pointer = value_type*;$/;"	t	class:clara::TextFlow::Column::iterator	typeref:typename:value_type *
pointer	misc/deps/catch2/third_party/clara.hpp	/^            using pointer = value_type*;$/;"	t	class:clara::TextFlow::Columns::iterator	typeref:typename:value_type *
popScopedMessage	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::popScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext	typeref:typename:void
populate	misc/deps/catch2/include/internal/catch_generators.hpp	/^        void populate(GeneratorWrapper<T>&& generator) {$/;"	f	class:Catch::Generators::Generators	typeref:typename:void
populate	misc/deps/catch2/include/internal/catch_generators.hpp	/^        void populate(T&& val) {$/;"	f	class:Catch::Generators::Generators	typeref:typename:void
populate	misc/deps/catch2/include/internal/catch_generators.hpp	/^        void populate(U&& val) {$/;"	f	class:Catch::Generators::Generators	typeref:typename:void
populate	misc/deps/catch2/include/internal/catch_generators.hpp	/^        void populate(U&& valueOrGenerator, Gs... moreGenerators) {$/;"	f	class:Catch::Generators::Generators	typeref:typename:void
populateReaction	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::populateReaction( AssertionReaction& reaction ) {$/;"	f	class:Catch::RunContext	typeref:typename:void
positioningHeadlines	misc/deps/catch2/scripts/updateDocumentToC.py	/^def positioningHeadlines(headlines):$/;"	f
pr	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringPair.tests.cpp	/^    std::vector<std::pair<std::string,int> > pr;$/;"	v	typeref:typename:std::vector<std::pair<std::string,int>>
precision	misc/deps/catch2/include/internal/catch_tostring.cpp	/^int StringMaker<double>::precision = 10;$/;"	m	class:Catch::StringMaker<double>	typeref:typename:int
precision	misc/deps/catch2/include/internal/catch_tostring.cpp	/^int StringMaker<float>::precision = 5;$/;"	m	class:Catch::StringMaker<float>	typeref:typename:int
precision	misc/deps/catch2/include/internal/catch_tostring.h	/^        static int precision;$/;"	m	struct:Catch::StringMaker	typeref:typename:int
precision	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static int precision;$/;"	m	struct:Catch::StringMaker	typeref:typename:int
prefix	misc/deps/catch2/contrib/CatchAddTests.cmake	/^set(prefix "${TEST_PREFIX}")$/;"	v
prepare	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^            ExecutionPlan<FloatDuration<Clock>> prepare(const IConfig &cfg, Environment<FloatDur/;"	f	struct:Catch::Benchmark::Benchmark	typeref:typename:ExecutionPlan<FloatDuration<Clock>>
prepareExpandedExpression	misc/deps/catch2/include/reporters/catch_reporter_bases.cpp	/^    void prepareExpandedExpression(AssertionResult& result) {$/;"	f	namespace:Catch	typeref:typename:void
preprocessorRe	misc/deps/catch2/scripts/embed.py	/^preprocessorRe = re.compile( r'\\s*#.*' )$/;"	v
prevAssertions	misc/deps/catch2/include/internal/catch_section_info.h	/^        Counts prevAssertions;$/;"	m	struct:Catch::SectionEndInfo	typeref:typename:Counts
prevLine	misc/deps/catch2/scripts/releaseNotes.py	/^prevLine = ""$/;"	v
previouslyRun	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^static bool previouslyRun = false;$/;"	v	typeref:typename:bool	file:
previouslyRunNested	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^static bool previouslyRunNested = false;$/;"	v	typeref:typename:bool	file:
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, Catch::MessageInfo const& info ) {$/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionInfo co/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionResult /;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionResultD/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionStats c/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::Counts const& in/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SectionInfo cons/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SectionStats con/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SourceLineInfo c/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestCaseInfo con/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestCaseStats co/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestRunInfo cons/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestRunStats con/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::Totals const& in/;"	f	typeref:typename:void
print	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, std::vector<Catch::Mess/;"	f	typeref:typename:void
print	misc/deps/catch2/include/internal/catch_tostring.h	/^            static void print(const Tuple& tuple, std::ostream& os) {$/;"	f	struct:Catch::Detail::TupleElementPrinter	typeref:typename:void
print	misc/deps/catch2/include/internal/catch_tostring.h	/^            static void print(const Tuple&, std::ostream&) {}$/;"	f	struct:Catch::Detail::TupleElementPrinter	typeref:typename:void
print	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void print() {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
print	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    void print() const {$/;"	f	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:void	file:
print	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void print() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
print	misc/deps/catch2/projects/ExtraTests/X02-DisabledMacros.cpp	/^    void print() const {$/;"	f	struct:foo	typeref:typename:void	file:
print	misc/deps/catch2/single_include/catch2/catch.hpp	/^            static void print(const Tuple& tuple, std::ostream& os) {$/;"	f	struct:Catch::Detail::TupleElementPrinter	typeref:typename:void
print	misc/deps/catch2/single_include/catch2/catch.hpp	/^            static void print(const Tuple&, std::ostream&) {}$/;"	f	struct:Catch::Detail::TupleElementPrinter	typeref:typename:void
print	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void print() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printClosedHeader	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printClosedHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
printExpressionWas	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void printExpressionWas() {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
printExpressionWas	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void printExpressionWas() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printExpressionWas	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void printExpressionWas() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printHeaderString	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printHeaderString(std::string const& _string, std::size_t indent) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
printHeaderString	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        static void printHeaderString( std::ostream& os, std::string const& _string, std::size_t/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
printHeaderString	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        static void printHeaderString( std::ostream& os, std::string const& _string, std::size_t/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
printInfoMessages	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:bool	file:
printInfoMessages	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:bool	file:
printInfoMessages	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            bool printInfoMessages;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:bool
printInfoMessages	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            bool printInfoMessages;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:bool
printIssue	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void printIssue(std::string const& issue) const {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
printIssue	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void printIssue( std::string const& issue ) const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printIssue	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void printIssue( std::string const& issue ) const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printMessage	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void printMessage() {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
printMessage	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    void printMessage() const {$/;"	f	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:void	file:
printMessage	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void printMessage() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printMessage	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void printMessage() {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printOpenHeader	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printOpenHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
printOriginalExpression	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
printOriginalExpression	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:void	file:
printOriginalExpression	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void printOriginalExpression() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printOriginalExpression	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void printOriginalExpression() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printReconstructedExpression	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
printReconstructedExpression	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:void	file:
printReconstructedExpression	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void printReconstructedExpression() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printReconstructedExpression	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void printReconstructedExpression() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printRemainingMessages	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void printRemainingMessages(Colour::Code colour = dimColour()) {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
printRemainingMessages	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void printRemainingMessages( Colour::Code colour = dimColour() ) {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printRemainingMessages	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void printRemainingMessages( Colour::Code colour = dimColour() ) {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printResultType	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void printResultType(Colour::Code colour, std::string const& passOrFail) const {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
printResultType	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    void printResultType() const {$/;"	f	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:void	file:
printResultType	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void printResultType( std::string const& passOrFail ) const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printResultType	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void printResultType( std::string const& passOrFail ) const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printSectionHeader	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void printSectionHeader( std::ostream& os ) {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
printSectionHeader	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void printSectionHeader( std::ostream& os ) {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
printSourceInfo	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:void	file:
printSourceInfo	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:void	file:
printSourceInfo	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            void printSourceInfo() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printSourceInfo	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            void printSourceInfo() const {$/;"	f	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:void
printSummaryDivider	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printSummaryDivider() {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
printSummaryRow	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printSummaryRow(std::string const& label, std::vector<SummaryColumn> const/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
printTestCaseAndSectionHeader	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printTestCaseAndSectionHeader() {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
printTestFilters	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printTestFilters() {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
printTotals	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^void printTotals(std::ostream& out, const Totals& totals) {$/;"	f	namespace:Catch::__anon16c8dcf30210	typeref:typename:void
printTotals	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printTotals( Totals const& totals ) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
printTotals	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        void printTotals( const Totals& totals ) const {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
printTotals	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        void printTotals( const Totals& totals ) const {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
printTotalsDivider	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printTotalsDivider(Totals const& totals) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
processName	misc/deps/catch2/include/internal/catch_config.hpp	/^        std::string processName;$/;"	m	struct:Catch::ConfigData	typeref:typename:std::string
processNameChar	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::processNameChar( char c ) {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
processNoneChar	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::processNoneChar( char c ) {$/;"	f	class:Catch::TestSpecParser	typeref:typename:bool
processOtherChar	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::processOtherChar( char c ) {$/;"	f	class:Catch::TestSpecParser	typeref:typename:bool
prop	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    int* prop;$/;"	m	struct:Obj	typeref:typename:int *	file:
properties	misc/deps/catch2/contrib/CatchAddTests.cmake	/^set(properties ${TEST_PROPERTIES})$/;"	v
properties	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        SpecialProperties properties;$/;"	m	struct:Catch::TestCaseInfo	typeref:typename:SpecialProperties
ptr	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    std::unique_ptr<int> ptr;$/;"	v	typeref:typename:std::unique_ptr<int>
pushScopedMessage	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::pushScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext	typeref:typename:void
q1	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto q1 = Catch::Benchmark::Detail::weighted_average_quantile(1, 4, x.begin(), x.end());$/;"	v	typeref:typename:auto
q3	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto q3 = Catch::Benchmark::Detail::weighted_average_quantile(3, 4, x.begin(), x.end());$/;"	v	typeref:typename:auto
r	misc/deps/catch2/examples/310-Gen-VariablesInGenerators.cpp	/^    auto r = GENERATE(table<double, double>({$/;"	v	typeref:typename:auto
r	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto r = Catch::Benchmark::Detail::measure<manual_clock>([](int x) -> int {$/;"	v	typeref:typename:auto
r1	misc/deps/catch2/examples/311-Gen-CustomCapture.cpp	/^    auto r1 = GENERATE(table<double, double>({$/;"	v	typeref:typename:auto
rand	misc/deps/catch2/docs/command-line.md	/^### rand$/;"	S
rand32	misc/tests/utils/rand.cpp	/^static uint32_t rand32(void)$/;"	f	typeref:typename:uint32_t	file:
rand64	misc/tests/utils/rand.cpp	/^static uint64_t rand64(void)$/;"	f	typeref:typename:uint64_t	file:
random	misc/deps/catch2/examples/300-Gen-OwnGenerator.cpp	/^Catch::Generators::GeneratorWrapper<int> random(int low, int high) {$/;"	f	typeref:typename:Catch::Generators::GeneratorWrapper<int>
random	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^random(T a, T b) {$/;"	f	namespace:Catch::Generators
random	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^random(T a, T b) {$/;"	f	namespace:Catch::Generators	typeref:typename:std::enable_if<std::is_floating_point<T>::value,GeneratorWrapper<T>>::type
random1	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto random1 = Catch::Generators::random(0, 1000);$/;"	v	typeref:typename:auto
random1	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto random1 = Catch::Generators::random(0., 1000.);$/;"	v	typeref:typename:auto
random2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto random2 = Catch::Generators::random(0, 1000);$/;"	v	typeref:typename:auto
random2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        auto random2 = Catch::Generators::random(0., 1000.);$/;"	v	typeref:typename:auto
random_test	misc/tests/ft_memory/calloc.cpp	/^random_test (void)$/;"	f	typeref:typename:void	file:
range	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^GeneratorWrapper<T> range(T const& start, T const& end) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<T>
range	misc/deps/catch2/include/internal/catch_generators_specific.hpp	/^GeneratorWrapper<T> range(T const& start, T const& end, T const& step) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<T>
rangeToString	misc/deps/catch2/include/internal/catch_tostring.h	/^        std::string rangeToString(InputIterator first, InputIterator last) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
rangeToString	misc/deps/catch2/include/internal/catch_tostring.h	/^    std::string rangeToString( Range const& range ) {$/;"	f	namespace:Catch	typeref:typename:std::string
rangeToString	misc/deps/catch2/include/internal/catch_tostring.h	/^    std::string rangeToString( std::vector<bool, Allocator> const& v ) {$/;"	f	namespace:Catch	typeref:typename:std::string
rangeToString	misc/deps/catch2/single_include/catch2/catch.hpp	/^        std::string rangeToString(InputIterator first, InputIterator last) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
rangeToString	misc/deps/catch2/single_include/catch2/catch.hpp	/^    std::string rangeToString( Range const& range ) {$/;"	f	namespace:Catch	typeref:typename:std::string
rangeToString	misc/deps/catch2/single_include/catch2/catch.hpp	/^    std::string rangeToString( std::vector<bool, Allocator> const& v ) {$/;"	f	namespace:Catch	typeref:typename:std::string
rate	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static rep& rate() {$/;"	f	struct:__anon7f22177c0110::counting_clock	typeref:typename:rep &	file:
rate	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto rate = 1000;$/;"	v	typeref:typename:auto
ratio_string	misc/deps/catch2/include/internal/catch_tostring.h	/^struct ratio_string {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/include/internal/catch_tostring.h	/^struct ratio_string<std::atto> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/include/internal/catch_tostring.h	/^struct ratio_string<std::femto> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/include/internal/catch_tostring.h	/^struct ratio_string<std::micro> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/include/internal/catch_tostring.h	/^struct ratio_string<std::milli> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/include/internal/catch_tostring.h	/^struct ratio_string<std::nano> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/include/internal/catch_tostring.h	/^struct ratio_string<std::pico> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct ratio_string {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct ratio_string<std::atto> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct ratio_string<std::femto> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct ratio_string<std::micro> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct ratio_string<std::milli> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct ratio_string<std::nano> {$/;"	s	namespace:Catch
ratio_string	misc/deps/catch2/single_include/catch2/catch.hpp	/^struct ratio_string<std::pico> {$/;"	s	namespace:Catch
rawChars	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        auto rawChars = s.data();$/;"	v	typeref:typename:auto
rawMemoryToString	misc/deps/catch2/include/internal/catch_tostring.cpp	/^    std::string rawMemoryToString( const void *object, std::size_t size ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
rawMemoryToString	misc/deps/catch2/include/internal/catch_tostring.h	/^        std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
rawMemoryToString	misc/deps/catch2/single_include/catch2/catch.hpp	/^        std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
re	Makefile	/^re:$/;"	t
re	misc/Makefile	/^re:$/;"	t
re	misc/deps/ezbuild/Makefile	/^re:$/;"	t
re	misc/tests/ft_memory/memccpy.cpp	/^	void *re;$/;"	v	typeref:typename:void *
readLines	misc/deps/catch2/scripts/updateDocumentToC.py	/^def readLines(in_file):$/;"	f
readmePath	misc/deps/catch2/scripts/releaseCommon.py	/^readmePath = os.path.join( catchPath, "README.md" )$/;"	v
reconstructExpression	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    std::string AssertionResultData::reconstructExpression() const {$/;"	f	class:Catch::AssertionResultData	typeref:typename:std::string
reconstructedExpression	misc/deps/catch2/include/internal/catch_assertionresult.h	/^        mutable std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData	typeref:typename:std::string
record	misc/deps/catch2/examples/310-Gen-VariablesInGenerators.cpp	/^    using record = std::tuple<double, double>;$/;"	t	typeref:typename:std::tuple<double,double>	file:
record	misc/deps/catch2/examples/311-Gen-CustomCapture.cpp	/^    using record = std::tuple<double, double>;$/;"	t	typeref:typename:std::tuple<double,double>	file:
record	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    using record = std::tuple<int, int>;$/;"	t	typeref:typename:std::tuple<int,int>	file:
recursive_search	misc/deps/catch2/scripts/benchmarkRunner.py	/^    def recursive_search(node):$/;"	f	function:parse_file	file:
reference	misc/deps/catch2/.conan/build.py	/^    def reference(self):$/;"	m	class:BuilderSettings
reference	misc/deps/catch2/include/external/clara.hpp	/^		using reference = value_type & ;$/;"	t	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:value_type &
reference	misc/deps/catch2/include/external/clara.hpp	/^		using reference = value_type & ;$/;"	t	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:value_type &
reference	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    using reference = int&;$/;"	t	struct:__anonfad788a70210::int_iterator	typeref:typename:int &	file:
reference	misc/deps/catch2/third_party/clara.hpp	/^            using reference = value_type&;$/;"	t	class:clara::TextFlow::Column::iterator	typeref:typename:value_type &
reference	misc/deps/catch2/third_party/clara.hpp	/^            using reference = value_type&;$/;"	t	class:clara::TextFlow::Columns::iterator	typeref:typename:value_type &
registerEnum	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^        EnumInfo const& EnumValuesRegistry::registerEnum( StringRef enumName, StringRef allValue/;"	f	class:Catch::Detail::EnumValuesRegistry	typeref:typename:EnumInfo const &
registerEnum	misc/deps/catch2/include/internal/catch_interfaces_enum_values_registry.h	/^        Detail::EnumInfo const& registerEnum( StringRef enumName, StringRef allEnums, std::initi/;"	f	struct:Catch::IMutableEnumValuesRegistry	typeref:typename:Detail::EnumInfo const &
registerEnum	misc/deps/catch2/single_include/catch2/catch.hpp	/^        Detail::EnumInfo const& registerEnum( StringRef enumName, StringRef allEnums, std::initi/;"	f	struct:Catch::IMutableEnumValuesRegistry	typeref:typename:Detail::EnumInfo const &
registerListener	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            void registerListener( IReporterFactoryPtr const& factory ) override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:void	file:
registerListener	misc/deps/catch2/include/internal/catch_reporter_registry.cpp	/^    void ReporterRegistry::registerListener( IReporterFactoryPtr const& factory ) {$/;"	f	class:Catch::ReporterRegistry	typeref:typename:void
registerReporter	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            void registerReporter( std::string const& name, IReporterFactoryPtr const& factory )/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:void	file:
registerReporter	misc/deps/catch2/include/internal/catch_reporter_registry.cpp	/^    void ReporterRegistry::registerReporter( std::string const& name, IReporterFactoryPtr const&/;"	f	class:Catch::ReporterRegistry	typeref:typename:void
registerStartupException	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            void registerStartupException() noexcept override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:void	file:
registerTagAlias	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            void registerTagAlias( std::string const& alias, std::string const& tag, SourceLineI/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:void	file:
registerTest	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            void registerTest( TestCase const& testInfo ) override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:void	file:
registerTest	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    void TestRegistry::registerTest( TestCase const& testCase ) {$/;"	f	class:Catch::TestRegistry	typeref:typename:void
registerTestMethods	misc/deps/catch2/include/internal/catch_objc.hpp	/^    inline std::size_t registerTestMethods() {$/;"	f	namespace:Catch	typeref:typename:std::size_t
registerTranslator	misc/deps/catch2/include/internal/catch_exception_translator_registry.cpp	/^    void ExceptionTranslatorRegistry::registerTranslator( const IExceptionTranslator* translator/;"	f	class:Catch::ExceptionTranslatorRegistry	typeref:typename:void
registerTranslator	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^            void registerTranslator( const IExceptionTranslator* translator ) override {$/;"	f	class:Catch::__anondaa5e4680110::RegistryHub	typeref:typename:void	file:
registry	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/Tag.tests.cpp	/^    Catch::TagAliasRegistry registry;$/;"	v	typeref:typename:Catch::TagAliasRegistry
release	Makefile	/^release:$/;"	t
release	misc/Makefile	/^release:$/;"	t
release	misc/deps/catch2/include/internal/catch_stream.cpp	/^        void release( std::size_t index ) {$/;"	f	struct:Catch::StringStreams	typeref:typename:void	file:
release	misc/deps/ezbuild/Makefile	/^release:$/;"	t
release	misc/deps/ezbuild/release.sh	/^function release()$/;"	f
releaseNotesName	misc/deps/catch2/scripts/updateDocumentToC.py	/^releaseNotesName = 'release-notes.md'$/;"	v
remainingTokens	misc/deps/catch2/include/external/clara.hpp	/^        auto remainingTokens() const -> TokenStream { return m_remainingTokens; }$/;"	f	class:Catch::clara::detail::ParseState	typeref:typename:TokenStream
remainingTokens	misc/deps/catch2/third_party/clara.hpp	/^        auto remainingTokens() const -> TokenStream { return m_remainingTokens; }$/;"	f	class:clara::detail::ParseState	typeref:typename:TokenStream
removeLines	misc/deps/catch2/scripts/updateDocumentToC.py	/^def removeLines(lines, remove=('[[back to top]', '<a class="mk-toclify"')):$/;"	f
removeToC	misc/deps/catch2/scripts/updateDocumentToC.py	/^def removeToC(lines):$/;"	f
rep	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        using rep = duration::rep;$/;"	t	struct:__anon7f22177c0110::counting_clock	typeref:typename:duration::rep	file:
rep	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        using rep = duration::rep;$/;"	t	struct:__anon7f22177c0110::manual_clock	typeref:typename:duration::rep	file:
repeat	misc/deps/catch2/include/internal/benchmark/detail/catch_repeat.hpp	/^            repeater<typename std::decay<Fun>::type> repeat(Fun&& fun) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:repeater<typename std::decay<Fun>::type>
repeat	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    GeneratorWrapper<T> repeat(size_t repeats, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<T>
repeater	misc/deps/catch2/include/internal/benchmark/detail/catch_repeat.hpp	/^            struct repeater {$/;"	s	namespace:Catch::Benchmark::Detail
replaceInPlace	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    bool replaceInPlace( std::string& str, std::string const& replaceThis, std::string const& wi/;"	f	namespace:Catch	typeref:typename:bool
replace_ext	misc/Makefile	/^define replace_ext$/;"	m
reportExpr	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::reportExpr($/;"	f	class:Catch::RunContext	typeref:typename:void
reportFatal	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    void reportFatal( char const * const message ) {$/;"	f	namespace:__anon7fbdb41f0110	typeref:typename:void
reportInvalidArguments	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        virtual void reportInvalidArguments(std::string const&) {}$/;"	f	struct:Catch::IStreamingReporter	typeref:typename:void
reportInvalidArguments	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void reportInvalidArguments(std::string const&) override {}$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
reportInvalidArguments	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::reportInvalidArguments(std::string const&arg){$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
reportInvalidArguments	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::reportInvalidArguments(std::string const&arg){$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
reporter	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    IStreamingReporter& RunContext::reporter() const {$/;"	f	class:Catch::RunContext	typeref:typename:IStreamingReporter &
reporterName	misc/deps/catch2/include/internal/catch_config.hpp	/^        std::string reporterName = CATCH_CONFIG_DEFAULT_REPORTER;$/;"	m	struct:Catch::ConfigData	typeref:typename:std::string
require_outliers	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto require_outliers = [](Catch::Benchmark::OutlierClassification o, int los, int lom, int /;"	v	typeref:typename:auto
required	misc/deps/catch2/include/external/clara.hpp	/^        auto required() -> DerivedT & {$/;"	f	class:Catch::clara::detail::ParserRefImpl	typeref:typename:DerivedT &
required	misc/deps/catch2/third_party/clara.hpp	/^        auto required() -> DerivedT & {$/;"	f	class:clara::detail::ParserRefImpl	typeref:typename:DerivedT &
res	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto res = Catch::Benchmark::Detail::estimate_clock_resolution<counting_clock>(iters);$/;"	v	typeref:typename:auto
res	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto res = Catch::Benchmark::Detail::resolution<counting_clock>(static_cast<int>(count));$/;"	v	typeref:typename:auto
resample	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^            sample resample(URng& rng, int resamples, Iterator first, Iterator last, Estimator& /;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:sample
resamples	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        unsigned int resamples;$/;"	m	struct:Catch::BenchmarkInfo	typeref:typename:unsigned int
reset	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    void FatalConditionHandler::reset() {$/;"	f	class:Catch::FatalConditionHandler	typeref:typename:void
reset	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    void FatalConditionHandler::reset() {}$/;"	f	class:Catch::FatalConditionHandler	typeref:typename:void
reset	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        void reset() {$/;"	f	struct:Catch::LazyStat	typeref:typename:void
reset	misc/deps/catch2/include/internal/catch_option.hpp	/^        void reset() {$/;"	f	class:Catch::Option	typeref:typename:void
resetAssertionInfo	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::resetAssertionInfo() {$/;"	f	class:Catch::RunContext	typeref:typename:void
resolution	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            std::vector<double> resolution(int k) {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:std::vector<double>
result	misc/deps/catch2/include/internal/benchmark/detail/catch_timing.hpp	/^            Result result;$/;"	m	struct:Catch::Benchmark::Timing	typeref:typename:Result
result	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:AssertionResult const &	file:
result	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:AssertionResult const &	file:
result	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            AssertionResult const& result;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:AssertionResult const &
result	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^            auto result = cli.parse({"test", "--reporter", "unsupported"});$/;"	v	typeref:typename:auto
result	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^            auto result = cli.parse({"test", "--use-colour", "wrong"});$/;"	v	typeref:typename:auto
result	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^            auto result = cli.parse({"test", "-x", "oops"});$/;"	v	typeref:typename:auto
result	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^            auto result = cli.parse({"test", "exclude:test1"});$/;"	v	typeref:typename:auto
result	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^            auto result = cli.parse({"test", "test1"});$/;"	v	typeref:typename:auto
result	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^            auto result = cli.parse({"test", "~test1"});$/;"	v	typeref:typename:auto
result	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        auto result = cli.parse({""});$/;"	v	typeref:typename:auto
result	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        auto result = cli.parse({"test"});$/;"	v	typeref:typename:auto
result	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^        std::string result = ::Catch::Detail::stringify( s );$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::string
result	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            AssertionResult const& result;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:AssertionResult const &
resultDisposition	misc/deps/catch2/include/internal/catch_assertioninfo.h	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:ResultDisposition::Flags
resultDisposition	misc/deps/catch2/single_include/catch2/catch.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo	typeref:typename:ResultDisposition::Flags
resultType	misc/deps/catch2/include/internal/catch_assertionresult.h	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData	typeref:typename:ResultWas::OfType
result_file	misc/deps/catch2/scripts/benchmarkRunner.py	/^result_file = '{:%Y-%m-%dT%H-%M-%S}-{}.result'.format(datetime.now(), get_commit_hash())$/;"	v
result_type	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^        static constexpr result_type (max)() {$/;"	f	class:Catch::SimplePcg32
result_type	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^        static constexpr result_type (min)() {$/;"	f	class:Catch::SimplePcg32
result_type	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^        using result_type = std::uint32_t;$/;"	t	class:Catch::SimplePcg32	typeref:typename:std::uint32_t
ret	misc/tests/ft_memory/memchr.cpp	/^	char *ret = (char*) ft_memchr(tmemchr, '.', ft_strlen(tmemchr));$/;"	v	typeref:typename:char *
returnsConstNull	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^inline const char* returnsConstNull(){ return nullptr; }$/;"	f	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:const char *
returnsNull	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^inline char* returnsNull(){ return nullptr; }$/;"	f	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:char *
revertBackToLastMode	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::revertBackToLastMode() {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
right	misc/deps/catch2/include/external/clara.hpp	/^        std::string right;$/;"	m	struct:Catch::clara::detail::HelpColumns	typeref:typename:std::string
right	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringPair.tests.cpp	/^    right_t right( "Ford", 24 );$/;"	v	typeref:typename:right_t
right	misc/deps/catch2/third_party/clara.hpp	/^        std::string right;$/;"	m	struct:clara::detail::HelpColumns	typeref:typename:std::string
right_t	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringPair.tests.cpp	/^    typedef std::pair<std::string,int> right_t;$/;"	t	typeref:typename:std::pair<std::string,int>	file:
rng	misc/deps/catch2/include/internal/catch_context.cpp	/^    SimplePcg32& rng() {$/;"	f	namespace:Catch	typeref:typename:SimplePcg32 &
rng	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/RandomNumberGeneration.tests.cpp	/^    Catch::SimplePcg32 rng;$/;"	v	typeref:typename:Catch::SimplePcg32
rngSeed	misc/deps/catch2/include/internal/catch_config.cpp	/^    unsigned int Config::rngSeed() const               { return m_data.rngSeed; }$/;"	f	class:Catch::Config	typeref:typename:unsigned int
rngSeed	misc/deps/catch2/include/internal/catch_config.hpp	/^        unsigned int rngSeed = 0;$/;"	m	struct:Catch::ConfigData	typeref:typename:unsigned int
rngSeed	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    unsigned int rngSeed() {$/;"	f	namespace:Catch	typeref:typename:unsigned int
rootPath	misc/deps/catch2/scripts/approvalTests.py	/^rootPath = os.path.join(catchPath, 'projects\/SelfTest\/Baselines')$/;"	v
rootPath	misc/deps/catch2/scripts/approve.py	/^rootPath = os.path.join( catchPath, 'projects\/SelfTest\/Baselines' )$/;"	v
rootPath	misc/deps/catch2/scripts/embedClara.py	/^rootPath = os.path.dirname(os.path.realpath( os.path.dirname(sys.argv[0])))$/;"	v
rootPath	misc/deps/catch2/scripts/releaseCommon.py	/^rootPath = os.path.join( catchPath, 'include\/' )$/;"	v
rootPath	misc/deps/catch2/scripts/releaseNotes.py	/^rootPath = os.path.join( catchPath, 'include\/' )$/;"	v
rotate_right	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^        uint32_t rotate_right(uint32_t val, uint32_t count) {$/;"	f	namespace:Catch::__anon279582000110	typeref:typename:uint32_t
rows	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::vector<std::string> rows;$/;"	m	struct:Catch::SummaryColumn	typeref:typename:std::vector<std::string>	file:
run	Makefile	/^run:$/;"	t
run	misc/deps/catch2/include/internal/benchmark/catch_benchmark.hpp	/^            void run() {$/;"	f	struct:Catch::Benchmark::Benchmark	typeref:typename:void
run	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^            std::vector<FloatDuration<Clock>> run(const IConfig &cfg, Environment<FloatDuration</;"	f	struct:Catch::Benchmark::ExecutionPlan	typeref:typename:std::vector<FloatDuration<Clock>>
run	misc/deps/catch2/include/internal/catch_session.cpp	/^    int Session::run() {$/;"	f	class:Catch::Session	typeref:typename:int
run	misc/deps/catch2/include/internal/catch_session.h	/^        int run(int argc, CharT const * const argv[]) {$/;"	f	class:Catch::Session	typeref:typename:int
run	misc/deps/ezbuild/Makefile	/^run:$/;"	t
runAndCapture	misc/deps/catch2/scripts/scriptCommon.py	/^def runAndCapture( args ):$/;"	f
runCurrentTest	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::runCurrentTest(std::string & redirectedCout, std::string & redirectedCerr) /;"	f	class:Catch::RunContext	typeref:typename:void
runInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        TestRunInfo runInfo;$/;"	m	struct:Catch::TestRunStats	typeref:typename:TestRunInfo
runInternal	misc/deps/catch2/include/internal/catch_session.cpp	/^    int Session::runInternal() {$/;"	f	class:Catch::Session	typeref:typename:int
runOrder	misc/deps/catch2/include/internal/catch_config.cpp	/^    RunTests::InWhatOrder Config::runOrder() const     { return m_data.runOrder; }$/;"	f	class:Catch::Config	typeref:typename:RunTests::InWhatOrder
runOrder	misc/deps/catch2/include/internal/catch_config.hpp	/^        RunTests::InWhatOrder runOrder = RunTests::InDeclarationOrder;$/;"	m	struct:Catch::ConfigData	typeref:typename:RunTests::InWhatOrder
runTest	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    Totals RunContext::runTest(TestCase const& testCase) {$/;"	f	class:Catch::RunContext	typeref:typename:Totals
run_benchmarks	misc/deps/catch2/scripts/benchmarkRunner.py	/^def run_benchmarks(binary):$/;"	f
run_for_at_least	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^            TimingOf<Clock, Fun(run_for_at_least_argument_t<Clock, Fun>)> run_for_at_least(Clock/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:TimingOf<Clock,Fun (run_for_at_least_argument_t<Clock,Fun>)>
run_for_at_least_argument_t	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^            using run_for_at_least_argument_t = typename std::conditional<is_callable<Fun(Chrono/;"	t	namespace:Catch::Benchmark::Detail
runs	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^            int runs() const { return k; }$/;"	f	struct:Catch::Benchmark::Chronometer	typeref:typename:int
runs	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^            int runs = 0;$/;"	v	typeref:typename:int
runs	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^            int runs = 0;$/;"	v	typeref:typename:int
runtimeError	misc/deps/catch2/include/external/clara.hpp	/^        static auto runtimeError( std::string const &message ) -> BasicResult { return { ResultB/;"	f	class:Catch::clara::detail::BasicResult	typeref:typename:BasicResult
runtimeError	misc/deps/catch2/third_party/clara.hpp	/^        static auto runtimeError( std::string const &message ) -> BasicResult { return { ResultB/;"	f	class:clara::detail::BasicResult	typeref:typename:BasicResult
s	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto s = Catch::Benchmark::Detail::measure<manual_clock>([](int x) -> int {$/;"	v	typeref:typename:auto
s	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        StringRef s = "hello world!";$/;"	v	typeref:typename:StringRef
s	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        StringRef s = "hello";$/;"	v	typeref:typename:StringRef
s	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^        std::string s = "didn't";$/;"	v	typeref:typename:std::string
s	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    std::string s;$/;"	m	class:__anon27b7d6900110::ClassTests::TestClass	typeref:typename:std::string	file:
s	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^        auto const s = const_cast<wchar_t*>( L"wide load" );$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:auto const
s	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^        auto s = const_cast<wchar_t*>( L"wide load" );$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:auto
s	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^        const wchar_t * const s = L"wide load";$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:const wchar_t * const
s	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^        const wchar_t * s = L"wide load";$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:const wchar_t *
s	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    std::string s = ::Catch::Detail::stringify( awkward );$/;"	v	typeref:typename:std::string
s	misc/tests/ft_string/count_occ.cpp	/^    char s = ' ';$/;"	v	typeref:typename:char
s	misc/tests/ft_string/split.cpp	/^    char    s = ' ';$/;"	v	typeref:typename:char
s	misc/tests/ft_string/strchr.cpp	/^	char s[256];$/;"	v	typeref:typename:char[256]
s1	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^    ITracker& s1 = SectionTracker::acquire( ctx, makeNAL( "S1" ) );$/;"	v	typeref:typename:ITracker &
s1	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    std::string s1 = "if ($b == 10) {\\n\\t\\t$a\\t= 20;\\n}";$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::string
s1	misc/tests/ft_string/count_occ.cpp	/^    char s1[] = "hello world $$";$/;"	v	typeref:typename:char[]
s1	misc/tests/ft_string/split.cpp	/^    char s1[] = "hello world world";$/;"	v	typeref:typename:char[]
s1	misc/tests/ft_string/strjoin.cpp	/^    char s1[] = "hello ";$/;"	v	typeref:typename:char[]
s1	misc/tests/ft_string/strtrim.cpp	/^    char s1[] = "";$/;"	v	typeref:typename:char[]
s1	misc/tests/ft_string/strtrim_begin.cpp	/^    char s1[] = "";$/;"	v	typeref:typename:char[]
s1	misc/tests/ft_string/strtrim_end.cpp	/^    char s1[] = "";$/;"	v	typeref:typename:char[]
s1	misc/tests/ft_string/substr.cpp	/^    char s1[] = "hello world";$/;"	v	typeref:typename:char[]
s1b	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^            ITracker& s1b = SectionTracker::acquire( ctx, makeNAL( "S1" ) );$/;"	v	typeref:typename:ITracker &
s1c	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^                ITracker& s1c = SectionTracker::acquire( ctx, makeNAL( "S1" ) );$/;"	v	typeref:typename:ITracker &
s2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^            ITracker& s2 = SectionTracker::acquire( ctx, makeNAL( "S2" ) );$/;"	v	typeref:typename:ITracker &
s2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^        ITracker& s2 = SectionTracker::acquire( ctx, makeNAL( "S2" ) );$/;"	v	typeref:typename:ITracker &
s2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^            StringRef s2 = s;$/;"	v	typeref:typename:StringRef
s2	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    std::string s2 = "if ($b == 10) {\\n\\t$a = 20;\\n}\\n";$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::string
s2	misc/tests/ft_string/count_occ.cpp	/^    char s2[] = "";$/;"	v	typeref:typename:char[]
s2	misc/tests/ft_string/split.cpp	/^    char s2[] = "";$/;"	v	typeref:typename:char[]
s2	misc/tests/ft_string/strjoin.cpp	/^    char s2[] = "world";$/;"	v	typeref:typename:char[]
s2	misc/tests/ft_string/strtrim.cpp	/^    char s2[] = "";$/;"	v	typeref:typename:char[]
s2	misc/tests/ft_string/strtrim_begin.cpp	/^    char s2[] = "";$/;"	v	typeref:typename:char[]
s2	misc/tests/ft_string/strtrim_end.cpp	/^    char s2[] = "";$/;"	v	typeref:typename:char[]
s2b	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^            ITracker& s2b = SectionTracker::acquire( ctx, makeNAL( "S2" ) );$/;"	v	typeref:typename:ITracker &
s2c	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^                ITracker& s2c = SectionTracker::acquire( ctx, makeNAL( "S2" ) );$/;"	v	typeref:typename:ITracker &
s3	misc/tests/ft_string/strtrim.cpp	/^    char s3[] = " \\n hello world \\n";$/;"	v	typeref:typename:char[]
s3	misc/tests/ft_string/strtrim_begin.cpp	/^    char s3[] = " \\n hello world \\n";$/;"	v	typeref:typename:char[]
s3	misc/tests/ft_string/strtrim_end.cpp	/^    char s3[] = " \\n hello world \\n";$/;"	v	typeref:typename:char[]
s4	misc/tests/ft_string/strtrim.cpp	/^    char s4[] = " \\n";$/;"	v	typeref:typename:char[]
s4	misc/tests/ft_string/strtrim_begin.cpp	/^    char s4[] = " \\n";$/;"	v	typeref:typename:char[]
s4	misc/tests/ft_string/strtrim_end.cpp	/^    char s4[] = " \\n";$/;"	v	typeref:typename:char[]
s_empty	misc/deps/catch2/include/internal/catch_stringref.h	/^        static constexpr char const* const s_empty = "";$/;"	m	class:Catch::StringRef	typeref:typename:char const * const
s_empty	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static constexpr char const* const s_empty = "";$/;"	m	class:Catch::StringRef	typeref:typename:char const * const
s_inc	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^        static const std::uint64_t s_inc = (0x13ed0cc53f939476ULL << 1ULL) | 1ULL;$/;"	m	class:Catch::SimplePcg32	typeref:typename:const std::uint64_t
s_list	inc/ft_list.h	/^typedef struct      s_list$/;"	s
s_nanosecondsInAMicrosecond	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMicrosecond = 1000;$/;"	m	class:Catch::__anon99a91d3f0110::Duration	typeref:typename:const uint64_t	file:
s_nanosecondsInAMillisecond	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMillisecond = 1000 * s_nanosecondsInAMicrosecond;$/;"	m	class:Catch::__anon99a91d3f0110::Duration	typeref:typename:const uint64_t	file:
s_nanosecondsInAMinute	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMinute = 60 * s_nanosecondsInASecond;$/;"	m	class:Catch::__anon99a91d3f0110::Duration	typeref:typename:const uint64_t	file:
s_nanosecondsInASecond	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInASecond = 1000 * s_nanosecondsInAMillisecond;$/;"	m	class:Catch::__anon99a91d3f0110::Duration	typeref:typename:const uint64_t	file:
same	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        size_t same = 0;$/;"	v	typeref:typename:size_t
sample	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^            using sample = std::vector<double>;$/;"	t	namespace:Catch::Benchmark::Detail	typeref:typename:std::vector<double>
samples	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^            std::vector<Duration> samples;$/;"	m	struct:Catch::Benchmark::SampleAnalysis	typeref:typename:std::vector<Duration>
samples	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        int samples;$/;"	m	struct:Catch::BenchmarkInfo	typeref:typename:int
samples	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::vector<Duration> samples;$/;"	m	struct:Catch::BenchmarkStats	typeref:typename:std::vector<Duration>
samples	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    std::vector<Duration> samples(99);$/;"	v	typeref:typename:std::vector<Duration>
samples	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    std::vector<double> samples(100);$/;"	v	typeref:typename:std::vector<double>
samples_seen	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^            int samples_seen = 0;$/;"	m	struct:Catch::Benchmark::OutlierClassification	typeref:typename:int
sarr	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        signed char sarr[] = "456";$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:signed char[]
saveLastMode	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::saveLastMode() {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
scale	misc/deps/catch2/docs/assertions.md	/^#### scale$/;"	t
scale	misc/deps/catch2/include/internal/catch_approx.h	/^        Approx& scale( T const& newScale ) {$/;"	f	class:Catch::Detail::Approx	typeref:typename:Approx &
scale	misc/deps/catch2/include/internal/catch_matchers_vector.h	/^            ApproxMatcher& scale( T const& newScale ) {$/;"	f	struct:Catch::Matchers::Vector::ApproxMatcher	typeref:typename:ApproxMatcher &
scopedElement	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement XmlWriter::scopedElement( std::string const& name ) {$/;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter::ScopedElement
script	misc/deps/catch2/contrib/CatchAddTests.cmake	/^  set(script "${script}${NAME}(${_args})\\n" PARENT_SCOPE)$/;"	v
script	misc/deps/catch2/contrib/CatchAddTests.cmake	/^set(script)$/;"	v
seconds	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringChrono.tests.cpp	/^    auto seconds = std::chrono::seconds(60);$/;"	v	typeref:typename:auto
sectionEnded	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    void sectionEnded( Catch::SectionStats const& sectionStats ) override {$/;"	f	struct:MyListener	typeref:typename:void	file:
sectionEnded	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::sectionEnded(SectionEndInfo const & endInfo) {$/;"	f	class:Catch::RunContext	typeref:typename:void
sectionEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void sectionEnded(SectionStats const& \/* _sectionStats *\/) override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
sectionEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void sectionEnded(SectionStats const& sectionStats) override {$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
sectionEnded	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::CompactReporter	typeref:typename:void
sectionEnded	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
sectionEnded	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
sectionEnded	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
sectionEndedEarly	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::sectionEndedEarly(SectionEndInfo const & endInfo) {$/;"	f	class:Catch::RunContext	typeref:typename:void
sectionInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        SectionInfo sectionInfo;$/;"	m	struct:Catch::SectionStats	typeref:typename:SectionInfo
sectionInfo	misc/deps/catch2/include/internal/catch_section_info.h	/^        SectionInfo sectionInfo;$/;"	m	struct:Catch::SectionEndInfo	typeref:typename:SectionInfo
sectionStarted	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    bool RunContext::sectionStarted(SectionInfo const & sectionInfo, Counts & assertions) {$/;"	f	class:Catch::RunContext	typeref:typename:bool
sectionStarting	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    void sectionStarting( Catch::SectionInfo const& sectionInfo ) override {$/;"	f	struct:MyListener	typeref:typename:void	file:
sectionStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override {$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
sectionStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void sectionStarting(SectionInfo const& _sectionInfo) override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
sectionStarting	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::sectionStarting(SectionInfo const& _sectionInfo) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
sectionStarting	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
sectionStarting	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
sectionStarting	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
sectionStarting	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
sectionsToRun	misc/deps/catch2/include/internal/catch_config.hpp	/^        std::vector<std::string> sectionsToRun;$/;"	m	struct:Catch::ConfigData	typeref:typename:std::vector<std::string>
sections_in_file	misc/deps/catch2/scripts/benchmarkCompile.py	/^sections_in_file = 4$/;"	v
seed	misc/deps/catch2/include/internal/catch_random_number_generator.cpp	/^    void SimplePcg32::seed(result_type seed_) {$/;"	f	class:Catch::SimplePcg32	typeref:typename:void
seed	misc/tests/utils/rand.cpp	/^static uint64_t seed = -1;$/;"	v	typeref:typename:uint64_t	file:
seedRng	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void seedRng(IConfig const& config) {$/;"	f	namespace:Catch	typeref:typename:void
separate	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::separate() {  $/;"	f	class:Catch::TestSpecParser	typeref:typename:bool
separator	misc/deps/catch2/misc/coverage-helper.cpp	/^const std::string separator = "--sep--";$/;"	v	typeref:typename:const std::string
sequence	misc/deps/catch2/include/internal/catch_message.h	/^        unsigned int sequence;$/;"	m	struct:Catch::MessageInfo	typeref:typename:unsigned int
serializeFilters	misc/deps/catch2/include/reporters/catch_reporter_bases.cpp	/^    std::string serializeFilters( std::vector<std::string> const& container ) {$/;"	f	namespace:Catch	typeref:typename:std::string
set	misc/deps/catch2/include/external/clara.hpp	/^        auto set( std::string const& newName ) -> ParserResult {$/;"	f	class:Catch::clara::detail::ExeName	typeref:typename:ParserResult
set	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        std::set<std::string> set = { "abc", "def", "ghi" };$/;"	v	typeref:typename:std::set<std::string>
set	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        std::set<std::string> set = { "one" };$/;"	v	typeref:typename:std::set<std::string>
set	misc/deps/catch2/third_party/clara.hpp	/^        auto set( std::string const& newName ) -> ParserResult {$/;"	f	class:clara::detail::ExeName	typeref:typename:ParserResult
setColour	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        void setColour( const char* _escapeCode ) {$/;"	f	class:Catch::__anonabe5bc570310::PosixColourImpl	typeref:typename:void	file:
setCompleted	misc/deps/catch2/include/internal/catch_assertionhandler.cpp	/^    void AssertionHandler::setCompleted() {$/;"	f	class:Catch::AssertionHandler	typeref:typename:void
setConfig	misc/deps/catch2/include/internal/catch_context.cpp	/^        void setConfig( IConfigPtr const& config ) override {$/;"	f	class:Catch::Context	typeref:typename:void	file:
setCurrentTracker	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerContext::setCurrentTracker( ITracker* tracker ) {$/;"	f	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:void
setEpsilon	misc/deps/catch2/include/internal/catch_approx.cpp	/^    void Approx::setEpsilon(double newEpsilon) {$/;"	f	class:Catch::Detail::Approx	typeref:typename:void
setFlag	misc/deps/catch2/include/external/clara.hpp	/^        auto setFlag( bool flag ) -> ParserResult override {$/;"	f	struct:Catch::clara::detail::BoundFlagLambda	typeref:typename:ParserResult override
setFlag	misc/deps/catch2/include/external/clara.hpp	/^        auto setFlag( bool flag ) -> ParserResult override {$/;"	f	struct:Catch::clara::detail::BoundFlagRef	typeref:typename:ParserResult override
setFlag	misc/deps/catch2/third_party/clara.hpp	/^        auto setFlag( bool flag ) -> ParserResult override {$/;"	f	struct:clara::detail::BoundFlagLambda	typeref:typename:ParserResult override
setFlag	misc/deps/catch2/third_party/clara.hpp	/^        auto setFlag( bool flag ) -> ParserResult override {$/;"	f	struct:clara::detail::BoundFlagRef	typeref:typename:ParserResult override
setGenerator	misc/deps/catch2/include/internal/catch_run_context.cpp	/^            void setGenerator( GeneratorBasePtr&& generator ) override {$/;"	f	struct:Catch::Generators::GeneratorTracker	typeref:typename:void	file:
setMargin	misc/deps/catch2/include/internal/catch_approx.cpp	/^    void Approx::setMargin(double newMargin) {$/;"	f	class:Catch::Detail::Approx	typeref:typename:void
setResultCapture	misc/deps/catch2/include/internal/catch_context.cpp	/^        void setResultCapture( IResultCapture* resultCapture ) override {$/;"	f	class:Catch::Context	typeref:typename:void	file:
setRunner	misc/deps/catch2/include/internal/catch_context.cpp	/^        void setRunner( IRunner* runner ) override {$/;"	f	class:Catch::Context	typeref:typename:void	file:
setTags	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    void setTags( TestCaseInfo& testCaseInfo, std::vector<std::string> tags ) {$/;"	f	namespace:Catch	typeref:typename:void
setTextAttribute	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        void setTextAttribute( WORD _textAttribute ) {$/;"	f	class:Catch::__anonabe5bc570210::Win32ColourImpl	typeref:typename:void	file:
setUp	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^{$/;"	m	implementation:TestFixture
setValue	misc/deps/catch2/include/external/clara.hpp	/^        auto setValue( std::string const &arg ) -> ParserResult override {$/;"	f	struct:Catch::clara::detail::BoundLambda	typeref:typename:ParserResult override
setValue	misc/deps/catch2/include/external/clara.hpp	/^        auto setValue( std::string const &arg ) -> ParserResult override {$/;"	f	struct:Catch::clara::detail::BoundValueRef	typeref:typename:ParserResult override
setValue	misc/deps/catch2/third_party/clara.hpp	/^        auto setValue( std::string const &arg ) -> ParserResult override {$/;"	f	struct:clara::detail::BoundLambda	typeref:typename:ParserResult override
setValue	misc/deps/catch2/third_party/clara.hpp	/^        auto setValue( std::string const &arg ) -> ParserResult override {$/;"	f	struct:clara::detail::BoundValueRef	typeref:typename:ParserResult override
set_rate	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static void set_rate(rep new_rate) { rate() = new_rate; }$/;"	f	struct:__anon7f22177c0110::counting_clock	typeref:typename:void	file:
settings	misc/deps/catch2/.conan/build.py	/^    settings = BuilderSettings()$/;"	v
settings	misc/deps/catch2/.conan/test_package/conanfile.py	/^    settings = "os", "compiler", "build_type", "arch"$/;"	v	class:TestPackageConan
shouldContinueOnFailure	misc/deps/catch2/include/internal/catch_result_type.cpp	/^    bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueO/;"	f	namespace:Catch	typeref:typename:bool
shouldDebugBreak	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        bool shouldDebugBreak = false;$/;"	m	struct:Catch::AssertionReaction	typeref:typename:bool
shouldDebugBreak	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::shouldDebugBreak() const              { return m_data.shouldDebugBreak; }$/;"	f	class:Catch::Config	typeref:typename:bool
shouldDebugBreak	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool shouldDebugBreak = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
shouldRedirectStdOut	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        bool shouldRedirectStdOut = false;$/;"	m	struct:Catch::ReporterPreferences	typeref:typename:bool
shouldReportAllAssertions	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        bool shouldReportAllAssertions = false;$/;"	m	struct:Catch::ReporterPreferences	typeref:typename:bool
shouldSuppressFailure	misc/deps/catch2/include/internal/catch_result_type.cpp	/^    bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressF/;"	f	namespace:Catch	typeref:typename:bool
shouldThrow	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        bool shouldThrow = false;$/;"	m	struct:Catch::AssertionReaction	typeref:typename:bool
showDurations	misc/deps/catch2/include/internal/catch_config.cpp	/^    ShowDurations::OrNot Config::showDurations() const { return m_data.showDurations; }$/;"	f	class:Catch::Config	typeref:typename:ShowDurations::OrNot
showDurations	misc/deps/catch2/include/internal/catch_config.hpp	/^        ShowDurations::OrNot showDurations = ShowDurations::DefaultForReporter;$/;"	m	struct:Catch::ConfigData	typeref:typename:ShowDurations::OrNot
showHelp	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::showHelp() const { return m_data.showHelp; }$/;"	f	class:Catch::Config	typeref:typename:bool
showHelp	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool showHelp = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
showHelp	misc/deps/catch2/include/internal/catch_session.cpp	/^    void Session::showHelp() const {$/;"	f	class:Catch::Session	typeref:typename:void
showInvisibles	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::showInvisibles() const                { return m_data.showInvisibles; }$/;"	f	class:Catch::Config	typeref:typename:bool
showInvisibles	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool showInvisibles = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
showSuccessfulTests	misc/deps/catch2/include/internal/catch_config.hpp	/^        bool showSuccessfulTests = false;$/;"	m	struct:Catch::ConfigData	typeref:typename:bool
shuffle2	misc/tests/utils/rand.cpp	/^static void shuffle2(uint64_t *p, uint64_t *q, size_t np, size_t nq)$/;"	f	typeref:typename:void	file:
sigStackSize	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    static constexpr std::size_t sigStackSize = 32768 >= MINSIGSTKSZ ? 32768 : MINSIGSTKSZ;$/;"	v	namespace:Catch	typeref:typename:std::size_t	file:
signalDefs	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    static SignalDefs signalDefs[] = {$/;"	v	namespace:Catch	typeref:typename:SignalDefs[]	file:
signal_t	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    using signal_t = void (*) (void*);$/;"	t	namespace:__anonb1aeb3b90110::CompilationTests	file:
sinceEpochParser	misc/deps/catch2/scripts/approvalTests.py	/^sinceEpochParser = re.compile(r'\\d+ .+ since epoch')$/;"	v
singular	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        int singular[1] = { 1 };$/;"	v	typeref:typename:int[1]
size	misc/deps/catch2/include/internal/catch_stringref.h	/^        constexpr auto size() const noexcept -> size_type {$/;"	f	class:Catch::StringRef	typeref:typename:auto
size	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^    static const int size = 100;$/;"	v	typeref:typename:const int	file:
size	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^    static const int size = 100;$/;"	v	typeref:typename:const int	file:
size	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    size_t size() { return 0; }$/;"	f	struct:__anon27b7d6900110::ClassTests::Template_Foo	typeref:typename:size_t	file:
size	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    size_t size() { return V; }$/;"	f	struct:__anon27b7d6900110::ClassTests::Template_Foo_2	typeref:typename:size_t	file:
size	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    size_t size() { return 0; }$/;"	f	struct:__anone7dbb1860110::MiscTests::Foo	typeref:typename:size_t	file:
size	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    size_t size() { return S; }$/;"	f	struct:__anone7dbb1860110::MiscTests::Bar	typeref:typename:size_t	file:
size	misc/deps/catch2/single_include/catch2/catch.hpp	/^        auto size() const noexcept -> size_type {$/;"	f	class:Catch::StringRef	typeref:typename:auto
size_type	misc/deps/catch2/include/internal/catch_stringref.h	/^        using size_type = std::size_t;$/;"	t	class:Catch::StringRef	typeref:typename:std::size_t
size_type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        using size_type = std::size_t;$/;"	t	struct:__anon8bbeb4870110::minimal_allocator	typeref:typename:std::size_t	file:
size_type	misc/deps/catch2/single_include/catch2/catch.hpp	/^        using size_type = std::size_t;$/;"	t	class:Catch::StringRef	typeref:typename:std::size_t
skipTest	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    void skipTest( Catch::TestCaseInfo const& testInfo ) override {$/;"	f	struct:MyListener	typeref:typename:void	file:
skipTest	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^        void skipTest( TestCaseInfo const& testInfo ) override {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
skipTest	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void skipTest(TestCaseInfo const&) override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
skipTest	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void skipTest(TestCaseInfo const&) override {}$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
skipTest	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::skipTest( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
skipTest	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void skipTest( TestCaseInfo const& \/* testInfo *\/ ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
skipTest	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^        void skipTest( TestCaseInfo const& testInfo ) override {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
skipTest	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void skipTest( TestCaseInfo const& \/* testInfo *\/ ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
sm	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        using sm = Catch::StringMaker<double>;$/;"	t	typeref:typename:Catch::StringMaker<double>	file:
sm	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        using sm = Catch::StringMaker<float>;$/;"	t	typeref:typename:Catch::StringMaker<float>	file:
small	misc/tests/ft_string/strnstr.cpp	/^	const char *small = "bar";$/;"	v	typeref:typename:const char *
some	misc/deps/catch2/include/internal/catch_option.hpp	/^        bool some() const { return nullableValue != nullptr; }$/;"	f	class:Catch::Option	typeref:typename:bool
sortTests	misc/deps/catch2/include/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCase> sortTests( IConfig const& config, std::vector<TestCase> const& unsorte/;"	f	namespace:Catch	typeref:typename:std::vector<TestCase>
space	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        char space = ' ';$/;"	v	typeref:typename:char
spec	misc/deps/catch2/contrib/CatchAddTests.cmake	/^set(spec ${TEST_SPEC})$/;"	v
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "*a" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "*a*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "*longer*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "*name*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "*name*[x]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "*spaces" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "," );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "[]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "[one]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "[two] [x]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "[two][x]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "[x]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "\\"  aardvark \\"" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "\\"*name*\\"~[.]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "\\"\\"" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "\\"b\\"" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "\\"longer*\\"\\"*spaces\\"" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "a*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "aardvark" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "b" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "exclude:*name*,[three]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "exclude:[two]*name*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "long*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "~*name*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "~*name*,[three]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "~[one]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "~[two]*name*" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "~[two][x]" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec = parseTestSpec( "~b" );$/;"	v	typeref:typename:TestSpec
spec	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^        TestSpec spec;$/;"	v	typeref:typename:TestSpec
specialCaseParser	misc/deps/catch2/scripts/approvalTests.py	/^specialCaseParser = re.compile(r'file\\((\\d+)\\)')$/;"	v
spellings	misc/deps/catch2/include/internal/catch_list.h	/^        std::set<std::string> spellings;$/;"	m	struct:Catch::TagInfo	typeref:typename:std::set<std::string>
splitStringRef	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    std::vector<StringRef> splitStringRef( StringRef str, char delimiter ) {$/;"	f	namespace:Catch	typeref:typename:std::vector<StringRef>
sr	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^            StringRef sr = stdStr;$/;"	v	typeref:typename:StringRef
sr	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^            StringRef sr;$/;"	v	typeref:typename:StringRef
sr	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        StringRef sr = "a stringref";$/;"	v	typeref:typename:StringRef
sr1	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        constexpr auto sr1 = "abc"_catch_sr;$/;"	v	typeref:typename:auto
sr2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        constexpr auto sr2 = ""_sr;$/;"	v	typeref:typename:auto
ss	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        StringRef ss = s.substr(0, 5);$/;"	v	typeref:typename:StringRef
stable_branch_pattern	misc/deps/catch2/.conan/build.py	/^    def stable_branch_pattern(self):$/;"	m	class:BuilderSettings
standardDeviation	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        Benchmark::Estimate<Duration> standardDeviation;$/;"	m	struct:Catch::BenchmarkStats	typeref:typename:Benchmark::Estimate<Duration>
standard_deviation	misc/deps/catch2/include/internal/benchmark/catch_sample_analysis.hpp	/^            Estimate<Duration> standard_deviation;$/;"	m	struct:Catch::Benchmark::SampleAnalysis	typeref:typename:Estimate<Duration>
standard_deviation	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^    double standard_deviation(std::vector<double>::iterator first, std::vector<double>::iterator/;"	f	namespace:__anonac4822fc0110	typeref:typename:double
standard_deviation	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.hpp	/^                Estimate<double> standard_deviation;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis	typeref:typename:Estimate<double>
start	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^                void start() override { started = Clock::now(); }$/;"	f	struct:Catch::Benchmark::Detail::ChronometerModel	typeref:typename:void
start	misc/deps/catch2/include/internal/catch_timer.cpp	/^    void Timer::start() {$/;"	f	class:Catch::Timer	typeref:typename:void
start	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        void start() override { ++started; }$/;"	f	struct:__anon7f22177c0110::TestChronometerModel	typeref:typename:void	file:
start	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    auto start = counting_clock::now();$/;"	v	typeref:typename:auto
startCycle	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void TrackerContext::startCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:void
startElement	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::startElement( std::string const& name ) {$/;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter &
startNewMode	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::startNewMode( Mode mode ) {$/;"	f	class:Catch::TestSpecParser	typeref:typename:void
startRun	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    ITracker& TrackerContext::startRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext	typeref:typename:ITracker &
started	misc/deps/catch2/include/internal/benchmark/catch_chronometer.hpp	/^                TimePoint<Clock> started;$/;"	m	struct:Catch::Benchmark::Detail::ChronometerModel	typeref:typename:TimePoint<Clock>
started	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        int started = 0;$/;"	m	struct:__anon7f22177c0110::TestChronometerModel	typeref:typename:int	file:
startsWith	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    bool startsWith( std::string const& s, char prefix ) {$/;"	f	namespace:Catch	typeref:typename:bool
startsWith	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    bool startsWith( std::string const& s, std::string const& prefix ) {$/;"	f	namespace:Catch	typeref:typename:bool
starts_with	misc/deps/catch2/misc/coverage-helper.cpp	/^bool starts_with(std::string const& str, std::string const& pref) {$/;"	f	typeref:typename:bool
state_type	misc/deps/catch2/include/internal/catch_random_number_generator.h	/^        using state_type = std::uint64_t;$/;"	t	class:Catch::SimplePcg32	typeref:typename:std::uint64_t
stats	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            SectionStats stats;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:SectionStats
stats	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    AssertionStats const& stats;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:AssertionStats const &	file:
std dev       low std dev   high std dev	misc/deps/catch2/docs/benchmarks.md	/^                                                std dev       low std dev   high std dev$/;"	s
stdErr	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::string stdErr;$/;"	m	struct:Catch::TestCaseStats	typeref:typename:std::string
stdErr	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            std::string stdErr;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:std::string
stdErrForSuite	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^        std::string stdErrForSuite;$/;"	m	class:Catch::JunitReporter	typeref:typename:std::string
stdOut	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        std::string stdOut;$/;"	m	struct:Catch::TestCaseStats	typeref:typename:std::string
stdOut	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            std::string stdOut;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode	typeref:typename:std::string
stdOutForSuite	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^        std::string stdOutForSuite;$/;"	m	class:Catch::JunitReporter	typeref:typename:std::string
stdStr	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^            std::string stdStr;$/;"	v	typeref:typename:std::string
stdStr	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/String.tests.cpp	/^        std::string stdStr = "a standard string";$/;"	v	typeref:typename:std::string
stdout	misc/deps/catch2/docs/configuration.md	/^## stdout$/;"	s
stdoutHandle	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        HANDLE stdoutHandle;$/;"	m	class:Catch::__anonabe5bc570210::Win32ColourImpl	typeref:typename:HANDLE	file:
step	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^FP step(FP start, FP direction, uint64_t steps) {$/;"	f	namespace:Catch::__anon3ab11d7b0210	typeref:typename:FP
storage_for	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^    using storage_for = Detail::ObjectStorage<T, true>;$/;"	t	namespace:Catch	typeref:typename:Detail::ObjectStorage<T,true>
stored_object	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            T& stored_object()$/;"	f	struct:Catch::Detail::ObjectStorage	typeref:typename:T &
str	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    auto RedirectedStdErr::str() const -> std::string { return m_rss.str(); }$/;"	f	class:Catch::RedirectedStdErr	typeref:typename:std::string
str	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    auto RedirectedStdOut::str() const -> std::string { return m_rss.str(); }$/;"	f	class:Catch::RedirectedStdOut	typeref:typename:std::string
str	misc/deps/catch2/include/internal/catch_stream.cpp	/^    auto ReusableStringStream::str() const -> std::string {$/;"	f	class:Catch::ReusableStringStream	typeref:typename:std::string
str	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        auto str = GENERATE(as<std::string>{}, "a", "bb", "ccc");$/;"	v	typeref:typename:auto
str	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^struct Data { std::string str; size_t len; };$/;"	m	struct:Data	typeref:typename:std::string	file:
str1	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        auto str1 = sm::convert(testDouble);$/;"	v	typeref:typename:auto
str1	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        auto str1 = sm::convert(testFloat);$/;"	v	typeref:typename:auto
str2	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        auto str2 = sm::convert(testDouble);$/;"	v	typeref:typename:auto
str2	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        auto str2 = sm::convert(testFloat);$/;"	v	typeref:typename:auto
str_hello	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    std::string str_hello = "hello";$/;"	m	struct:__anon8b7f96210110::ConditionTests::TestData	typeref:typename:std::string	file:
str_replace	misc/Makefile	/^define str_replace$/;"	m
stream	misc/deps/catch2/include/internal/catch_config.cpp	/^    std::ostream& Config::stream() const               { return m_stream->stream(); }$/;"	f	class:Catch::Config	typeref:typename:std::ostream &
stream	misc/deps/catch2/include/internal/catch_interfaces_reporter.cpp	/^    std::ostream& ReporterConfig::stream() const { return *m_stream; }$/;"	f	class:Catch::ReporterConfig	typeref:typename:std::ostream &
stream	misc/deps/catch2/include/internal/catch_stream.cpp	/^            std::ostream& stream() const override { return m_os; }$/;"	f	class:Catch::Detail::__anond61e3add0110::CoutStream	typeref:typename:std::ostream &	file:
stream	misc/deps/catch2/include/internal/catch_stream.cpp	/^            std::ostream& stream() const override { return m_os; }$/;"	f	class:Catch::Detail::__anond61e3add0110::DebugOutStream	typeref:typename:std::ostream &	file:
stream	misc/deps/catch2/include/internal/catch_stream.cpp	/^            std::ostream& stream() const override {$/;"	f	class:Catch::Detail::__anond61e3add0110::FileStream	typeref:typename:std::ostream &	file:
stream	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::ostream& stream;$/;"	m	struct:Catch::CumulativeReporterBase	typeref:typename:std::ostream &
stream	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        std::ostream& stream;$/;"	m	struct:Catch::StreamingReporterBase	typeref:typename:std::ostream &
stream	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon16c8dcf30210::AssertionPrinter	typeref:typename:std::ostream &	file:
stream	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon99a91d3f0110::ConsoleAssertionPrinter	typeref:typename:std::ostream &	file:
stream	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^            std::ostream& stream;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::ostream &
stream	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^            std::ostream& stream;$/;"	m	class:Catch::TAPReporter::AssertionPrinter	typeref:typename:std::ostream &
streamReconstructedExpression	misc/deps/catch2/include/internal/catch_capture_matchers.h	/^        void streamReconstructedExpression( std::ostream &os ) const override {$/;"	f	class:Catch::MatchExpr	typeref:typename:void
streamReconstructedExpression	misc/deps/catch2/include/internal/catch_decomposer.h	/^        void streamReconstructedExpression( std::ostream &os ) const override {$/;"	f	class:Catch::BinaryExpr	typeref:typename:void
streamReconstructedExpression	misc/deps/catch2/include/internal/catch_decomposer.h	/^        void streamReconstructedExpression( std::ostream &os ) const override {$/;"	f	class:Catch::UnaryExpr	typeref:typename:void
streamable_range	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct streamable_range {$/;"	s	namespace:__anonfad788a70210	file:
string	misc/tests/ft_string/strdup.cpp	/^    char string[] = "hello world";$/;"	v	typeref:typename:char[]
string	misc/tests/ft_string/strncmp.cpp	/^  char		*string = strdup("");$/;"	v	typeref:typename:char *
string1	misc/tests/ft_string/strncmp.cpp	/^  char		*string1 = strdup("stringA");$/;"	v	typeref:typename:char *
string2	misc/tests/ft_string/strncmp.cpp	/^  char		*string2 = strdup("stringZ");$/;"	v	typeref:typename:char *
stringWithQuotes	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/Xml.tests.cpp	/^        std::string stringWithQuotes = "don't \\"quote\\" me on that";$/;"	v	typeref:typename:std::string
stringify	misc/deps/catch2/include/internal/catch_tostring.h	/^        inline std::string stringify( NSString* nsstring ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
stringify	misc/deps/catch2/include/internal/catch_tostring.h	/^        std::string stringify(const T& e) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
stringify	misc/deps/catch2/single_include/catch2/catch.hpp	/^        inline std::string stringify( NSString* nsstring ) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
stringify	misc/deps/catch2/single_include/catch2/catch.hpp	/^        std::string stringify(const T& e) {$/;"	f	namespace:Catch::Detail	typeref:typename:std::string
stringmaker_range	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct stringmaker_range {$/;"	s	namespace:__anonfad788a70210	file:
substr	misc/deps/catch2/include/internal/catch_stringref.cpp	/^    auto StringRef::substr( size_type start, size_type size ) const noexcept -> StringRef {$/;"	f	class:Catch::StringRef	typeref:typename:auto
succeeded	misc/deps/catch2/include/internal/catch_assertionresult.cpp	/^    bool AssertionResult::succeeded() const {$/;"	f	class:Catch::AssertionResult	typeref:typename:bool
succeedingCase	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    void succeedingCase()$/;"	f	class:__anon27b7d6900110::ClassTests::TestClass	typeref:typename:void	file:
suffix	misc/deps/catch2/contrib/CatchAddTests.cmake	/^set(suffix "${TEST_SUFFIX}")$/;"	v
suite	misc/deps/catch2/contrib/CatchAddTests.cmake	/^set(suite)$/;"	v
suiteTimer	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^        Timer suiteTimer;$/;"	m	class:Catch::JunitReporter	typeref:typename:Timer
sum	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^        int sum = 0;$/;"	v	typeref:typename:int
sum	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^        int sum = 0;$/;"	v	typeref:typename:int
symbol	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string ratio_string<std::atto>::symbol() { return "a"; }$/;"	f	class:Catch::ratio_string::atto	typeref:typename:std::string
symbol	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string ratio_string<std::femto>::symbol() { return "f"; }$/;"	f	class:Catch::ratio_string::femto	typeref:typename:std::string
symbol	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string ratio_string<std::micro>::symbol() { return "u"; }$/;"	f	class:Catch::ratio_string::micro	typeref:typename:std::string
symbol	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string ratio_string<std::milli>::symbol() { return "m"; }$/;"	f	class:Catch::ratio_string::milli	typeref:typename:std::string
symbol	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string ratio_string<std::nano>::symbol() { return "n"; }$/;"	f	class:Catch::ratio_string::nano	typeref:typename:std::string
symbol	misc/deps/catch2/include/internal/catch_tostring.cpp	/^std::string ratio_string<std::pico>::symbol() { return "p"; }$/;"	f	class:Catch::ratio_string::pico	typeref:typename:std::string
symbol	misc/deps/catch2/include/internal/catch_tostring.h	/^std::string ratio_string<Ratio>::symbol() {$/;"	f	class:Catch::ratio_string	typeref:typename:std::string
symbol	misc/deps/catch2/single_include/catch2/catch.hpp	/^std::string ratio_string<Ratio>::symbol() {$/;"	f	class:Catch::ratio_string	typeref:typename:std::string
sync	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^    int sync() {$/;"	f	class:out_buff	typeref:typename:int	file:
sync	misc/deps/catch2/include/internal/catch_stream.cpp	/^            int sync() override {$/;"	f	class:Catch::Detail::__anond61e3add0110::StreamBufImpl	typeref:typename:int	file:
synchronizing_callback	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        inline static void synchronizing_callback( void * ) { }$/;"	f	namespace:__anonb1aeb3b90110::CompilationTests::utility	typeref:typename:void	file:
t	misc/tests/ft_string/strmapi.cpp	/^    char    const *t = "hello world";$/;"	v	typeref:typename:char const *
t1	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        logic_t t1, t2;$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:logic_t
t1	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                std::vector<double> empty, t1({1, 2});$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
t1	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    T1 t1;$/;"	m	struct:helper_1436	typeref:typename:T1	file:
t2	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        logic_t t1, t2;$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:logic_t
t2	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^    T2 t2;$/;"	m	struct:helper_1436	typeref:typename:T2	file:
t_bool	inc/ft_bool.h	/^{g_false, g_true}		t_bool;$/;"	t	typeref:enum:e_bool
t_choose	misc/tests/utils/rand.cpp	/^int t_choose(uint64_t n, size_t k, uint64_t *p)$/;"	f	typeref:typename:int
t_error	misc/tests/test.hpp	/^#define t_error(/;"	d
t_fdfill	misc/tests/utils/fdfill.cpp	/^void t_fdfill(void)$/;"	f	typeref:typename:void
t_list	inc/ft_list.h	/^}                   t_list;$/;"	t	typeref:struct:s_list
t_memfill	misc/tests/utils/memfill.cpp	/^int t_memfill()$/;"	f	typeref:typename:int
t_pathrel	misc/tests/utils/path.cpp	/^char *t_pathrel(char *buf, size_t n, char *argv0, char *p)$/;"	f	typeref:typename:char *
t_printf	misc/tests/utils/print.cpp	/^int t_printf(const char *s, ...)$/;"	f	typeref:typename:int
t_randint	misc/tests/utils/rand.cpp	/^uint64_t t_randint(uint64_t a, uint64_t b)$/;"	f	typeref:typename:uint64_t
t_randn	misc/tests/utils/rand.cpp	/^uint64_t t_randn(uint64_t n)$/;"	f	typeref:typename:uint64_t
t_randrange	misc/tests/utils/rand.cpp	/^void t_randrange(uint64_t *p, size_t n)$/;"	f	typeref:typename:void
t_randseed	misc/tests/utils/rand.cpp	/^void t_randseed(uint64_t s)$/;"	f	typeref:typename:void
t_setrlim	misc/tests/utils/setrlim.cpp	/^int t_setrlim(int r, long lim)$/;"	f	typeref:typename:int
t_setutf8	misc/tests/utils/utf8.cpp	/^int t_setutf8()$/;"	f	typeref:typename:int
t_shuffle	misc/tests/utils/rand.cpp	/^void t_shuffle(uint64_t *p, size_t n)$/;"	f	typeref:typename:void
t_status	misc/tests/utils/print.cpp	/^volatile int t_status = 0;$/;"	v	typeref:typename:volatile int
t_vmfill	misc/tests/utils/vmfill.cpp	/^int t_vmfill(void **p, size_t *n, int len)$/;"	f	typeref:typename:int
tab	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        char tab = '\\t';$/;"	v	typeref:typename:char
table	misc/deps/catch2/include/internal/catch_generators.hpp	/^    GeneratorWrapper<std::tuple<Ts...>> table( std::initializer_list<std::tuple<typename std::de/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<std::tuple<Ts...>>
tag	misc/deps/catch2/include/internal/catch_tag_alias.h	/^        std::string tag;$/;"	m	struct:Catch::TagAlias	typeref:typename:std::string
tagAndCollect	misc/deps/catch2/scripts/updateDocumentToC.py	/^def tagAndCollect(lines, id_tag=True, back_links=False, exclude_h=None):$/;"	f
tags	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        std::vector<std::string> tags;$/;"	m	struct:Catch::TestCaseInfo	typeref:typename:std::vector<std::string>
tags	misc/deps/catch2/include/internal/catch_test_registry.h	/^    StringRef tags;$/;"	m	struct:Catch::NameAndTags	typeref:typename:StringRef
tags	misc/deps/catch2/single_include/catch2/catch.hpp	/^    StringRef tags;$/;"	m	struct:Catch::NameAndTags	typeref:typename:StringRef
tagsAsString	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    std::string TestCaseInfo::tagsAsString() const {$/;"	f	class:Catch::TestCaseInfo	typeref:typename:std::string
take	misc/deps/catch2/include/internal/catch_generators_generic.hpp	/^    GeneratorWrapper<T> take(size_t target, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<T>
tcA	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^    Catch::TestCase tcA = fakeTestCase( "a" );$/;"	v	typeref:typename:Catch::TestCase
tcB	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^    Catch::TestCase tcB = fakeTestCase( "b", "[one][x]" );$/;"	v	typeref:typename:Catch::TestCase
tcC	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^    Catch::TestCase tcC = fakeTestCase( "longer name with spaces", "[two][three][.][x]" );$/;"	v	typeref:typename:Catch::TestCase
tcD	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^    Catch::TestCase tcD = fakeTestCase( "zlonger name with spacesz" );$/;"	v	typeref:typename:Catch::TestCase
td	misc/deps/catch2/projects/SelfTest/UsageTests/Approx.tests.cpp	/^  StrongDoubleTypedef td(10.0);$/;"	v	namespace:__anon0cb4e5740110::ApproxTests	typeref:typename:StrongDoubleTypedef
td	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    TestDef td;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:TestDef
tearDown	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^{$/;"	m	implementation:TestFixture
template	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^template<typename T>$/;"	C	implementation:TestFixture
templated_tests	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    bool templated_tests(T t) {$/;"	f	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:bool
temporary	misc/deps/catch2/projects/ExtraTests/X02-DisabledMacros.cpp	/^static Catch::ReporterRegistrar<Catch::ConsoleReporter> temporary( "console" );$/;"	v	typeref:typename:Catch::ReporterRegistrar<Catch::ConsoleReporter>	file:
test	Makefile	/^test:						$(COBJ) $(CXXOBJ) $(TESTOBJ)$/;"	t
test	misc/Makefile	/^test:                                           $(COBJ) $(CXXOBJ) $(TESTOBJ)$/;"	t
test	misc/deps/catch2/.conan/test_package/conanfile.py	/^    def test(self):$/;"	m	class:TestPackageConan
test	misc/deps/catch2/contrib/CatchAddTests.cmake	/^  set(test ${line})$/;"	v
test	misc/deps/catch2/include/internal/catch_test_case_info.h	/^        std::shared_ptr<ITestInvoker> test;$/;"	m	class:Catch::TestCase	typeref:typename:std::shared_ptr<ITestInvoker>
test	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        TestClass test;$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:TestClass
test	misc/deps/ezbuild/Makefile	/^test:						$(COBJ) $(CXXOBJ) $(TESTOBJ)$/;"	t
testCase	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^    ITracker& testCase = SectionTracker::acquire( ctx, makeNAL( "Testcase" ) );$/;"	v	typeref:typename:ITracker &
testCase2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^            ITracker& testCase2 = SectionTracker::acquire( ctx, makeNAL( "Testcase" ) );$/;"	v	typeref:typename:ITracker &
testCase3	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^                ITracker& testCase3 = SectionTracker::acquire( ctx, makeNAL( "Testcase" ) );$/;"	v	typeref:typename:ITracker &
testCaseEnded	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    void testCaseEnded( Catch::TestCaseStats const& testCaseStats ) override {$/;"	f	struct:MyListener	typeref:typename:void	file:
testCaseEnded	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^        void testCaseEnded( TestCaseStats const& _testCaseStats ) override {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
testCaseEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testCaseEnded(TestCaseStats const& \/* _testCaseStats *\/) override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
testCaseEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testCaseEnded(TestCaseStats const& testCaseStats) override {$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
testCaseEnded	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
testCaseEnded	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
testCaseEnded	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
testCaseEnded	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testCaseEnded	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
testCaseEnded	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^        void testCaseEnded( TestCaseStats const& _testCaseStats ) override {$/;"	f	struct:Catch::AutomakeReporter	typeref:typename:void
testCaseEnded	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testCaseStarting	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    void testCaseStarting( Catch::TestCaseInfo const& testInfo ) override {$/;"	f	struct:MyListener	typeref:typename:void	file:
testCaseStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testCaseStarting( TestCaseInfo const& ) override {}$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
testCaseStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testCaseStarting(TestCaseInfo const& _testInfo) override  {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
testCaseStarting	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testCaseStarting( TestCaseInfo const& testCaseInfo ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
testCaseStarting	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
testCaseStarting	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void testCaseStarting( TestCaseInfo const& testInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testCaseStarting	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
testCaseStarting	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void testCaseStarting( TestCaseInfo const& testInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testCases	misc/deps/catch2/include/internal/catch_totals.h	/^        Counts testCases;$/;"	m	struct:Catch::Totals	typeref:typename:Counts
testCheckedElse	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^inline bool testCheckedElse( bool flag ) {$/;"	f	namespace:__anone7dbb1860110::MiscTests	typeref:typename:bool
testCheckedIf	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^inline bool testCheckedIf( bool flag )  {$/;"	f	namespace:__anone7dbb1860110::MiscTests	typeref:typename:bool
testDouble	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        const double testDouble = 1.123456789012345678901234567899;$/;"	v	typeref:typename:const double
testFloat	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^        const float testFloat = 1.12345678901234567899f;$/;"	v	typeref:typename:const float
testForMissingAssertions	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    bool RunContext::testForMissingAssertions(Counts& assertions) {$/;"	f	class:Catch::RunContext	typeref:typename:bool
testGroupEnded	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::testGroupEnded(std::string const& testSpec, Totals const& totals, std::size/;"	f	class:Catch::RunContext	typeref:typename:void
testGroupEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testGroupEnded(TestGroupStats const& \/* _testGroupStats *\/) override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
testGroupEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testGroupEnded(TestGroupStats const& testGroupStats) override {$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
testGroupEnded	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::testGroupEnded(TestGroupStats const& _testGroupStats) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
testGroupEnded	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
testGroupEnded	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
testGroupEnded	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void testGroupEnded( TestGroupStats const& testGroupStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testGroupEnded	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
testGroupEnded	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void testGroupEnded( TestGroupStats const& testGroupStats ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testGroupStarting	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    void RunContext::testGroupStarting(std::string const& testSpec, std::size_t groupIndex, std:/;"	f	class:Catch::RunContext	typeref:typename:void
testGroupStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testGroupStarting( GroupInfo const& ) override {}$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
testGroupStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testGroupStarting(GroupInfo const& _groupInfo) override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
testGroupStarting	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
testGroupStarting	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
testGroupStarting	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^        void testGroupStarting( GroupInfo const& groupInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testGroupStarting	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
testGroupStarting	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^        void testGroupStarting( GroupInfo const& groupInfo ) override {$/;"	f	struct:Catch::TeamCityReporter	typeref:typename:void
testInfo	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        TestCaseInfo testInfo;$/;"	m	struct:Catch::TestCaseStats	typeref:typename:TestCaseInfo
testMethod_uponComplete_arg	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        signal_t testMethod_uponComplete_arg = nullptr;$/;"	m	struct:__anonb1aeb3b90110::CompilationTests::TestClass	typeref:typename:signal_t	file:
testRunEnded	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    void testRunEnded( Catch::TestRunStats const& testRunStats ) override {$/;"	f	struct:MyListener	typeref:typename:void	file:
testRunEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testRunEnded(TestRunStats const& \/* _testRunStats *\/) override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
testRunEnded	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testRunEnded(TestRunStats const& testRunStats) override {$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
testRunEnded	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::testRunEnded( TestRunStats const& _testRunStats ) {$/;"	f	class:Catch::CompactReporter	typeref:typename:void
testRunEnded	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
testRunEnded	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
testRunEnded	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^        void testRunEnded( TestRunStats const& _testRunStats ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
testRunEnded	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
testRunEnded	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^        void testRunEnded( TestRunStats const& _testRunStats ) override {$/;"	f	struct:Catch::TAPReporter	typeref:typename:void
testRunEndedCumulative	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testRunEndedCumulative() {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
testRunStarting	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^    void testRunStarting( Catch::TestRunInfo const& testRunInfo ) override {$/;"	f	struct:MyListener	typeref:typename:void	file:
testRunStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testRunStarting( TestRunInfo const& ) override {}$/;"	f	struct:Catch::CumulativeReporterBase	typeref:typename:void
testRunStarting	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^        void testRunStarting(TestRunInfo const& _testRunInfo) override {$/;"	f	struct:Catch::StreamingReporterBase	typeref:typename:void
testRunStarting	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::testRunStarting(TestRunInfo const& _testInfo) {$/;"	f	class:Catch::ConsoleReporter	typeref:typename:void
testRunStarting	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testRunStarting( TestRunInfo const& runInfo )  {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
testRunStarting	misc/deps/catch2/include/reporters/catch_reporter_listening.cpp	/^    void ListeningReporter::testRunStarting( TestRunInfo const& testRunInfo ) {$/;"	f	class:Catch::ListeningReporter	typeref:typename:void
testRunStarting	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testRunStarting( TestRunInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
testSpec	misc/deps/catch2/include/internal/catch_config.cpp	/^    TestSpec const& Config::testSpec() const { return m_testSpec; }$/;"	f	class:Catch::Config	typeref:typename:TestSpec const &
testSpec	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    TestSpec TestSpecParser::testSpec() {$/;"	f	class:Catch::TestSpecParser	typeref:typename:TestSpec
testStringForMatching	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    inline const char *testStringForMatching() {$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:const char *
testStringForMatching2	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    inline const char *testStringForMatching2() {$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:const char *
test_align	misc/tests/ft_memory/memcpy.cpp	/^static          void test_align(int dalign, int salign, int len)$/;"	f	typeref:typename:void	file:
test_align	misc/tests/ft_memory/memset.cpp	/^static void test_align(int align, int len)$/;"	f	typeref:typename:void	file:
test_cases_in_file	misc/deps/catch2/scripts/benchmarkCompile.py	/^test_cases_in_file = 20$/;"	v
test_count	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    size_t test_count = 0;$/;"	v	namespace:__anonee6a7c340610	typeref:typename:size_t
test_name	misc/deps/catch2/contrib/CatchAddTests.cmake	/^  set(test_name ${test})$/;"	v
test_package	misc/deps/catch2/.conan/test_package/CMakeLists.txt	/^project(test_package CXX)$/;"	p
test_value	misc/tests/ft_memory/bzero.cpp	/^static void test_value()$/;"	f	typeref:typename:void	file:
test_value	misc/tests/ft_memory/memset.cpp	/^static void test_value(int c)$/;"	f	typeref:typename:void	file:
testcase	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/Tag.tests.cpp	/^    auto testcase = Catch::makeTestCase(nullptr, "", {"fake test name", "[.magic-tag]"}, CATCH_I/;"	v	typeref:typename:auto
tests	misc/deps/catch2/contrib/CatchAddTests.cmake	/^set(tests)$/;"	v
tests	misc/deps/catch2/include/internal/catch_test_spec.h	/^            std::vector<TestCase const*> tests;$/;"	m	struct:Catch::TestSpec::FilterMatch	typeref:typename:std::vector<TestCase const * >
testsOrTags	misc/deps/catch2/include/internal/catch_config.hpp	/^        std::vector<std::string> testsOrTags;$/;"	m	struct:Catch::ConfigData	typeref:typename:std::vector<std::string>
thisDoesntThrow	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^int thisDoesntThrow() {$/;"	f	namespace:__anon7fc805e90110::ExceptionTests	typeref:typename:int
thisThrows	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^int thisThrows() {$/;"	f	namespace:__anon7fc805e90110::ExceptionTests	typeref:typename:int
this_doesnt_throw	misc/deps/catch2/projects/ExtraTests/X01-PrefixedMacros.cpp	/^void this_doesnt_throw() {}$/;"	f	typeref:typename:void
this_throws	misc/deps/catch2/projects/ExtraTests/X01-PrefixedMacros.cpp	/^void this_throws() {$/;"	f	typeref:typename:[[noreturn]]void
throw	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    throw std::domain_error( "std C++ exception" );$/;"	C	implementation:TestFixture
throwCustom	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^[[noreturn]] void throwCustom() {$/;"	f	namespace:__anon7fc805e90110::ExceptionTests	typeref:typename:[[noreturn]]void
throw_domain_error	misc/deps/catch2/include/internal/catch_enforce.cpp	/^    void throw_domain_error(std::string const& msg) {$/;"	f	namespace:Catch	typeref:typename:[[noreturn]]void
throw_exception	misc/deps/catch2/include/internal/catch_enforce.cpp	/^    void throw_exception(std::exception const& e) {$/;"	f	namespace:Catch	typeref:typename:[[noreturn]]void
throw_exception	misc/deps/catch2/include/internal/catch_enforce.h	/^    void throw_exception(Ex const& e) {$/;"	f	namespace:Catch	typeref:typename:[[noreturn]]void
throw_exception	misc/deps/catch2/projects/ExtraTests/X04-DisabledExceptions-CustomHandler.cpp	/^    void throw_exception(std::exception const& e) {$/;"	f	namespace:Catch	typeref:typename:[[noreturn]]void
throw_logic_error	misc/deps/catch2/include/internal/catch_enforce.cpp	/^    void throw_logic_error(std::string const& msg) {$/;"	f	namespace:Catch	typeref:typename:[[noreturn]]void
throw_runtime_error	misc/deps/catch2/include/internal/catch_enforce.cpp	/^    void throw_runtime_error(std::string const& msg) {$/;"	f	namespace:Catch	typeref:typename:[[noreturn]]void
throws	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    bool TestCaseInfo::throws() const {$/;"	f	class:Catch::TestCaseInfo	typeref:typename:bool
throwsAsInt	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    void throwsAsInt(int i) {$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:[[noreturn]]void
throwsDerivedException	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    void throwsDerivedException() {$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:[[noreturn]]void
throwsSpecialException	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^    void throwsSpecialException(int i) {$/;"	f	namespace:__anon96897c110110::MatchersTests	typeref:typename:[[noreturn]]void
throws_int	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    void throws_int(bool b) {$/;"	f	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:void
ti	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    std::type_info const& ti = typeid(int);$/;"	v	typeref:typename:std::type_info const &
tick	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static rep& tick() {$/;"	f	struct:__anon7f22177c0110::manual_clock	typeref:typename:rep &	file:
time	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    manual_clock::duration time(100);$/;"	v	typeref:typename:manual_clock::duration
time_point	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        using time_point = std::chrono::time_point<counting_clock, duration>;$/;"	t	struct:__anon7f22177c0110::counting_clock	typeref:typename:std::chrono::time_point<counting_clock,duration>	file:
time_point	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        using time_point = std::chrono::time_point<manual_clock, duration>;$/;"	t	struct:__anon7f22177c0110::manual_clock	typeref:typename:std::chrono::time_point<manual_clock,duration>	file:
timestampsParser	misc/deps/catch2/scripts/approvalTests.py	/^timestampsParser = re.compile(r'\\d{4}-\\d{2}-\\d{2}T\\d{2}\\:\\d{2}\\:\\d{2}Z')$/;"	v
tmemccpy	misc/tests/ft_memory/memccpy.cpp	/^	char tmemccpy[2][7]  =  { "abcde", "abcdef" };$/;"	v	typeref:typename:char[2][7]
tmemchr	misc/tests/ft_memory/memchr.cpp	/^	char tmemchr[] = "www.test.com";$/;"	v	typeref:typename:char[]
tmemmove	misc/tests/ft_memory/memmove.cpp	/^	char tmemmove[] = "abcde";$/;"	v	typeref:typename:char[]
tmp	misc/tests/ft_string/itoa.cpp	/^    char    *tmp;$/;"	v	typeref:typename:char *
tmp	misc/tests/ft_string/strcpy.cpp	/^    char    tmp[] = "";$/;"	v	typeref:typename:char[]
to	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto to = std::get<1>(extent);$/;"	v	typeref:typename:auto
toLower	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    std::string toLower( std::string const& s ) {$/;"	f	namespace:Catch	typeref:typename:std::string
toLowerCh	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^        char toLowerCh(char c) {$/;"	f	namespace:Catch::__anon12195f9c0110	typeref:typename:char
toLowerInPlace	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    void toLowerInPlace( std::string& s ) {$/;"	f	namespace:Catch	typeref:typename:void
toString	misc/deps/catch2/include/external/clara.hpp	/^	auto toString() const -> std::string {$/;"	f	class:Catch::clara::TextFlow::Column	typeref:typename:std::string
toString	misc/deps/catch2/include/external/clara.hpp	/^	auto toString() const -> std::string {$/;"	f	class:Catch::clara::TextFlow::Columns	typeref:typename:std::string
toString	misc/deps/catch2/include/internal/catch_approx.cpp	/^    std::string Approx::toString() const {$/;"	f	class:Catch::Detail::Approx	typeref:typename:std::string
toString	misc/deps/catch2/include/internal/catch_matchers.cpp	/^        std::string MatcherUntypedBase::toString() const {$/;"	f	class:Catch::Matchers::Impl::MatcherUntypedBase	typeref:typename:std::string
toString	misc/deps/catch2/third_party/clara.hpp	/^        auto toString() const -> std::string {$/;"	f	class:clara::TextFlow::Column	typeref:typename:std::string
toString	misc/deps/catch2/third_party/clara.hpp	/^        auto toString() const -> std::string {$/;"	f	class:clara::TextFlow::Columns	typeref:typename:std::string
to_string	misc/deps/catch2/include/internal/catch_to_string.hpp	/^    std::string to_string(T const& t) {$/;"	f	namespace:Catch	typeref:typename:std::string
token	misc/deps/catch2/include/external/clara.hpp	/^        std::string token;$/;"	m	struct:Catch::clara::detail::Token	typeref:typename:std::string
token	misc/deps/catch2/third_party/clara.hpp	/^        std::string token;$/;"	m	struct:clara::detail::Token	typeref:typename:std::string
topics	misc/deps/catch2/conanfile.py	/^    topics = ("conan", "catch2", "header-only", "unit-test", "tdd", "bdd")$/;"	v	class:CatchConan
total	misc/deps/catch2/include/internal/benchmark/catch_outlier_classification.hpp	/^            int total() const {$/;"	f	struct:Catch::Benchmark::OutlierClassification	typeref:typename:int
total	misc/deps/catch2/include/internal/catch_totals.cpp	/^    std::size_t Counts::total() const {$/;"	f	class:Catch::Counts	typeref:typename:std::size_t
totals	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        Totals totals;$/;"	m	struct:Catch::AssertionStats	typeref:typename:Totals
totals	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        Totals totals;$/;"	m	struct:Catch::TestCaseStats	typeref:typename:Totals
totals	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        Totals totals;$/;"	m	struct:Catch::TestGroupStats	typeref:typename:Totals
totals	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        Totals totals;$/;"	m	struct:Catch::TestRunStats	typeref:typename:Totals
trailingBytes	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    size_t trailingBytes(unsigned char c) {$/;"	f	namespace:Catch::__anon24bf8fff0110	typeref:typename:size_t
trailing_whitespace	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^static const char * const trailing_whitespace = "There is no extra whitespace here \\t \\n \\r "/;"	v	typeref:typename:const char * const	file:
translate	misc/deps/catch2/include/internal/catch_interfaces_exception.h	/^            std::string translate( ExceptionTranslators::const_iterator it, ExceptionTranslators/;"	f	class:Catch::ExceptionTranslatorRegistrar::ExceptionTranslator	typeref:typename:std::string
translateActiveException	misc/deps/catch2/include/internal/catch_exception_translator_registry.cpp	/^    std::string ExceptionTranslatorRegistry::translateActiveException() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry	typeref:typename:std::string
translateActiveException	misc/deps/catch2/include/internal/catch_registry_hub.cpp	/^    std::string translateActiveException() {$/;"	f	namespace:Catch	typeref:typename:std::string
trim	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    StringRef trim(StringRef ref) {$/;"	f	namespace:Catch	typeref:typename:StringRef
trim	misc/deps/catch2/include/internal/catch_string_manip.cpp	/^    std::string trim( std::string const& str ) {$/;"	f	namespace:Catch	typeref:typename:std::string
true	inc/ft_bool.h	/^#  define true /;"	d
trueValue	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    bool trueValue = true;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:bool
true_given	misc/deps/catch2/include/internal/catch_meta.hpp	/^template <typename> struct true_given : std::true_type {};$/;"	s	namespace:Catch
true_given	misc/deps/catch2/single_include/catch2/catch.hpp	/^template <typename> struct true_given : std::true_type {};$/;"	s	namespace:Catch
truthy	misc/deps/catch2/projects/SelfTest/UsageTests/Decomposition.tests.cpp	/^    truthy(bool b):m_value(b){}$/;"	f	struct:__anonf21a15d70110::truthy	file:
truthy	misc/deps/catch2/projects/SelfTest/UsageTests/Decomposition.tests.cpp	/^struct truthy {$/;"	s	namespace:__anonf21a15d70110	file:
tryOpen	misc/deps/catch2/include/internal/catch_test_case_tracker.cpp	/^    void SectionTracker::tryOpen() {$/;"	f	class:Catch::TestCaseTracking::SectionTracker	typeref:typename:void
tryTranslators	misc/deps/catch2/include/internal/catch_exception_translator_registry.cpp	/^    std::string ExceptionTranslatorRegistry::tryTranslators() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry	typeref:typename:std::string
tuple_type	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    using tuple_type = std::tuple<char const*, int>;$/;"	t	typeref:typename:std::tuple<char const *,int>	file:
twoValues	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    std::array<int, 2> twoValues = {{ 42, 250 }};$/;"	v	typeref:typename:std::array<int,2>
type	misc/deps/catch2/include/external/clara.hpp	/^        TokenType type;$/;"	m	struct:Catch::clara::detail::Token	typeref:typename:TokenType
type	misc/deps/catch2/include/external/clara.hpp	/^        auto type() const -> ParseResultType { return m_type; }$/;"	f	class:Catch::clara::detail::ParseState	typeref:typename:ParseResultType
type	misc/deps/catch2/include/external/clara.hpp	/^        auto type() const -> ResultBase::Type { return m_type; }$/;"	f	class:Catch::clara::detail::BasicResult	typeref:typename:ResultBase::Type
type	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteType { using type = T; };$/;"	t	struct:Catch::Benchmark::Detail::CompleteType	typeref:typename:T
type	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteType<void> { struct type {}; };$/;"	s	struct:Catch::Benchmark::Detail::CompleteType
type	misc/deps/catch2/include/internal/catch_generators.hpp	/^        using type = T;$/;"	t	struct:Catch::Generators::IGenerator	typeref:typename:T
type	misc/deps/catch2/include/internal/catch_message.h	/^        ResultWas::OfType type;$/;"	m	struct:Catch::MessageInfo	typeref:typename:ResultWas::OfType
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringByte.tests.cpp	/^    using type = std::byte;$/;"	t	typeref:typename:std::byte	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringByte.tests.cpp	/^    using type = std::vector<std::byte>;$/;"	t	typeref:typename:std::vector<std::byte>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringOptional.tests.cpp	/^    using type = std::optional<int>;$/;"	t	typeref:typename:std::optional<int>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringOptional.tests.cpp	/^    using type = std::optional<std::string>;$/;"	t	typeref:typename:std::optional<std::string>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringOptional.tests.cpp	/^    using type = std::vector<std::optional<int> >;$/;"	t	typeref:typename:std::vector<std::optional<int>>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    typedef std::tuple<> type;$/;"	t	typeref:typename:std::tuple<>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    typedef std::tuple<float,int> type;$/;"	t	typeref:typename:std::tuple<float,int>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    typedef std::tuple<int> type;$/;"	t	typeref:typename:std::tuple<int>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    typedef std::tuple<std::nullptr_t,int,const char *> type;$/;"	t	typeref:typename:std::tuple<std::nullptr_t,int,const char * >	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    typedef std::tuple<std::string,std::string> type;$/;"	t	typeref:typename:std::tuple<std::string,std::string>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    typedef std::tuple<std::tuple<int>,std::tuple<>,float> type;$/;"	t	typeref:typename:std::tuple<std::tuple<int>,std::tuple<>,float>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    using type = std::variant<MyType1, MyType2>;$/;"	t	typeref:typename:std::variant<MyType1,MyType2>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    using type = std::variant<float, int>;$/;"	t	typeref:typename:std::variant<float,int>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    using type = std::variant<inner, std::string>;$/;"	t	typeref:typename:std::variant<inner,std::string>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    using type = std::variant<int>;$/;"	t	typeref:typename:std::variant<int>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    using type = std::variant<std::monostate>;$/;"	t	typeref:typename:std::variant<std::monostate>	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    using type = std::variant<std::nullptr_t,int,const char *>;$/;"	t	typeref:typename:std::variant<std::nullptr_t,int,const char * >	file:
type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    using type = std::variant<std::string, int>;$/;"	t	typeref:typename:std::variant<std::string,int>	file:
type	misc/deps/catch2/third_party/clara.hpp	/^        TokenType type;$/;"	m	struct:clara::detail::Token	typeref:typename:TokenType
type	misc/deps/catch2/third_party/clara.hpp	/^        auto type() const -> ParseResultType { return m_type; }$/;"	f	class:clara::detail::ParseState	typeref:typename:ParseResultType
type	misc/deps/catch2/third_party/clara.hpp	/^        auto type() const -> ResultBase::Type { return m_type; }$/;"	f	class:clara::detail::BasicResult	typeref:typename:ResultBase::Type
uarr	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        unsigned char uarr[] = "123";$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:unsigned char[]
uc	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    unsigned char uc = 6;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:unsigned char
uchar	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^using uchar = unsigned char;$/;"	t	typeref:typename:unsigned char	file:
ui	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    unsigned int ui = 2;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:unsigned int
ul	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    unsigned long ul = 4;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:unsigned long
uncaught_exceptions	misc/deps/catch2/include/internal/catch_uncaught_exceptions.cpp	/^    bool uncaught_exceptions() {$/;"	f	namespace:Catch	typeref:typename:bool
undefRe	misc/deps/catch2/scripts/embed.py	/^undefRe = re.compile( r'\\s*#\\s*undef\\s*(\\S*)' ) # all #undefs$/;"	v
unexpectedExceptions	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^        unsigned int unexpectedExceptions = 0;$/;"	m	class:Catch::JunitReporter	typeref:typename:unsigned int
uniqueID	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^    static int uniqueID;$/;"	m	class:UniqueTestsFixture	typeref:typename:int	file:
uniqueID	misc/deps/catch2/examples/110-Fix-ClassFixture.cpp	/^int UniqueTestsFixture::uniqueID = 0;$/;"	m	class:UniqueTestsFixture	typeref:typename:int
unitsAsString	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    auto unitsAsString() const -> std::string {$/;"	f	class:Catch::__anon99a91d3f0110::Duration	typeref:typename:std::string	file:
unprintableString	misc/deps/catch2/include/internal/catch_tostring.cpp	/^    const std::string unprintableString = "{?}";$/;"	v	namespace:Catch::Detail	typeref:typename:const std::string
unscoped_info	misc/deps/catch2/projects/SelfTest/UsageTests/Message.tests.cpp	/^static void unscoped_info( T msg ) {$/;"	f	typeref:typename:void	file:
unsigned_char_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    const unsigned char     unsigned_char_var = 1;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:const unsigned char
unsigned_char_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    unsigned char    unsigned_char_var = 1;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:unsigned char
unsigned_int_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    const unsigned int      unsigned_int_var = 1;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:const unsigned int
unsigned_int_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    unsigned int    unsigned_int_var = 1;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:unsigned int
unsigned_long_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    const unsigned long     unsigned_long_var = 1L;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:const unsigned long
unsigned_long_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    unsigned long    unsigned_long_var = 1L;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:unsigned long
unsigned_short_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    const unsigned short    unsigned_short_var = 1;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:const unsigned short
unsigned_short_var	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    unsigned short    unsigned_short_var = 1;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:unsigned short
update	Makefile	/^update:$/;"	t
update	misc/deps/ezbuild/Makefile	/^update:$/;"	t
update	misc/deps/ezbuild/update.sh	/^function update()$/;"	f
updateCmakeFile	misc/deps/catch2/scripts/releaseCommon.py	/^def updateCmakeFile(version):$/;"	f
updateDocumentToC	misc/deps/catch2/scripts/updateDocumentToC.py	/^def updateDocumentToC(paths, min_toc_len, verbose):$/;"	f
updateDocumentToCMain	misc/deps/catch2/scripts/updateDocumentToC.py	/^def updateDocumentToCMain():$/;"	f
updateDocumentationVersionPlaceholders	misc/deps/catch2/scripts/releaseCommon.py	/^def updateDocumentationVersionPlaceholders(version):$/;"	f
updateReadmeFile	misc/deps/catch2/scripts/releaseCommon.py	/^def updateReadmeFile(version):$/;"	f
updateSingleDocumentToC	misc/deps/catch2/scripts/updateDocumentToC.py	/^def updateSingleDocumentToC(input_file, min_toc_len, verbose=False):$/;"	f
updateVersionDefine	misc/deps/catch2/scripts/releaseCommon.py	/^def updateVersionDefine(version):$/;"	f
updateVersionFile	misc/deps/catch2/scripts/releaseCommon.py	/^    def updateVersionFile(self):$/;"	m	class:Version
updateVersionPlaceholder	misc/deps/catch2/scripts/releaseCommon.py	/^def updateVersionPlaceholder(filename, version):$/;"	f
upload	misc/deps/catch2/.conan/build.py	/^    def upload(self):$/;"	m	class:BuilderSettings
upload	misc/deps/catch2/scripts/updateWandbox.py	/^def upload(options):$/;"	f
uploadFiles	misc/deps/catch2/scripts/updateWandbox.py	/^def uploadFiles():$/;"	f
upload_only_when_stable	misc/deps/catch2/.conan/build.py	/^    def upload_only_when_stable(self):$/;"	m	class:BuilderSettings
upper_bound	misc/deps/catch2/include/internal/benchmark/catch_estimate.hpp	/^            Duration upper_bound;$/;"	m	struct:Catch::Benchmark::Estimate	typeref:typename:Duration
url	misc/deps/catch2/conanfile.py	/^    url = "https:\/\/github.com\/catchorg\/Catch2"$/;"	v	class:CatchConan
use	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^            void use( Colour::Code ) {}$/;"	f	struct:Catch::__anonabe5bc570110::NoColourImpl	typeref:typename:void	file:
use	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        void use( Colour::Code _colourCode ) override {$/;"	f	class:Catch::__anonabe5bc570210::Win32ColourImpl	typeref:typename:void	file:
use	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^        void use( Colour::Code _colourCode ) override {$/;"	f	class:Catch::__anonabe5bc570310::PosixColourImpl	typeref:typename:void	file:
use	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    void Colour::use( Code _colourCode ) {$/;"	f	class:Catch::Colour	typeref:typename:void
useColour	misc/deps/catch2/include/internal/catch_config.cpp	/^    UseColour::YesOrNo Config::useColour() const       { return m_data.useColour; }$/;"	f	class:Catch::Config	typeref:typename:UseColour::YesOrNo
useColour	misc/deps/catch2/include/internal/catch_config.hpp	/^        UseColour::YesOrNo useColour = UseColour::Auto;$/;"	m	struct:Catch::ConfigData	typeref:typename:UseColour::YesOrNo
useColourOnPlatform	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    bool useColourOnPlatform() {$/;"	f	namespace:Catch::__anonabe5bc570310	typeref:typename:bool
useConfigData	misc/deps/catch2/include/internal/catch_session.cpp	/^    void Session::useConfigData( ConfigData const& configData ) {$/;"	f	class:Catch::Session	typeref:typename:void
used	misc/deps/catch2/include/internal/catch_interfaces_reporter.h	/^        bool used = false;$/;"	m	struct:Catch::LazyStat	typeref:typename:bool
user_code	misc/deps/catch2/include/internal/benchmark/detail/catch_complete_invoke.hpp	/^        Detail::CompleteType_t<Detail::ResultOf_t<Fun()>> user_code(Fun&& fun) {$/;"	f	namespace:Catch::Benchmark	typeref:typename:Detail::CompleteType_t<Detail::ResultOf_t<Fun ()>>
username	misc/deps/catch2/.conan/build.py	/^    def username(self):$/;"	m	class:BuilderSettings
using	misc/deps/catch2/projects/XCode/OCTest/OCTest/CatchOCTestCase.mm	/^    using namespace Catch::Matchers;$/;"	C	implementation:TestFixture
utility	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^    namespace utility {$/;"	n	namespace:__anonb1aeb3b90110::CompilationTests	file:
v	misc/deps/catch2/examples/100-Fix-Section.cpp	/^    std::vector<int> v( 5 );$/;"	v	typeref:typename:std::vector<int>
v	misc/deps/catch2/examples/120-Bdd-ScenarioGivenWhenThen.cpp	/^        std::vector<int> v( 5 );$/;"	v	typeref:typename:std::vector<int>
v	misc/deps/catch2/projects/ExtraTests/X20-BenchmarkingMacros.cpp	/^    std::vector<int> v;$/;"	v	typeref:typename:std::vector<int>
v	misc/deps/catch2/projects/SelfTest/UsageTests/BDD.tests.cpp	/^            std::vector<int> v;$/;"	v	namespace:__anon538088c40110::BDDTests	typeref:typename:std::vector<int>
v	misc/deps/catch2/projects/SelfTest/UsageTests/Benchmark.tests.cpp	/^    std::vector<int> v;$/;"	v	typeref:typename:std::vector<int>
v	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^            uint32_t v : 1;$/;"	m	struct:__anonb1aeb3b90110::CompilationTests::Y	typeref:typename:uint32_t:1	file:
v	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        uint32_t v : 1;$/;"	m	struct:__anonb1aeb3b90110::CompilationTests::Y	typeref:typename:uint32_t:1	file:
v	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^            std::vector<int> v;$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<int>
v	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    std::vector<TestType> v( 5 );$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::vector<TestType>
v	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    std::vector<int> v( 5 );$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::vector<int>
v	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    vector v;$/;"	v	typeref:typename:vector
v	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    std::vector<has_maker> v(1);$/;"	v	typeref:typename:std::vector<has_maker>
v	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    std::vector<has_maker_and_operator> v(1);$/;"	v	typeref:typename:std::vector<has_maker_and_operator>
v	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    std::vector<has_operator> v(1);$/;"	v	typeref:typename:std::vector<has_operator>
v	misc/deps/catch2/scripts/developBuild.py	/^v = releaseCommon.Version()$/;"	v
v	misc/deps/catch2/scripts/majorRelease.py	/^v = releaseCommon.Version()$/;"	v
v	misc/deps/catch2/scripts/minorRelease.py	/^v = releaseCommon.Version()$/;"	v
v	misc/deps/catch2/scripts/patchRelease.py	/^v = releaseCommon.Version()$/;"	v
v1	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                    auto v1 = std::numeric_limits<double>::min();$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:auto
v1	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                    auto v1 = std::numeric_limits<float>::min();$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:auto
v1	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                std::vector<double> v1({1., 2., 3.});$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
v1	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                std::vector<double> v1({2., 4., 6.}), v2({1., 3., 5.});$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
v2	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                    auto v2 = v1;$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:auto
v2	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                std::vector<double> v1({2., 4., 6.}), v2({1., 3., 5.});$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
v2	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^                std::vector<double> v2({1.5, 2.5, 3.5});$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
v2	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^            std::vector<int> v2;$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<int>
v3	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^            std::vector<double> v3;$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
v4	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^            std::vector<double> v4;$/;"	v	namespace:__anon96897c110110::MatchersTests	typeref:typename:std::vector<double>
val	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        auto val = GENERATE(take(4, random(0, 1)));$/;"	v	typeref:typename:auto
val	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^        auto val = GENERATE(take(4, random(0., 1.)));$/;"	v	typeref:typename:auto
val	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int val = 5;$/;"	m	struct:__anonfad788a70210::int_iterator	typeref:typename:int	file:
val	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    int val;$/;"	m	struct:Opaque	typeref:typename:int	file:
validate	misc/deps/catch2/include/external/clara.hpp	/^        auto validate() const -> Result override {$/;"	f	class:Catch::clara::detail::Opt	typeref:typename:Result override
validate	misc/deps/catch2/include/external/clara.hpp	/^        auto validate() const -> Result override {$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:Result override
validate	misc/deps/catch2/include/external/clara.hpp	/^        virtual auto validate() const -> Result { return Result::ok(); }$/;"	f	class:Catch::clara::detail::ParserBase	typeref:typename:Result
validate	misc/deps/catch2/third_party/clara.hpp	/^        auto validate() const -> Result override {$/;"	f	class:clara::detail::Opt	typeref:typename:Result override
validate	misc/deps/catch2/third_party/clara.hpp	/^        auto validate() const -> Result override {$/;"	f	struct:clara::detail::Parser	typeref:typename:Result override
validate	misc/deps/catch2/third_party/clara.hpp	/^        virtual auto validate() const -> Result { return Result::ok(); }$/;"	f	class:clara::detail::ParserBase	typeref:typename:Result
value	misc/deps/catch2/include/external/clara.hpp	/^        auto value() const -> T const & {$/;"	f	class:Catch::clara::detail::ResultValueBase	typeref:typename:T const &
value	misc/deps/catch2/include/internal/catch_generators.hpp	/^    GeneratorWrapper<T> value(T&& value) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<T>
value	misc/deps/catch2/include/internal/catch_tostring.h	/^            static const bool value = decltype(test<std::ostream, const T&>(0))::value;$/;"	m	class:Catch::Detail::IsStreamInsertable	typeref:typename:const bool
value	misc/deps/catch2/include/internal/catch_tostring.h	/^        static const bool value = false;$/;"	m	struct:Catch::is_range	typeref:typename:const bool
value	misc/deps/catch2/include/internal/catch_tostring.h	/^        static const bool value =$/;"	m	struct:Catch::is_range	typeref:typename:const bool
value	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            T value;$/;"	m	struct:Catch::CumulativeReporterBase::Node	typeref:typename:T
value	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    auto value() const -> double {$/;"	f	class:Catch::__anon99a91d3f0110::Duration	typeref:typename:double	file:
value	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    auto value = GENERATE(take(10, random(0, 10)));$/;"	v	typeref:typename:auto
value	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    int value = -1;$/;"	m	struct:__anon78e517e00510::non_copyable	typeref:typename:int	file:
value	misc/deps/catch2/projects/SelfTest/UsageTests/Class.tests.cpp	/^    int value = V;$/;"	m	struct:__anon27b7d6900110::ClassTests::Nttp_Fixture	typeref:typename:int	file:
value	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringPair.tests.cpp	/^    std::pair<int,const std::string> value( 34, "xyzzy" );$/;"	v	typeref:typename:std::pair<int,const std::string>
value	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringPair.tests.cpp	/^    std::pair<int,std::string> value( 34, "xyzzy" );$/;"	v	typeref:typename:std::pair<int,std::string>
value	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    type value { nullptr, 42, "Catch me" };$/;"	v	typeref:typename:type
value	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    type value { std::tuple<int>{42}, {}, 1.2f };$/;"	v	typeref:typename:type
value	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringTuple.tests.cpp	/^    type value {};$/;"	v	typeref:typename:type
value	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    type value {};$/;"	v	typeref:typename:type
value	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    type value;$/;"	v	typeref:typename:type
value	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    static const bool value = false;$/;"	m	struct:Catch::is_range	typeref:typename:const bool	file:
value	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    static const bool value = B;$/;"	m	struct:is_true	typeref:typename:const bool	file:
value	misc/deps/catch2/single_include/catch2/catch.hpp	/^            static const bool value = decltype(test<std::ostream, const T&>(0))::value;$/;"	m	class:Catch::Detail::IsStreamInsertable	typeref:typename:const bool
value	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static const bool value = false;$/;"	m	struct:Catch::is_range	typeref:typename:const bool
value	misc/deps/catch2/single_include/catch2/catch.hpp	/^        static const bool value =$/;"	m	struct:Catch::is_range	typeref:typename:const bool
value	misc/deps/catch2/third_party/clara.hpp	/^        auto value() const -> T const & {$/;"	f	class:clara::detail::ResultValueBase	typeref:typename:T const &
value2	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    auto value2 = GENERATE_REF(Catch::Generators::GeneratorWrapper<int>(std::unique_ptr<Catch::G/;"	v	typeref:typename:auto
valueOr	misc/deps/catch2/include/internal/catch_option.hpp	/^        T valueOr( T const& defaultValue ) const {$/;"	f	class:Catch::Option	typeref:typename:T
value_type	misc/deps/catch2/include/external/clara.hpp	/^		using value_type = std::string;$/;"	t	class:Catch::clara::TextFlow::Column::iterator	typeref:typename:std::string
value_type	misc/deps/catch2/include/external/clara.hpp	/^		using value_type = std::string;$/;"	t	class:Catch::clara::TextFlow::Columns::iterator	typeref:typename:std::string
value_type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        using value_type = T;$/;"	t	struct:__anon8bbeb4870110::minimal_allocator	typeref:typename:T	file:
value_type	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    using value_type = int;$/;"	t	struct:__anonfad788a70210::int_iterator	typeref:typename:int	file:
value_type	misc/deps/catch2/third_party/clara.hpp	/^            using value_type = std::string;$/;"	t	class:clara::TextFlow::Column::iterator	typeref:typename:std::string
value_type	misc/deps/catch2/third_party/clara.hpp	/^            using value_type = std::string;$/;"	t	class:clara::TextFlow::Columns::iterator	typeref:typename:std::string
values	misc/deps/catch2/include/internal/catch_generators.hpp	/^    GeneratorWrapper<T> values(std::initializer_list<T> values) {$/;"	f	namespace:Catch::Generators	typeref:typename:GeneratorWrapper<T>
values	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto values = GENERATE_COPY(range(from, to));$/;"	v	typeref:typename:auto
vector	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    using vector = std::vector<inner>;$/;"	t	typeref:typename:std::vector<inner>	file:
vectorStrings	misc/deps/catch2/include/internal/catch_test_spec.h	/^        using vectorStrings = std::vector<std::string>;$/;"	t	class:Catch::TestSpec	typeref:typename:std::vector<std::string>
verbosity	misc/deps/catch2/include/internal/catch_config.cpp	/^    Verbosity Config::verbosity() const                { return m_data.verbosity; }$/;"	f	class:Catch::Config	typeref:typename:Verbosity
verbosity	misc/deps/catch2/include/internal/catch_config.hpp	/^        Verbosity verbosity = Verbosity::Normal;$/;"	m	struct:Catch::ConfigData	typeref:typename:Verbosity
versionParser	misc/deps/catch2/scripts/approvalTests.py	/^versionParser = re.compile(r'Catch v[0-9]+\\.[0-9]+\\.[0-9]+(-develop\\.[0-9]+)?')$/;"	v
versionParser	misc/deps/catch2/scripts/releaseCommon.py	/^versionParser = re.compile( r'(\\s*static\\sVersion\\sversion)\\s*\\(\\s*(.*)\\s*,\\s*(.*)\\s*,\\/;"	v
versionPath	misc/deps/catch2/scripts/releaseCommon.py	/^versionPath = os.path.join( rootPath, "internal\/catch_version.cpp" )$/;"	v
versionPath	misc/deps/catch2/scripts/releaseNotes.py	/^versionPath = os.path.join( rootPath, "internal\/catch_version.hpp" )$/;"	v
view	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^    std::string_view view{"abc"};$/;"	v	typeref:typename:std::string_view
visitChar	misc/deps/catch2/include/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::visitChar( char c ) {$/;"	f	class:Catch::TestSpecParser	typeref:typename:bool
vv	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    std::vector<int,minimal_allocator<int> > vv;$/;"	v	typeref:typename:std::vector<int,minimal_allocator<int>>
vv	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    std::vector<int> vv;$/;"	v	typeref:typename:std::vector<int>
vv	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    std::vector<std::string> vv;$/;"	v	typeref:typename:std::vector<std::string>
waitForKeypress	misc/deps/catch2/include/internal/catch_config.hpp	/^        WaitForKeypress::When waitForKeypress = WaitForKeypress::Never;$/;"	m	struct:Catch::ConfigData	typeref:typename:WaitForKeypress::When
warmup	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            int warmup() {$/;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:int
warmup_iterations	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^            int warmup_iterations;$/;"	m	struct:Catch::Benchmark::ExecutionPlan	typeref:typename:int
warmup_iterations	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto warmup_iterations = 10000;$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
warmup_seed	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto warmup_seed = 10000;$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
warmup_time	misc/deps/catch2/include/internal/benchmark/catch_execution_plan.hpp	/^            Duration warmup_time;$/;"	m	struct:Catch::Benchmark::ExecutionPlan	typeref:typename:Duration
warmup_time	misc/deps/catch2/include/internal/benchmark/detail/catch_estimate_clock.hpp	/^            const auto warmup_time = std::chrono::milliseconds(100);$/;"	v	namespace:Catch::Benchmark::Detail	typeref:typename:const auto
warnAboutMissingAssertions	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::warnAboutMissingAssertions() const    { return !!(m_data.warnings & WarnAbout::/;"	f	class:Catch::Config	typeref:typename:bool
warnAboutNoTests	misc/deps/catch2/include/internal/catch_config.cpp	/^    bool Config::warnAboutNoTests() const              { return !!(m_data.warnings & WarnAbout::/;"	f	class:Catch::Config	typeref:typename:bool
warnings	misc/deps/catch2/include/internal/catch_config.hpp	/^        WarnAbout::What warnings = WarnAbout::Nothing;$/;"	m	struct:Catch::ConfigData	typeref:typename:WarnAbout::What
watch	Makefile	/^watch:$/;"	t
watch	misc/deps/ezbuild/Makefile	/^watch:$/;"	t
watch-compile	misc/Makefile	/^watch-compile:$/;"	t
watch-run	Makefile	/^watch-run:$/;"	t
watch-run	misc/deps/ezbuild/Makefile	/^watch-run:$/;"	t
watch-test	Makefile	/^watch-test:$/;"	t
watch-test	misc/Makefile	/^watch-test:$/;"	t
watch-test	misc/deps/ezbuild/Makefile	/^watch-test:$/;"	t
watchFolders	misc/deps/ezbuild/watcher.sh	/^function watchFolders()$/;"	f
weighted_average_quantile	misc/deps/catch2/include/internal/benchmark/detail/catch_stats.cpp	/^            double weighted_average_quantile(int k, int q, std::vector<double>::iterator first, /;"	f	namespace:Catch::Benchmark::Detail	typeref:typename:double
what	misc/deps/catch2/include/internal/benchmark/detail/catch_run_for_at_least.hpp	/^                const char* what() const noexcept override {$/;"	f	struct:Catch::Benchmark::Detail::optimized_away_error	typeref:typename:const char *
what	misc/deps/catch2/include/internal/catch_generators.cpp	/^const char* GeneratorException::what() const noexcept {$/;"	f	class:Catch::GeneratorException	typeref:typename:const char *
what	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/Tag.tests.cpp	/^            std::string what = ex.what();$/;"	v	typeref:typename:std::string
what	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^        char const* what() const noexcept override {$/;"	f	struct:__anon96897c110110::MatchersTests::DerivedException	typeref:typename:char const *	file:
what	misc/deps/catch2/projects/SelfTest/UsageTests/Matchers.tests.cpp	/^        char const* what() const noexcept override {$/;"	f	struct:__anon96897c110110::MatchersTests::SpecialException	typeref:typename:char const *	file:
what	misc/deps/catch2/projects/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^    char const* what() const noexcept override {$/;"	f	struct:__anon7572b8720110::WhatException	typeref:typename:char const *	file:
which	misc/deps/catch2/include/internal/catch_tostring.cpp	/^            static Arch which() {$/;"	f	struct:Catch::Detail::__anon55f5ca2b0110::Endianness	typeref:typename:Arch	file:
whitespace_at_both_ends	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^static const char * const whitespace_at_both_ends = " \\r\\n \\t There is no extra whitespace he/;"	v	typeref:typename:const char * const	file:
width	misc/deps/catch2/include/external/clara.hpp	/^	auto width() const -> size_t { return m_width; }$/;"	f	class:Catch::clara::TextFlow::Column	typeref:typename:size_t
width	misc/deps/catch2/include/external/clara.hpp	/^	auto width(size_t newWidth) -> Column& {$/;"	f	class:Catch::clara::TextFlow::Column	typeref:typename:Column &
width	misc/deps/catch2/include/reporters/catch_reporter_console.cpp	/^    int width;$/;"	m	struct:Catch::__anon99a91d3f0110::ColumnInfo	typeref:typename:int	file:
width	misc/deps/catch2/third_party/clara.hpp	/^        auto width( size_t newWidth ) -> Column& {$/;"	f	class:clara::TextFlow::Column	typeref:typename:Column &
width	misc/deps/catch2/third_party/clara.hpp	/^        auto width() const -> size_t { return m_width; }$/;"	f	class:clara::TextFlow::Column	typeref:typename:size_t
windowsify_path	misc/deps/catch2/misc/coverage-helper.cpp	/^std::string windowsify_path(std::string path) {$/;"	f	typeref:typename:std::string
withName	misc/deps/catch2/include/internal/catch_test_case_info.cpp	/^    TestCase TestCase::withName( std::string const& _newName ) const {$/;"	f	class:Catch::TestCase	typeref:typename:TestCase
wmain	misc/deps/catch2/include/internal/catch_default_main.hpp	/^extern "C" int wmain (int argc, wchar_t * argv[], wchar_t * []) {$/;"	f	typeref:typename:int
write	misc/deps/catch2/include/internal/catch_matchers_floating.cpp	/^void write(std::ostream& out, FloatingPoint num) {$/;"	f	namespace:Catch::__anon3ab11d7b0210	typeref:typename:void
write	misc/deps/catch2/scripts/generateSingleHeader.py	/^    def write( line ):$/;"	f	function:generate	file:
writeAssertion	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeAssertion( AssertionStats const& stats ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
writeAssertions	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeAssertions( SectionNode const& sectionNode ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
writeAttribute	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, bool attribute ) {$/;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter &
writeAttribute	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, std::string const& attribute /;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter &
writeAttribute	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^            ScopedElement& writeAttribute( std::string const& name, T const& attribute ) {$/;"	f	class:Catch::XmlWriter::ScopedElement	typeref:typename:ScopedElement &
writeAttribute	misc/deps/catch2/include/internal/catch_xmlwriter.h	/^        XmlWriter& writeAttribute( std::string const& name, T const& attribute ) {$/;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter &
writeBlankLine	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeBlankLine() {$/;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter &
writeComment	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeComment( std::string const& text ) {$/;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter &
writeDeclaration	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    void XmlWriter::writeDeclaration() {$/;"	f	class:Catch::XmlWriter	typeref:typename:void
writeGroup	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeGroup( TestGroupNode const& groupNode, double suiteTime ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
writeSection	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeSection(  std::string const& className,$/;"	f	class:Catch::JunitReporter	typeref:typename:void
writeSourceInfo	misc/deps/catch2/include/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::writeSourceInfo( SourceLineInfo const& sourceInfo ) {$/;"	f	class:Catch::XmlReporter	typeref:typename:void
writeStylesheetRef	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    void XmlWriter::writeStylesheetRef( std::string const& url ) {$/;"	f	class:Catch::XmlWriter	typeref:typename:void
writeTestCase	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeTestCase( TestCaseNode const& testCaseNode ) {$/;"	f	class:Catch::JunitReporter	typeref:typename:void
writeText	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeText( std::string const& text, bool indent ) {$/;"	f	class:Catch::XmlWriter	typeref:typename:XmlWriter &
writeText	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement& XmlWriter::ScopedElement::writeText( std::string const& text, bool/;"	f	class:Catch::XmlWriter::ScopedElement	typeref:typename:XmlWriter::ScopedElement &
writeToDebugConsole	misc/deps/catch2/include/internal/catch_debug_console.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch	typeref:typename:void
writeToStream	misc/deps/catch2/include/external/clara.hpp	/^        void writeToStream( std::ostream &os ) const {$/;"	f	struct:Catch::clara::detail::Parser	typeref:typename:void
writeToStream	misc/deps/catch2/third_party/clara.hpp	/^        void writeToStream( std::ostream &os ) const {$/;"	f	struct:clara::detail::Parser	typeref:typename:void
write_recent_release_notes_with_introduced_text	misc/deps/catch2/scripts/extractFeaturesFromReleaseNotes.py	/^def write_recent_release_notes_with_introduced_text():$/;"	f
ws	misc/deps/catch2/examples/210-Evt-EventListeners.cpp	/^std::string ws(int const level) {$/;"	f	typeref:typename:std::string
x	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        std::vector<double> x{ -12., 20., 14., 16., 30., 24. };$/;"	v	typeref:typename:std::vector<double>
x	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        std::vector<double> x{ -20., 20., 14., 16., 39., 24. };$/;"	v	typeref:typename:std::vector<double>
x	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        std::vector<double> x{ 1., 20., 14., 16., 30., 24. };$/;"	v	typeref:typename:std::vector<double>
x	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        std::vector<double> x{ 10., 20., 14., 16., 30., 24. };$/;"	v	typeref:typename:std::vector<double>
x	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        std::vector<double> x{ 10., 20., 14., 16., 36., 24. };$/;"	v	typeref:typename:std::vector<double>
x	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        std::vector<double> x{ 10., 20., 14., 16., 49., 24. };$/;"	v	typeref:typename:std::vector<double>
x	misc/deps/catch2/projects/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    std::vector<double> x{ 10., 20., 14., 16., 30., 24. };$/;"	v	typeref:typename:std::vector<double>
x	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        B x;$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:B
x	misc/deps/catch2/projects/SelfTest/UsageTests/Condition.tests.cpp	/^    double x = 1.1 + 0.1 + 0.1;$/;"	v	namespace:__anon8b7f96210110::ConditionTests	typeref:typename:double
x	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto x = GENERATE(1, 2, 3);$/;"	v	typeref:typename:auto
x	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    TestType x;$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:TestType
x	misc/deps/catch2/projects/SelfTest/UsageTests/Misc.tests.cpp	/^    std::size_t x = 0;$/;"	v	namespace:__anone7dbb1860110::MiscTests	typeref:typename:std::size_t
x	misc/deps/catch2/projects/SelfTest/UsageTests/Tricky.tests.cpp	/^    int *x = NULL;$/;"	v	typeref:typename:int *
xml	misc/deps/catch2/include/reporters/catch_reporter_junit.h	/^        XmlWriter xml;$/;"	m	class:Catch::JunitReporter	typeref:typename:XmlWriter
y	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        Y y{ 0 };$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:Y
y	misc/deps/catch2/projects/SelfTest/UsageTests/Compilation.tests.cpp	/^        Y y{0};$/;"	v	namespace:__anonb1aeb3b90110::CompilationTests	typeref:typename:Y
y	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto y = GENERATE(4, 5, 6);$/;"	v	typeref:typename:auto
z	misc/deps/catch2/projects/SelfTest/UsageTests/Generators.tests.cpp	/^    auto z = GENERATE(7, 8, 9);$/;"	v	typeref:typename:auto
~AssertionHandler	misc/deps/catch2/include/internal/catch_assertionhandler.h	/^        ~AssertionHandler() {$/;"	f	class:Catch::AssertionHandler
~AutomakeReporter	misc/deps/catch2/include/reporters/catch_reporter_automake.hpp	/^    AutomakeReporter::~AutomakeReporter() {}$/;"	f	class:Catch::AutomakeReporter
~AutomakeReporter	misc/deps/catch2/single_include/catch2/catch_reporter_automake.hpp	/^    AutomakeReporter::~AutomakeReporter() {}$/;"	f	class:Catch::AutomakeReporter
~Capturer	misc/deps/catch2/include/internal/catch_message.cpp	/^    Capturer::~Capturer() {$/;"	f	class:Catch::Capturer
~Colour	misc/deps/catch2/include/internal/catch_console_colour.cpp	/^    Colour::~Colour(){ if( !m_moved ) use( None ); }$/;"	f	class:Catch::Colour
~CompactReporter	misc/deps/catch2/include/reporters/catch_reporter_compact.cpp	/^        CompactReporter::~CompactReporter() {}$/;"	f	class:Catch::CompactReporter
~CustomStdException	misc/deps/catch2/projects/SelfTest/UsageTests/Exception.tests.cpp	/^    ~CustomStdException() noexcept override {}$/;"	f	class:__anon7fc805e90110::ExceptionTests::CustomStdException	file:
~EnumInfo	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^        EnumInfo::~EnumInfo() {}$/;"	f	class:Catch::Detail::EnumInfo
~ErrnoGuard	misc/deps/catch2/include/internal/catch_errno_guard.cpp	/^        ErrnoGuard::~ErrnoGuard() { errno = m_oldErrno; }$/;"	f	class:Catch::ErrnoGuard
~ExceptionTranslatorRegistry	misc/deps/catch2/include/internal/catch_exception_translator_registry.cpp	/^    ExceptionTranslatorRegistry::~ExceptionTranslatorRegistry() {$/;"	f	class:Catch::ExceptionTranslatorRegistry
~FatalConditionHandler	misc/deps/catch2/include/internal/catch_fatal_condition.cpp	/^    FatalConditionHandler::~FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
~GeneratorTracker	misc/deps/catch2/include/internal/catch_run_context.cpp	/^        GeneratorTracker::~GeneratorTracker() {}$/;"	f	class:Catch::Generators::GeneratorTracker
~GeneratorUntypedBase	misc/deps/catch2/include/internal/catch_generators.cpp	/^    GeneratorUntypedBase::~GeneratorUntypedBase() {}$/;"	f	class:Catch::Generators::GeneratorUntypedBase
~IGeneratorTracker	misc/deps/catch2/include/internal/catch_generators.cpp	/^IGeneratorTracker::~IGeneratorTracker() {}$/;"	f	class:Catch::IGeneratorTracker
~IMutableEnumValuesRegistry	misc/deps/catch2/include/internal/catch_enum_values_registry.cpp	/^    IMutableEnumValuesRegistry::~IMutableEnumValuesRegistry() {}$/;"	f	class:Catch::IMutableEnumValuesRegistry
~ISingleton	misc/deps/catch2/include/internal/catch_singletons.cpp	/^    ISingleton::~ISingleton() {}$/;"	f	class:Catch::ISingleton
~ITagAliasRegistry	misc/deps/catch2/include/internal/catch_tag_alias_registry.cpp	/^    ITagAliasRegistry::~ITagAliasRegistry() {}$/;"	f	class:Catch::ITagAliasRegistry
~JunitReporter	misc/deps/catch2/include/reporters/catch_reporter_junit.cpp	/^    JunitReporter::~JunitReporter() {}$/;"	f	class:Catch::JunitReporter
~LeakDetector	misc/deps/catch2/include/internal/catch_leak_detector.cpp	/^Catch::LeakDetector::~LeakDetector() {$/;"	f	class:Catch::LeakDetector
~Node	misc/deps/catch2/include/reporters/catch_reporter_bases.hpp	/^            virtual ~Node() {}$/;"	f	struct:Catch::CumulativeReporterBase::Node
~ObjectStorage	misc/deps/catch2/include/internal/benchmark/catch_constructor.hpp	/^            ~ObjectStorage() { destruct_on_exit<T>(); }$/;"	f	struct:Catch::Detail::ObjectStorage
~OcMethod	misc/deps/catch2/include/internal/catch_objc.hpp	/^        virtual ~OcMethod() {}$/;"	f	class:Catch::OcMethod
~Option	misc/deps/catch2/include/internal/catch_option.hpp	/^        ~Option() {$/;"	f	class:Catch::Option
~OutputRedirect	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    OutputRedirect::~OutputRedirect() {$/;"	f	class:Catch::OutputRedirect
~RedirectedStream	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    RedirectedStream::~RedirectedStream() {$/;"	f	class:Catch::RedirectedStream
~RedirectedStreams	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    RedirectedStreams::~RedirectedStreams() {$/;"	f	class:Catch::RedirectedStreams
~ResultValueBase	misc/deps/catch2/include/external/clara.hpp	/^        ~ResultValueBase() override {$/;"	f	class:Catch::clara::detail::ResultValueBase
~ResultValueBase	misc/deps/catch2/third_party/clara.hpp	/^        ~ResultValueBase() override {$/;"	f	class:clara::detail::ResultValueBase
~ReusableStringStream	misc/deps/catch2/include/internal/catch_stream.cpp	/^    ReusableStringStream::~ReusableStringStream() {$/;"	f	class:Catch::ReusableStringStream
~RunContext	misc/deps/catch2/include/internal/catch_run_context.cpp	/^    RunContext::~RunContext() {$/;"	f	class:Catch::RunContext
~ScopedElement	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::~ScopedElement() {$/;"	f	class:Catch::XmlWriter::ScopedElement
~ScopedMessage	misc/deps/catch2/include/internal/catch_message.cpp	/^    ScopedMessage::~ScopedMessage() {$/;"	f	class:Catch::ScopedMessage
~Section	misc/deps/catch2/include/internal/catch_section.cpp	/^    Section::~Section() {$/;"	f	class:Catch::Section
~Session	misc/deps/catch2/include/internal/catch_session.cpp	/^    Session::~Session() {$/;"	f	class:Catch::Session
~StreamBufImpl	misc/deps/catch2/include/internal/catch_stream.cpp	/^            ~StreamBufImpl() noexcept {$/;"	f	class:Catch::Detail::__anond61e3add0110::StreamBufImpl	file:
~StringRef	misc/deps/catch2/single_include/catch2/catch.hpp	/^        ~StringRef() noexcept {$/;"	f	class:Catch::StringRef
~TAPReporter	misc/deps/catch2/include/reporters/catch_reporter_tap.hpp	/^    TAPReporter::~TAPReporter() {}$/;"	f	class:Catch::TAPReporter
~TAPReporter	misc/deps/catch2/single_include/catch2/catch_reporter_tap.hpp	/^    TAPReporter::~TAPReporter() {}$/;"	f	class:Catch::TAPReporter
~TagAliasRegistry	misc/deps/catch2/include/internal/catch_tag_alias_registry.cpp	/^    TagAliasRegistry::~TagAliasRegistry() {}$/;"	f	class:Catch::TagAliasRegistry
~TeamCityReporter	misc/deps/catch2/include/reporters/catch_reporter_teamcity.hpp	/^    TeamCityReporter::~TeamCityReporter() {}$/;"	f	class:Catch::TeamCityReporter
~TeamCityReporter	misc/deps/catch2/single_include/catch2/catch_reporter_teamcity.hpp	/^    TeamCityReporter::~TeamCityReporter() {}$/;"	f	class:Catch::TeamCityReporter
~TempFile	misc/deps/catch2/include/internal/catch_output_redirect.cpp	/^    TempFile::~TempFile() {$/;"	f	class:Catch::TempFile
~XmlWriter	misc/deps/catch2/include/internal/catch_xmlwriter.cpp	/^    XmlWriter::~XmlWriter() {$/;"	f	class:Catch::XmlWriter
~out_buff	misc/deps/catch2/examples/231-Cfg-OutputStreams.cpp	/^    ~out_buff() { pubsync(); }$/;"	f	class:out_buff	file:
